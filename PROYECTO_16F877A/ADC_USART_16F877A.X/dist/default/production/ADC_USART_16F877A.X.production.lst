

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Sat Dec 10 18:30:33 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2,group=3
    17                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text24,local,class=CODE,merge=1,delta=2
    36                           	psect	text25,local,class=CODE,merge=1,delta=2
    37                           	psect	text26,local,class=CODE,merge=1,delta=2
    38                           	psect	text27,local,class=CODE,merge=1,delta=2
    39                           	psect	text28,local,class=CODE,merge=1,delta=2
    40                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    41                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    42                           	dabs	1,0x7E,2
    43  0000                     
    44                           ; Version 2.40
    45                           ; Generated 17/11/2021 GMT
    46                           ; 
    47                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    48                           ; All rights reserved.
    49                           ; 
    50                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    51                           ; 
    52                           ; Redistribution and use in source and binary forms, with or without modification, are
    53                           ; permitted provided that the following conditions are met:
    54                           ; 
    55                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    56                           ;        conditions and the following disclaimer.
    57                           ; 
    58                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    59                           ;        of conditions and the following disclaimer in the documentation and/or other
    60                           ;        materials provided with the distribution. Publication is not required when
    61                           ;        this file is used in an embedded application.
    62                           ; 
    63                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    64                           ;        software without specific prior written permission.
    65                           ; 
    66                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    67                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    68                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    69                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    70                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    71                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    72                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    73                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    74                           ; 
    75                           ; 
    76                           ; Code-generator required, PIC16F877A Definitions
    77                           ; 
    78                           ; SFR Addresses
    79  0000                     	;# 
    80  0001                     	;# 
    81  0002                     	;# 
    82  0003                     	;# 
    83  0004                     	;# 
    84  0005                     	;# 
    85  0006                     	;# 
    86  0007                     	;# 
    87  0008                     	;# 
    88  0009                     	;# 
    89  000A                     	;# 
    90  000B                     	;# 
    91  000C                     	;# 
    92  000D                     	;# 
    93  000E                     	;# 
    94  000E                     	;# 
    95  000F                     	;# 
    96  0010                     	;# 
    97  0011                     	;# 
    98  0012                     	;# 
    99  0013                     	;# 
   100  0014                     	;# 
   101  0015                     	;# 
   102  0015                     	;# 
   103  0016                     	;# 
   104  0017                     	;# 
   105  0018                     	;# 
   106  0019                     	;# 
   107  001A                     	;# 
   108  001B                     	;# 
   109  001B                     	;# 
   110  001C                     	;# 
   111  001D                     	;# 
   112  001E                     	;# 
   113  001F                     	;# 
   114  0081                     	;# 
   115  0085                     	;# 
   116  0086                     	;# 
   117  0087                     	;# 
   118  0088                     	;# 
   119  0089                     	;# 
   120  008C                     	;# 
   121  008D                     	;# 
   122  008E                     	;# 
   123  0091                     	;# 
   124  0092                     	;# 
   125  0093                     	;# 
   126  0094                     	;# 
   127  0098                     	;# 
   128  0099                     	;# 
   129  009C                     	;# 
   130  009D                     	;# 
   131  009E                     	;# 
   132  009F                     	;# 
   133  010C                     	;# 
   134  010D                     	;# 
   135  010E                     	;# 
   136  010F                     	;# 
   137  018C                     	;# 
   138  018D                     	;# 
   139  0000                     	;# 
   140  0001                     	;# 
   141  0002                     	;# 
   142  0003                     	;# 
   143  0004                     	;# 
   144  0005                     	;# 
   145  0006                     	;# 
   146  0007                     	;# 
   147  0008                     	;# 
   148  0009                     	;# 
   149  000A                     	;# 
   150  000B                     	;# 
   151  000C                     	;# 
   152  000D                     	;# 
   153  000E                     	;# 
   154  000E                     	;# 
   155  000F                     	;# 
   156  0010                     	;# 
   157  0011                     	;# 
   158  0012                     	;# 
   159  0013                     	;# 
   160  0014                     	;# 
   161  0015                     	;# 
   162  0015                     	;# 
   163  0016                     	;# 
   164  0017                     	;# 
   165  0018                     	;# 
   166  0019                     	;# 
   167  001A                     	;# 
   168  001B                     	;# 
   169  001B                     	;# 
   170  001C                     	;# 
   171  001D                     	;# 
   172  001E                     	;# 
   173  001F                     	;# 
   174  0081                     	;# 
   175  0085                     	;# 
   176  0086                     	;# 
   177  0087                     	;# 
   178  0088                     	;# 
   179  0089                     	;# 
   180  008C                     	;# 
   181  008D                     	;# 
   182  008E                     	;# 
   183  0091                     	;# 
   184  0092                     	;# 
   185  0093                     	;# 
   186  0094                     	;# 
   187  0098                     	;# 
   188  0099                     	;# 
   189  009C                     	;# 
   190  009D                     	;# 
   191  009E                     	;# 
   192  009F                     	;# 
   193  010C                     	;# 
   194  010D                     	;# 
   195  010E                     	;# 
   196  010F                     	;# 
   197  018C                     	;# 
   198  018D                     	;# 
   199  0000                     	;# 
   200  0001                     	;# 
   201  0002                     	;# 
   202  0003                     	;# 
   203  0004                     	;# 
   204  0005                     	;# 
   205  0006                     	;# 
   206  0007                     	;# 
   207  0008                     	;# 
   208  0009                     	;# 
   209  000A                     	;# 
   210  000B                     	;# 
   211  000C                     	;# 
   212  000D                     	;# 
   213  000E                     	;# 
   214  000E                     	;# 
   215  000F                     	;# 
   216  0010                     	;# 
   217  0011                     	;# 
   218  0012                     	;# 
   219  0013                     	;# 
   220  0014                     	;# 
   221  0015                     	;# 
   222  0015                     	;# 
   223  0016                     	;# 
   224  0017                     	;# 
   225  0018                     	;# 
   226  0019                     	;# 
   227  001A                     	;# 
   228  001B                     	;# 
   229  001B                     	;# 
   230  001C                     	;# 
   231  001D                     	;# 
   232  001E                     	;# 
   233  001F                     	;# 
   234  0081                     	;# 
   235  0085                     	;# 
   236  0086                     	;# 
   237  0087                     	;# 
   238  0088                     	;# 
   239  0089                     	;# 
   240  008C                     	;# 
   241  008D                     	;# 
   242  008E                     	;# 
   243  0091                     	;# 
   244  0092                     	;# 
   245  0093                     	;# 
   246  0094                     	;# 
   247  0098                     	;# 
   248  0099                     	;# 
   249  009C                     	;# 
   250  009D                     	;# 
   251  009E                     	;# 
   252  009F                     	;# 
   253  010C                     	;# 
   254  010D                     	;# 
   255  010E                     	;# 
   256  010F                     	;# 
   257  018C                     	;# 
   258  018D                     	;# 
   259                           
   260                           	psect	strings
   261  1800                     __pstrings:
   262  1800                     stringtab:
   263  1800                     __stringtab:
   264  1800                     stringcode:	
   265                           ;	String table - string pointers are 1 byte each
   266                           
   267  1800                     stringdir:
   268  1800  3018               	movlw	high stringdir
   269  1801  008A               	movwf	10
   270  1802  0804               	movf	4,w
   271  1803  0A84               	incf	4,f
   272  1804  0782               	addwf	2,f
   273  1805                     __stringbase:
   274  1805  3400               	retlw	0
   275  1806                     __end_of__stringtab:
   276  1806                     __powers_:
   277  1806  3400               	retlw	0
   278  1807  3400               	retlw	0
   279  1808  3480               	retlw	128
   280  1809  343F               	retlw	63
   281  180A  3400               	retlw	0
   282  180B  3400               	retlw	0
   283  180C  3420               	retlw	32
   284  180D  3441               	retlw	65
   285  180E  3400               	retlw	0
   286  180F  3400               	retlw	0
   287  1810  34C8               	retlw	200
   288  1811  3442               	retlw	66
   289  1812  3400               	retlw	0
   290  1813  3400               	retlw	0
   291  1814  347A               	retlw	122
   292  1815  3444               	retlw	68
   293  1816  3400               	retlw	0
   294  1817  3440               	retlw	64
   295  1818  341C               	retlw	28
   296  1819  3446               	retlw	70
   297  181A  3400               	retlw	0
   298  181B  3450               	retlw	80
   299  181C  34C3               	retlw	195
   300  181D  3447               	retlw	71
   301  181E  3400               	retlw	0
   302  181F  3424               	retlw	36
   303  1820  3474               	retlw	116
   304  1821  3449               	retlw	73
   305  1822  3480               	retlw	128
   306  1823  3496               	retlw	150
   307  1824  3418               	retlw	24
   308  1825  344B               	retlw	75
   309  1826  3420               	retlw	32
   310  1827  34BC               	retlw	188
   311  1828  34BE               	retlw	190
   312  1829  344C               	retlw	76
   313  182A  3428               	retlw	40
   314  182B  346B               	retlw	107
   315  182C  346E               	retlw	110
   316  182D  344E               	retlw	78
   317  182E  34F9               	retlw	249
   318  182F  3402               	retlw	2
   319  1830  3415               	retlw	21
   320  1831  3450               	retlw	80
   321  1832  34EC               	retlw	236
   322  1833  3478               	retlw	120
   323  1834  34AD               	retlw	173
   324  1835  3460               	retlw	96
   325  1836  34CA               	retlw	202
   326  1837  34F2               	retlw	242
   327  1838  3449               	retlw	73
   328  1839  3471               	retlw	113
   329  183A                     __end_of__powers_:
   330  183A                     __npowers_:
   331  183A  3400               	retlw	0
   332  183B  3400               	retlw	0
   333  183C  3480               	retlw	128
   334  183D  343F               	retlw	63
   335  183E  34CD               	retlw	205
   336  183F  34CC               	retlw	204
   337  1840  34CC               	retlw	204
   338  1841  343D               	retlw	61
   339  1842  340A               	retlw	10
   340  1843  34D7               	retlw	215
   341  1844  3423               	retlw	35
   342  1845  343C               	retlw	60
   343  1846  346F               	retlw	111
   344  1847  3412               	retlw	18
   345  1848  3483               	retlw	131
   346  1849  343A               	retlw	58
   347  184A  3417               	retlw	23
   348  184B  34B7               	retlw	183
   349  184C  34D1               	retlw	209
   350  184D  3438               	retlw	56
   351  184E  34AC               	retlw	172
   352  184F  34C5               	retlw	197
   353  1850  3427               	retlw	39
   354  1851  3437               	retlw	55
   355  1852  34BD               	retlw	189
   356  1853  3437               	retlw	55
   357  1854  3486               	retlw	134
   358  1855  3435               	retlw	53
   359  1856  3495               	retlw	149
   360  1857  34BF               	retlw	191
   361  1858  34D6               	retlw	214
   362  1859  3433               	retlw	51
   363  185A  3477               	retlw	119
   364  185B  34CC               	retlw	204
   365  185C  342B               	retlw	43
   366  185D  3432               	retlw	50
   367  185E  345F               	retlw	95
   368  185F  3470               	retlw	112
   369  1860  3489               	retlw	137
   370  1861  3430               	retlw	48
   371  1862  34FF               	retlw	255
   372  1863  34E6               	retlw	230
   373  1864  34DB               	retlw	219
   374  1865  342E               	retlw	46
   375  1866  3408               	retlw	8
   376  1867  34E5               	retlw	229
   377  1868  343C               	retlw	60
   378  1869  341E               	retlw	30
   379  186A  3460               	retlw	96
   380  186B  3442               	retlw	66
   381  186C  34A2               	retlw	162
   382  186D  340D               	retlw	13
   383  186E                     __end_of__npowers_:
   384  186E                     _dpowers:
   385  186E  3401               	retlw	1
   386  186F  3400               	retlw	0
   387  1870  3400               	retlw	0
   388  1871  3400               	retlw	0
   389  1872  340A               	retlw	10
   390  1873  3400               	retlw	0
   391  1874  3400               	retlw	0
   392  1875  3400               	retlw	0
   393  1876  3464               	retlw	100
   394  1877  3400               	retlw	0
   395  1878  3400               	retlw	0
   396  1879  3400               	retlw	0
   397  187A  34E8               	retlw	232
   398  187B  3403               	retlw	3
   399  187C  3400               	retlw	0
   400  187D  3400               	retlw	0
   401  187E  3410               	retlw	16
   402  187F  3427               	retlw	39
   403  1880  3400               	retlw	0
   404  1881  3400               	retlw	0
   405  1882  34A0               	retlw	160
   406  1883  3486               	retlw	134
   407  1884  3401               	retlw	1
   408  1885  3400               	retlw	0
   409  1886  3440               	retlw	64
   410  1887  3442               	retlw	66
   411  1888  340F               	retlw	15
   412  1889  3400               	retlw	0
   413  188A  3480               	retlw	128
   414  188B  3496               	retlw	150
   415  188C  3498               	retlw	152
   416  188D  3400               	retlw	0
   417  188E  3400               	retlw	0
   418  188F  34E1               	retlw	225
   419  1890  34F5               	retlw	245
   420  1891  3405               	retlw	5
   421  1892  3400               	retlw	0
   422  1893  34CA               	retlw	202
   423  1894  349A               	retlw	154
   424  1895  343B               	retlw	59
   425  1896                     __end_of_dpowers:
   426  0019                     _TXREG	set	25
   427  0018                     _RCSTAbits	set	24
   428  001E                     _ADRESH	set	30
   429  001F                     _ADCON0	set	31
   430  001F                     _ADCON0bits	set	31
   431  0099                     _SPBRG	set	153
   432  0098                     _TXSTAbits	set	152
   433  009E                     _ADRESL	set	158
   434  009F                     _ADCON1bits	set	159
   435  04C1                     _TRMT	set	1217
   436  04C2                     _BRGH	set	1218
   437  1896                     STR_1:
   438  1896  3425               	retlw	37	;'%'
   439  1897  342E               	retlw	46	;'.'
   440  1898  3430               	retlw	48	;'0'
   441  1899  3432               	retlw	50	;'2'
   442  189A  3466               	retlw	102	;'f'
   443  189B  340D               	retlw	13
   444  189C  340A               	retlw	10
   445  189D  3400               	retlw	0
   446                           
   447                           	psect	cinit
   448  07F3                     start_initialization:	
   449                           ; #config settings
   450                           
   451  07F3                     __initialization:
   452                           
   453                           ; Clear objects allocated to BANK1
   454  07F3  1383               	bcf	3,7	;select IRP bank0
   455  07F4  30C8               	movlw	low __pbssBANK1
   456  07F5  0084               	movwf	4
   457  07F6  30E4               	movlw	low (__pbssBANK1+28)
   458  07F7  160A  158A  24D7  120A  118A  	fcall	clear_ram0
   459  07FC                     end_of_initialization:	
   460                           ;End of C runtime variable initialization code
   461                           
   462  07FC                     __end_of__initialization:
   463  07FC  0183               	clrf	3
   464  07FD  120A  118A  2804   	ljmp	_main	;jump to C main() function
   465                           
   466                           	psect	bssBANK1
   467  00C8                     __pbssBANK1:
   468  00C8                     _tension:
   469  00C8                     	ds	4
   470  00CC                     _data:
   471  00CC                     	ds	2
   472  00CE                     _bufferLen:
   473  00CE                     	ds	2
   474  00D0                     _bufferTx:
   475  00D0                     	ds	20
   476                           
   477                           	psect	clrtext
   478  1CD7                     clear_ram0:	
   479                           ;	Called with FSR containing the base address, and
   480                           ;	W with the last address+1
   481                           
   482  1CD7  0064               	clrwdt	;clear the watchdog before getting into this loop
   483  1CD8                     clrloop0:
   484  1CD8  0180               	clrf	0	;clear RAM location pointed to by FSR
   485  1CD9  0A84               	incf	4,f	;increment pointer
   486  1CDA  0604               	xorwf	4,w	;XOR with final address
   487  1CDB  1903               	btfsc	3,2	;have we reached the end yet?
   488  1CDC  3400               	retlw	0	;all done for this memory range, return
   489  1CDD  0604               	xorwf	4,w	;XOR again to restore value
   490  1CDE  2CD8               	goto	clrloop0	;do the next byte
   491                           
   492                           	psect	cstackBANK1
   493  00A0                     __pcstackBANK1:
   494  00A0                     ?_sprintf:
   495  00A0                     sprintf@f:	
   496                           ; 2 bytes @ 0x0
   497                           
   498                           
   499                           ; 1 bytes @ 0x0
   500  00A0                     	ds	5
   501  00A5                     ??_sprintf:
   502                           
   503                           ; 1 bytes @ 0x5
   504  00A5                     	ds	5
   505  00AA                     _sprintf$957:
   506                           
   507                           ; 4 bytes @ 0xA
   508  00AA                     	ds	4
   509  00AE                     sprintf@ap:
   510                           
   511                           ; 1 bytes @ 0xE
   512  00AE                     	ds	1
   513  00AF                     sprintf@ccnt:
   514                           
   515                           ; 2 bytes @ 0xF
   516  00AF                     	ds	2
   517  00B1                     sprintf@flag:
   518                           
   519                           ; 2 bytes @ 0x11
   520  00B1                     	ds	2
   521  00B3                     sprintf@val:
   522                           
   523                           ; 4 bytes @ 0x13
   524  00B3                     	ds	4
   525  00B7                     sprintf@eexp:
   526                           
   527                           ; 2 bytes @ 0x17
   528  00B7                     	ds	2
   529  00B9                     sprintf@tmpval:
   530                           
   531                           ; 4 bytes @ 0x19
   532  00B9                     	ds	4
   533  00BD                     sprintf@sp:
   534                           
   535                           ; 1 bytes @ 0x1D
   536  00BD                     	ds	1
   537  00BE                     sprintf@prec:
   538                           
   539                           ; 2 bytes @ 0x1E
   540  00BE                     	ds	2
   541  00C0                     sprintf@fval:
   542                           
   543                           ; 4 bytes @ 0x20
   544  00C0                     	ds	4
   545  00C4                     sprintf@c:
   546                           
   547                           ; 1 bytes @ 0x24
   548  00C4                     	ds	1
   549  00C5                     ??_main:
   550                           
   551                           ; 1 bytes @ 0x25
   552  00C5                     	ds	3
   553                           
   554                           	psect	cstackCOMMON
   555  0070                     __pcstackCOMMON:
   556  0070                     ?_isdigit:
   557  0070                     ?___fleq:	
   558                           ; 1 bit 
   559                           
   560  0070                     ?___flge:	
   561                           ; 1 bit 
   562                           
   563  0070                     ?_UART_Config:	
   564                           ; 1 bit 
   565                           
   566  0070                     ?_ADC_Convertion:	
   567                           ; 1 bytes @ 0x0
   568                           
   569  0070                     ??_ADC_Convertion:	
   570                           ; 1 bytes @ 0x0
   571                           
   572  0070                     ??_isdigit:	
   573                           ; 1 bytes @ 0x0
   574                           
   575  0070                     ?_main:	
   576                           ; 1 bytes @ 0x0
   577                           
   578  0070                     ?_UART_Transmit:	
   579                           ; 1 bytes @ 0x0
   580                           
   581  0070                     ??_UART_Transmit:	
   582                           ; 1 bytes @ 0x0
   583                           
   584  0070                     ?_ADC_Read:	
   585                           ; 1 bytes @ 0x0
   586                           
   587  0070                     ?__Umul8_16:	
   588                           ; 2 bytes @ 0x0
   589                           
   590  0070                     ?___wmul:	
   591                           ; 2 bytes @ 0x0
   592                           
   593  0070                     ?___awmod:	
   594                           ; 2 bytes @ 0x0
   595                           
   596  0070                     ?___lwmod:	
   597                           ; 2 bytes @ 0x0
   598                           
   599  0070                     ?__tdiv_to_l_:	
   600                           ; 2 bytes @ 0x0
   601                           
   602  0070                     ?__div_to_l_:	
   603                           ; 4 bytes @ 0x0
   604                           
   605  0070                     ?___lldiv:	
   606                           ; 4 bytes @ 0x0
   607                           
   608  0070                     ?___flneg:	
   609                           ; 4 bytes @ 0x0
   610                           
   611  0070                     ?___llmod:	
   612                           ; 4 bytes @ 0x0
   613                           
   614  0070                     ?___xxtofl:	
   615                           ; 4 bytes @ 0x0
   616                           
   617  0070                     UART_Transmit@data:	
   618                           ; 4 bytes @ 0x0
   619                           
   620  0070                     __Umul8_16@multiplicand:	
   621                           ; 1 bytes @ 0x0
   622                           
   623  0070                     _isdigit$786:	
   624                           ; 1 bytes @ 0x0
   625                           
   626  0070                     ___wmul@multiplier:	
   627                           ; 1 bytes @ 0x0
   628                           
   629  0070                     ___awmod@divisor:	
   630                           ; 2 bytes @ 0x0
   631                           
   632  0070                     ___lwmod@divisor:	
   633                           ; 2 bytes @ 0x0
   634                           
   635  0070                     UART_Config@baudios:	
   636                           ; 2 bytes @ 0x0
   637                           
   638  0070                     ___lldiv@divisor:	
   639                           ; 4 bytes @ 0x0
   640                           
   641  0070                     __div_to_l_@f1:	
   642                           ; 4 bytes @ 0x0
   643                           
   644  0070                     ___fleq@ff1:	
   645                           ; 4 bytes @ 0x0
   646                           
   647  0070                     ___flge@ff1:	
   648                           ; 4 bytes @ 0x0
   649                           
   650  0070                     ___flneg@f1:	
   651                           ; 4 bytes @ 0x0
   652                           
   653  0070                     __tdiv_to_l_@f1:	
   654                           ; 4 bytes @ 0x0
   655                           
   656  0070                     ___llmod@divisor:	
   657                           ; 4 bytes @ 0x0
   658                           
   659  0070                     ___xxtofl@val:	
   660                           ; 4 bytes @ 0x0
   661                           
   662                           
   663                           ; 4 bytes @ 0x0
   664  0070                     	ds	1
   665  0071                     ?_UART_SendData:
   666  0071                     UART_SendData@Size:	
   667                           ; 1 bytes @ 0x1
   668                           
   669  0071                     isdigit@c:	
   670                           ; 1 bytes @ 0x1
   671                           
   672                           
   673                           ; 1 bytes @ 0x1
   674  0071                     	ds	1
   675  0072                     ??_ADC_Read:
   676  0072                     ??_UART_SendData:	
   677                           ; 1 bytes @ 0x2
   678                           
   679  0072                     ??__Umul8_16:	
   680                           ; 1 bytes @ 0x2
   681                           
   682  0072                     ___wmul@multiplicand:	
   683                           ; 1 bytes @ 0x2
   684                           
   685  0072                     ___awmod@dividend:	
   686                           ; 2 bytes @ 0x2
   687                           
   688  0072                     ___lwmod@dividend:	
   689                           ; 2 bytes @ 0x2
   690                           
   691                           
   692                           ; 2 bytes @ 0x2
   693  0072                     	ds	1
   694  0073                     UART_SendData@pData:
   695                           
   696                           ; 1 bytes @ 0x3
   697  0073                     	ds	1
   698  0074                     ??_UART_Config:
   699  0074                     ??___wmul:	
   700                           ; 1 bytes @ 0x4
   701                           
   702  0074                     ??___awmod:	
   703                           ; 1 bytes @ 0x4
   704                           
   705  0074                     ??___flneg:	
   706                           ; 1 bytes @ 0x4
   707                           
   708  0074                     ??___lwmod:	
   709                           ; 1 bytes @ 0x4
   710                           
   711  0074                     ??___xxtofl:	
   712                           ; 1 bytes @ 0x4
   713                           
   714  0074                     ADC_Read@CHx:	
   715                           ; 1 bytes @ 0x4
   716                           
   717  0074                     ___wmul@product:	
   718                           ; 1 bytes @ 0x4
   719                           
   720  0074                     __Umul8_16@product:	
   721                           ; 2 bytes @ 0x4
   722                           
   723  0074                     ___lldiv@dividend:	
   724                           ; 2 bytes @ 0x4
   725                           
   726  0074                     __div_to_l_@f2:	
   727                           ; 4 bytes @ 0x4
   728                           
   729  0074                     ___fleq@ff2:	
   730                           ; 4 bytes @ 0x4
   731                           
   732  0074                     ___flge@ff2:	
   733                           ; 4 bytes @ 0x4
   734                           
   735  0074                     __tdiv_to_l_@f2:	
   736                           ; 4 bytes @ 0x4
   737                           
   738  0074                     ___llmod@dividend:	
   739                           ; 4 bytes @ 0x4
   740                           
   741                           
   742                           ; 4 bytes @ 0x4
   743  0074                     	ds	1
   744  0075                     UART_Config@speed:
   745  0075                     ___awmod@counter:	
   746                           ; 1 bytes @ 0x5
   747                           
   748  0075                     ___lwmod@counter:	
   749                           ; 1 bytes @ 0x5
   750                           
   751                           
   752                           ; 1 bytes @ 0x5
   753  0075                     	ds	1
   754  0076                     ?___lwdiv:
   755  0076                     UART_Config@baud:	
   756                           ; 2 bytes @ 0x6
   757                           
   758  0076                     ___awmod@sign:	
   759                           ; 1 bytes @ 0x6
   760                           
   761  0076                     ___lwdiv@divisor:	
   762                           ; 1 bytes @ 0x6
   763                           
   764  0076                     __Umul8_16@word_mpld:	
   765                           ; 2 bytes @ 0x6
   766                           
   767                           
   768                           ; 2 bytes @ 0x6
   769  0076                     	ds	1
   770  0077                     ?___awdiv:
   771  0077                     ___awdiv@divisor:	
   772                           ; 2 bytes @ 0x7
   773                           
   774                           
   775                           ; 2 bytes @ 0x7
   776  0077                     	ds	1
   777  0078                     ??__tdiv_to_l_:
   778  0078                     ??__div_to_l_:	
   779                           ; 1 bytes @ 0x8
   780                           
   781  0078                     ??___lldiv:	
   782                           ; 1 bytes @ 0x8
   783                           
   784  0078                     ??___fleq:	
   785                           ; 1 bytes @ 0x8
   786                           
   787  0078                     ??___flge:	
   788                           ; 1 bytes @ 0x8
   789                           
   790  0078                     ??___llmod:	
   791                           ; 1 bytes @ 0x8
   792                           
   793  0078                     __Umul8_16@multiplier:	
   794                           ; 1 bytes @ 0x8
   795                           
   796  0078                     ___xxtofl@sign:	
   797                           ; 1 bytes @ 0x8
   798                           
   799  0078                     ___lwdiv@dividend:	
   800                           ; 1 bytes @ 0x8
   801                           
   802                           
   803                           ; 2 bytes @ 0x8
   804  0078                     	ds	1
   805  0079                     ___llmod@counter:
   806  0079                     ___xxtofl@exp:	
   807                           ; 1 bytes @ 0x9
   808                           
   809  0079                     ___awdiv@dividend:	
   810                           ; 1 bytes @ 0x9
   811                           
   812  0079                     ___lldiv@quotient:	
   813                           ; 2 bytes @ 0x9
   814                           
   815                           
   816                           ; 4 bytes @ 0x9
   817  0079                     	ds	1
   818  007A                     ??___lwdiv:
   819  007A                     ___xxtofl@arg:	
   820                           ; 1 bytes @ 0xA
   821                           
   822                           
   823                           ; 4 bytes @ 0xA
   824  007A                     	ds	1
   825  007B                     ??___awdiv:
   826  007B                     ___lwdiv@quotient:	
   827                           ; 1 bytes @ 0xB
   828                           
   829                           
   830                           ; 2 bytes @ 0xB
   831  007B                     	ds	2
   832  007D                     ___lldiv@counter:
   833  007D                     ___lwdiv@counter:	
   834                           ; 1 bytes @ 0xD
   835                           
   836                           
   837                           ; 1 bytes @ 0xD
   838  007D                     	ds	1
   839  007E                     ??___flsub:
   840                           
   841                           	psect	cstackBANK0
   842  0020                     __pcstackBANK0:	
   843                           ; 1 bytes @ 0xE
   844                           
   845  0020                     ___awdiv@counter:
   846  0020                     __div_to_l_@quot:	
   847                           ; 1 bytes @ 0x0
   848                           
   849  0020                     __tdiv_to_l_@quot:	
   850                           ; 4 bytes @ 0x0
   851                           
   852                           
   853                           ; 4 bytes @ 0x0
   854  0020                     	ds	1
   855  0021                     ___awdiv@sign:
   856                           
   857                           ; 1 bytes @ 0x1
   858  0021                     	ds	1
   859  0022                     ___awdiv@quotient:
   860                           
   861                           ; 2 bytes @ 0x2
   862  0022                     	ds	2
   863  0024                     ?___flmul:
   864  0024                     __div_to_l_@cntr:	
   865                           ; 4 bytes @ 0x4
   866                           
   867  0024                     __tdiv_to_l_@cntr:	
   868                           ; 1 bytes @ 0x4
   869                           
   870  0024                     ___flmul@b:	
   871                           ; 1 bytes @ 0x4
   872                           
   873                           
   874                           ; 4 bytes @ 0x4
   875  0024                     	ds	1
   876  0025                     __div_to_l_@exp1:
   877  0025                     __tdiv_to_l_@exp1:	
   878                           ; 1 bytes @ 0x5
   879                           
   880                           
   881                           ; 1 bytes @ 0x5
   882  0025                     	ds	3
   883  0028                     ___flmul@a:
   884                           
   885                           ; 4 bytes @ 0x8
   886  0028                     	ds	4
   887  002C                     ??___flmul:
   888                           
   889                           ; 1 bytes @ 0xC
   890  002C                     	ds	5
   891  0031                     ___flmul@sign:
   892                           
   893                           ; 1 bytes @ 0x11
   894  0031                     	ds	1
   895  0032                     ___flmul@grs:
   896                           
   897                           ; 4 bytes @ 0x12
   898  0032                     	ds	4
   899  0036                     ___flmul@aexp:
   900                           
   901                           ; 1 bytes @ 0x16
   902  0036                     	ds	1
   903  0037                     ___flmul@bexp:
   904                           
   905                           ; 1 bytes @ 0x17
   906  0037                     	ds	1
   907  0038                     ___flmul@prod:
   908                           
   909                           ; 4 bytes @ 0x18
   910  0038                     	ds	4
   911  003C                     ___flmul@temp:
   912                           
   913                           ; 2 bytes @ 0x1C
   914  003C                     	ds	2
   915  003E                     ?_fround:
   916  003E                     ?_scale:	
   917                           ; 4 bytes @ 0x1E
   918                           
   919  003E                     ?___fldiv:	
   920                           ; 4 bytes @ 0x1E
   921                           
   922  003E                     ___fldiv@a:	
   923                           ; 4 bytes @ 0x1E
   924                           
   925                           
   926                           ; 4 bytes @ 0x1E
   927  003E                     	ds	4
   928  0042                     ??_fround:
   929  0042                     ??_scale:	
   930                           ; 1 bytes @ 0x22
   931                           
   932  0042                     ___fldiv@b:	
   933                           ; 1 bytes @ 0x22
   934                           
   935                           
   936                           ; 4 bytes @ 0x22
   937  0042                     	ds	4
   938  0046                     ??___fldiv:
   939                           
   940                           ; 1 bytes @ 0x26
   941  0046                     	ds	3
   942  0049                     _fround$955:
   943                           
   944                           ; 4 bytes @ 0x29
   945  0049                     	ds	2
   946  004B                     ___fldiv@rem:
   947                           
   948                           ; 4 bytes @ 0x2B
   949  004B                     	ds	1
   950  004C                     _scale$956:
   951                           
   952                           ; 4 bytes @ 0x2C
   953  004C                     	ds	1
   954  004D                     _fround$954:
   955                           
   956                           ; 4 bytes @ 0x2D
   957  004D                     	ds	2
   958  004F                     ___fldiv@sign:
   959                           
   960                           ; 1 bytes @ 0x2F
   961  004F                     	ds	1
   962  0050                     scale@scl:
   963  0050                     ___fldiv@new_exp:	
   964                           ; 1 bytes @ 0x30
   965                           
   966                           
   967                           ; 2 bytes @ 0x30
   968  0050                     	ds	1
   969  0051                     ?___fltol:
   970  0051                     fround@prec:	
   971                           ; 4 bytes @ 0x31
   972                           
   973  0051                     ___fltol@f1:	
   974                           ; 1 bytes @ 0x31
   975                           
   976                           
   977                           ; 4 bytes @ 0x31
   978  0051                     	ds	1
   979  0052                     ?___fladd:
   980  0052                     ___fladd@b:	
   981                           ; 4 bytes @ 0x32
   982                           
   983  0052                     ___fldiv@grs:	
   984                           ; 4 bytes @ 0x32
   985                           
   986                           
   987                           ; 4 bytes @ 0x32
   988  0052                     	ds	3
   989  0055                     ??___fltol:
   990                           
   991                           ; 1 bytes @ 0x35
   992  0055                     	ds	1
   993  0056                     ___fldiv@bexp:
   994  0056                     ___fladd@a:	
   995                           ; 1 bytes @ 0x36
   996                           
   997                           
   998                           ; 4 bytes @ 0x36
   999  0056                     	ds	1
  1000  0057                     ___fldiv@aexp:
  1001                           
  1002                           ; 1 bytes @ 0x37
  1003  0057                     	ds	3
  1004  005A                     ??___fladd:
  1005  005A                     ___fltol@sign1:	
  1006                           ; 1 bytes @ 0x3A
  1007                           
  1008                           
  1009                           ; 1 bytes @ 0x3A
  1010  005A                     	ds	1
  1011  005B                     ___fltol@exp1:
  1012                           
  1013                           ; 1 bytes @ 0x3B
  1014  005B                     	ds	7
  1015  0062                     ___fladd@signs:
  1016                           
  1017                           ; 1 bytes @ 0x42
  1018  0062                     	ds	1
  1019  0063                     ___fladd@aexp:
  1020                           
  1021                           ; 1 bytes @ 0x43
  1022  0063                     	ds	1
  1023  0064                     ___fladd@bexp:
  1024                           
  1025                           ; 1 bytes @ 0x44
  1026  0064                     	ds	1
  1027  0065                     ___fladd@grs:
  1028                           
  1029                           ; 1 bytes @ 0x45
  1030  0065                     	ds	1
  1031  0066                     ?___flsub:
  1032  0066                     ___flsub@a:	
  1033                           ; 4 bytes @ 0x46
  1034                           
  1035                           
  1036                           ; 4 bytes @ 0x46
  1037  0066                     	ds	4
  1038  006A                     ___flsub@b:
  1039                           
  1040                           ; 4 bytes @ 0x4A
  1041  006A                     	ds	4
  1042                           
  1043                           	psect	maintext
  1044  0004                     __pmaintext:	
  1045 ;;
  1046 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1047 ;;
  1048 ;; *************** function _main *****************
  1049 ;; Defined at:
  1050 ;;		line 47 in file "main.c"
  1051 ;; Parameters:    Size  Location     Type
  1052 ;;		None
  1053 ;; Auto vars:     Size  Location     Type
  1054 ;;		None
  1055 ;; Return value:  Size  Location     Type
  1056 ;;                  1    wreg      void 
  1057 ;; Registers used:
  1058 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1059 ;; Tracked objects:
  1060 ;;		On entry : B00/0
  1061 ;;		On exit  : 0/0
  1062 ;;		Unchanged: 0/0
  1063 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1064 ;;      Params:         0       0       0       0       0
  1065 ;;      Locals:         0       0       0       0       0
  1066 ;;      Temps:          0       0       3       0       0
  1067 ;;      Totals:         0       0       3       0       0
  1068 ;;Total ram usage:        3 bytes
  1069 ;; Hardware stack levels required when called: 4
  1070 ;; This function calls:
  1071 ;;		_ADC_Convertion
  1072 ;;		_ADC_Read
  1073 ;;		_UART_Config
  1074 ;;		_UART_SendData
  1075 ;;		___fldiv
  1076 ;;		___flmul
  1077 ;;		___xxtofl
  1078 ;;		_sprintf
  1079 ;; This function is called by:
  1080 ;;		Startup code after reset
  1081 ;; This function uses a non-reentrant model
  1082 ;;
  1083                           
  1084  0004                     _main:	
  1085                           ;psect for function _main
  1086                           
  1087  0004                     l3380:	
  1088                           ;incstack = 0
  1089                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1090                           
  1091                           
  1092                           ;main.c: 51:     UART_Config(BRGH,9600);
  1093  0004  3000               	movlw	0
  1094  0005  00F3               	movwf	UART_Config@baudios+3
  1095  0006  3000               	movlw	0
  1096  0007  00F2               	movwf	UART_Config@baudios+2
  1097  0008  3025               	movlw	37
  1098  0009  00F1               	movwf	UART_Config@baudios+1
  1099  000A  3080               	movlw	128
  1100  000B  00F0               	movwf	UART_Config@baudios
  1101  000C  3000               	movlw	0
  1102  000D  1683               	bsf	3,5	;RP0=1, select bank1
  1103  000E  1303               	bcf	3,6	;RP1=0, select bank1
  1104  000F  1918               	btfsc	24,2	;volatile
  1105  0010  3001               	movlw	1
  1106  0011  160A  158A  2526  120A  118A  	fcall	_UART_Config
  1107  0016                     l3382:
  1108                           
  1109                           ;main.c: 52:     ADC_Convertion();
  1110  0016  160A  158A  24FC  120A  118A  	fcall	_ADC_Convertion
  1111  001B                     l3384:
  1112                           
  1113                           ;main.c: 55:         data = ADC_Read(3);
  1114  001B  3003               	movlw	3
  1115  001C  160A  118A  200C  120A  118A  	fcall	_ADC_Read
  1116  0021  0871               	movf	?_ADC_Read+1,w
  1117  0022  1683               	bsf	3,5	;RP0=1, select bank1
  1118  0023  1303               	bcf	3,6	;RP1=0, select bank1
  1119  0024  00CD               	movwf	(_data+1)^(0+128)
  1120  0025  0870               	movf	?_ADC_Read,w
  1121  0026  00CC               	movwf	_data^(0+128)
  1122  0027                     l3386:
  1123                           
  1124                           ;main.c: 56:         tension = data*5.0/1024.0 ;
  1125  0027  3044               	movlw	68
  1126  0028  1283               	bcf	3,5	;RP0=0, select bank0
  1127  0029  1303               	bcf	3,6	;RP1=0, select bank0
  1128  002A  00C1               	movwf	___fldiv@a+3
  1129  002B  3080               	movlw	128
  1130  002C  00C0               	movwf	___fldiv@a+2
  1131  002D  3000               	movlw	0
  1132  002E  00BF               	movwf	___fldiv@a+1
  1133  002F  3000               	movlw	0
  1134  0030  00BE               	movwf	___fldiv@a
  1135  0031  3040               	movlw	64
  1136  0032  00A7               	movwf	___flmul@b+3
  1137  0033  30A0               	movlw	160
  1138  0034  00A6               	movwf	___flmul@b+2
  1139  0035  3000               	movlw	0
  1140  0036  00A5               	movwf	___flmul@b+1
  1141  0037  3000               	movlw	0
  1142  0038  00A4               	movwf	___flmul@b
  1143  0039  1683               	bsf	3,5	;RP0=1, select bank1
  1144  003A  1303               	bcf	3,6	;RP1=0, select bank1
  1145  003B  084C               	movf	_data^(0+128),w
  1146  003C  00F0               	movwf	___xxtofl@val
  1147  003D  084D               	movf	(_data+1)^(0+128),w
  1148  003E  00F1               	movwf	___xxtofl@val+1
  1149  003F  01F2               	clrf	___xxtofl@val+2
  1150  0040  01F3               	clrf	___xxtofl@val+3
  1151  0041  3000               	movlw	0
  1152  0042  160A  118A  20D6  120A  118A  	fcall	___xxtofl
  1153  0047  0873               	movf	?___xxtofl+3,w
  1154  0048  1283               	bcf	3,5	;RP0=0, select bank0
  1155  0049  1303               	bcf	3,6	;RP1=0, select bank0
  1156  004A  00AB               	movwf	___flmul@a+3
  1157  004B  0872               	movf	?___xxtofl+2,w
  1158  004C  00AA               	movwf	___flmul@a+2
  1159  004D  0871               	movf	?___xxtofl+1,w
  1160  004E  00A9               	movwf	___flmul@a+1
  1161  004F  0870               	movf	?___xxtofl,w
  1162  0050  00A8               	movwf	___flmul@a
  1163  0051  120A  158A  249F  120A  118A  	fcall	___flmul
  1164  0056  1283               	bcf	3,5	;RP0=0, select bank0
  1165  0057  1303               	bcf	3,6	;RP1=0, select bank0
  1166  0058  0827               	movf	?___flmul+3,w
  1167  0059  00C5               	movwf	___fldiv@b+3
  1168  005A  0826               	movf	?___flmul+2,w
  1169  005B  00C4               	movwf	___fldiv@b+2
  1170  005C  0825               	movf	?___flmul+1,w
  1171  005D  00C3               	movwf	___fldiv@b+1
  1172  005E  0824               	movf	?___flmul,w
  1173  005F  00C2               	movwf	___fldiv@b
  1174  0060  160A  118A  2190  120A  118A  	fcall	___fldiv
  1175  0065  1283               	bcf	3,5	;RP0=0, select bank0
  1176  0066  1303               	bcf	3,6	;RP1=0, select bank0
  1177  0067  0841               	movf	?___fldiv+3,w
  1178  0068  1683               	bsf	3,5	;RP0=1, select bank1
  1179  0069  1303               	bcf	3,6	;RP1=0, select bank1
  1180  006A  00CB               	movwf	(_tension+3)^(0+128)
  1181  006B  1283               	bcf	3,5	;RP0=0, select bank0
  1182  006C  1303               	bcf	3,6	;RP1=0, select bank0
  1183  006D  0840               	movf	?___fldiv+2,w
  1184  006E  1683               	bsf	3,5	;RP0=1, select bank1
  1185  006F  1303               	bcf	3,6	;RP1=0, select bank1
  1186  0070  00CA               	movwf	(_tension+2)^(0+128)
  1187  0071  1283               	bcf	3,5	;RP0=0, select bank0
  1188  0072  1303               	bcf	3,6	;RP1=0, select bank0
  1189  0073  083F               	movf	?___fldiv+1,w
  1190  0074  1683               	bsf	3,5	;RP0=1, select bank1
  1191  0075  1303               	bcf	3,6	;RP1=0, select bank1
  1192  0076  00C9               	movwf	(_tension+1)^(0+128)
  1193  0077  1283               	bcf	3,5	;RP0=0, select bank0
  1194  0078  1303               	bcf	3,6	;RP1=0, select bank0
  1195  0079  083E               	movf	?___fldiv,w
  1196  007A  1683               	bsf	3,5	;RP0=1, select bank1
  1197  007B  1303               	bcf	3,6	;RP1=0, select bank1
  1198  007C  00C8               	movwf	_tension^(0+128)
  1199  007D                     l3388:
  1200                           
  1201                           ;main.c: 57:   bufferLen = sprintf(bufferTx,"%.02f\r\n",tension);
  1202  007D  3091               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1203  007E  00C5               	movwf	??_main^(0+128)
  1204  007F  0845               	movf	??_main^(0+128),w
  1205  0080  00A0               	movwf	sprintf@f^(0+128)
  1206  0081  084B               	movf	(_tension+3)^(0+128),w
  1207  0082  00A4               	movwf	((?_sprintf+3)^(0+128)+1)
  1208  0083  084A               	movf	(_tension+2)^(0+128),w
  1209  0084  00A3               	movwf	((?_sprintf+2)^(0+128)+1)
  1210  0085  0849               	movf	(_tension+1)^(0+128),w
  1211  0086  00A2               	movwf	((?_sprintf+1)^(0+128)+1)
  1212  0087  0848               	movf	_tension^(0+128),w
  1213  0088  00A1               	movwf	(?_sprintf^(0+128)+1)
  1214  0089  30D0               	movlw	(low (_bufferTx| 0))& (0+255)
  1215  008A  120A  118A  2170  120A  118A  	fcall	_sprintf
  1216  008F  1683               	bsf	3,5	;RP0=1, select bank1
  1217  0090  1303               	bcf	3,6	;RP1=0, select bank1
  1218  0091  0821               	movf	(?_sprintf+1)^(0+128),w
  1219  0092  00CF               	movwf	(_bufferLen+1)^(0+128)
  1220  0093  0820               	movf	?_sprintf^(0+128),w
  1221  0094  00CE               	movwf	_bufferLen^(0+128)
  1222  0095                     l3390:
  1223                           
  1224                           ;main.c: 58:   UART_SendData(bufferTx,bufferLen);
  1225  0095  084E               	movf	_bufferLen^(0+128),w
  1226  0096  00C5               	movwf	??_main^(0+128)
  1227  0097  0845               	movf	??_main^(0+128),w
  1228  0098  00F1               	movwf	UART_SendData@Size
  1229  0099  30D0               	movlw	(low (_bufferTx| 0))& (0+255)
  1230  009A  160A  158A  250F  120A  118A  	fcall	_UART_SendData
  1231                           
  1232                           ;main.c: 59:   _delay((unsigned long)((1200)*(20000000UL/4000.0)));
  1233  009F  301F               	movlw	31
  1234  00A0  1683               	bsf	3,5	;RP0=1, select bank1
  1235  00A1  1303               	bcf	3,6	;RP1=0, select bank1
  1236  00A2  00C7               	movwf	(??_main^(0+128)+2)
  1237  00A3  3071               	movlw	113
  1238  00A4  00C6               	movwf	(??_main^(0+128)+1)
  1239  00A5  301D               	movlw	29
  1240  00A6  00C5               	movwf	??_main^(0+128)
  1241  00A7                     u5857:
  1242  00A7  0BC5               	decfsz	??_main^(0+128),f
  1243  00A8  28A7               	goto	u5857
  1244  00A9  0BC6               	decfsz	(??_main^(0+128)+1),f
  1245  00AA  28A7               	goto	u5857
  1246  00AB  0BC7               	decfsz	(??_main^(0+128)+2),f
  1247  00AC  28A7               	goto	u5857
  1248  00AD  28AE               	nop2
  1249  00AE  281B               	goto	l3384
  1250  00AF  120A  118A  2800   	ljmp	start
  1251  00B2                     __end_of_main:
  1252                           
  1253                           	psect	text1
  1254  0170                     __ptext1:	
  1255 ;; *************** function _sprintf *****************
  1256 ;; Defined at:
  1257 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c"
  1258 ;; Parameters:    Size  Location     Type
  1259 ;;  sp              1    wreg     PTR unsigned char 
  1260 ;;		 -> bufferTx(20), 
  1261 ;;  f               1    0[BANK1 ] PTR const unsigned char 
  1262 ;;		 -> STR_1(8), 
  1263 ;; Auto vars:     Size  Location     Type
  1264 ;;  sp              1   29[BANK1 ] PTR unsigned char 
  1265 ;;		 -> bufferTx(20), 
  1266 ;;  fval            4   32[BANK1 ] PTR unsigned char 
  1267 ;;  tmpval          4   25[BANK1 ] struct .
  1268 ;;  val             4   19[BANK1 ] unsigned long 
  1269 ;;  prec            2   30[BANK1 ] int 
  1270 ;;  eexp            2   23[BANK1 ] int 
  1271 ;;  flag            2   17[BANK1 ] unsigned short 
  1272 ;;  ccnt            2   15[BANK1 ] int 
  1273 ;;  cp              2    0        PTR const unsigned char 
  1274 ;;  len             2    0        unsigned int 
  1275 ;;  width           2    0        int 
  1276 ;;  c               1   36[BANK1 ] unsigned char 
  1277 ;;  ap              1   14[BANK1 ] PTR void [1]
  1278 ;;		 -> ?_sprintf(2), 
  1279 ;;  d               1    0        unsigned char 
  1280 ;; Return value:  Size  Location     Type
  1281 ;;                  2    0[BANK1 ] int 
  1282 ;; Registers used:
  1283 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1284 ;; Tracked objects:
  1285 ;;		On entry : 0/0
  1286 ;;		On exit  : 0/0
  1287 ;;		Unchanged: 0/0
  1288 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1289 ;;      Params:         0       0       5       0       0
  1290 ;;      Locals:         0       0      27       0       0
  1291 ;;      Temps:          0       0       5       0       0
  1292 ;;      Totals:         0       0      37       0       0
  1293 ;;Total ram usage:       37 bytes
  1294 ;; Hardware stack levels used: 1
  1295 ;; Hardware stack levels required when called: 3
  1296 ;; This function calls:
  1297 ;;		___awdiv
  1298 ;;		___fladd
  1299 ;;		___fleq
  1300 ;;		___flge
  1301 ;;		___flmul
  1302 ;;		___flneg
  1303 ;;		___flsub
  1304 ;;		___fltol
  1305 ;;		___lldiv
  1306 ;;		___llmod
  1307 ;;		___wmul
  1308 ;;		___xxtofl
  1309 ;;		__div_to_l_
  1310 ;;		__tdiv_to_l_
  1311 ;;		_fround
  1312 ;;		_isdigit
  1313 ;;		_scale
  1314 ;; This function is called by:
  1315 ;;		_main
  1316 ;; This function uses a non-reentrant model
  1317 ;;
  1318                           
  1319  0170                     _sprintf:	
  1320                           ;psect for function _sprintf
  1321                           
  1322                           
  1323                           ;incstack = 0
  1324                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1325                           ;sprintf@sp stored from wreg
  1326  0170  1683               	bsf	3,5	;RP0=1, select bank1
  1327  0171  1303               	bcf	3,6	;RP1=0, select bank1
  1328  0172  00BD               	movwf	sprintf@sp^(0+128)
  1329  0173                     l3002:
  1330                           
  1331                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 517:  
      +                          int prec;
  1332  0173  01AF               	clrf	sprintf@ccnt^(0+128)
  1333  0174  01B0               	clrf	(sprintf@ccnt+1)^(0+128)
  1334  0175                     l3004:
  1335                           
  1336                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 532:  char d;;C:\
      +                          Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 533:  double fval;;C:
      +                          \Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 534:  int eexp;;C:\P
      +                          rogram Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 543:  } tmpval;;C:\Pro
      +                          gram Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 545:  unsigned long val;
      +                          ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 546:  unsigned le
      +                          n;
  1337  0175  30A1               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1338  0176  00A5               	movwf	??_sprintf^(0+128)
  1339  0177  0825               	movf	??_sprintf^(0+128),w
  1340  0178  00AE               	movwf	sprintf@ap^(0+128)
  1341                           
  1342                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1343  0179  2FD8               	goto	l3216
  1344  017A                     l3006:
  1345                           
  1346                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1347  017A  3025               	movlw	37
  1348  017B  0644               	xorwf	sprintf@c^(0+128),w
  1349  017C  1903               	btfsc	3,2
  1350  017D  297F               	goto	u5201
  1351  017E  2980               	goto	u5200
  1352  017F                     u5201:
  1353  017F  2992               	goto	l3014
  1354  0180                     u5200:
  1355  0180                     l3008:
  1356                           
  1357                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)),(++
      +                          ccnt));
  1358  0180  0844               	movf	sprintf@c^(0+128),w
  1359  0181  00A5               	movwf	??_sprintf^(0+128)
  1360  0182  083D               	movf	sprintf@sp^(0+128),w
  1361  0183  0084               	movwf	4
  1362  0184  0825               	movf	??_sprintf^(0+128),w
  1363  0185  1383               	bcf	3,7	;select IRP bank0
  1364  0186  0080               	movwf	0
  1365  0187                     l3010:
  1366  0187  3001               	movlw	1
  1367  0188  00A5               	movwf	??_sprintf^(0+128)
  1368  0189  0825               	movf	??_sprintf^(0+128),w
  1369  018A  07BD               	addwf	sprintf@sp^(0+128),f
  1370  018B                     l3012:
  1371  018B  3001               	movlw	1
  1372  018C  07AF               	addwf	sprintf@ccnt^(0+128),f
  1373  018D  1803               	skipnc
  1374  018E  0AB0               	incf	(sprintf@ccnt+1)^(0+128),f
  1375  018F  3000               	movlw	0
  1376  0190  07B0               	addwf	(sprintf@ccnt+1)^(0+128),f
  1377                           
  1378                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 559:    continue;
  1379  0191  2FD8               	goto	l3216
  1380  0192                     l3014:
  1381                           
  1382                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1383  0192  01B1               	clrf	sprintf@flag^(0+128)
  1384  0193  01B2               	clrf	(sprintf@flag+1)^(0+128)
  1385  0194                     l3016:
  1386                           
  1387                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 628:   if(*f == '
      +                          .') {
  1388  0194  0820               	movf	sprintf@f^(0+128),w
  1389  0195  0084               	movwf	4
  1390  0196  160A  158A  2000  120A  118A  	fcall	stringdir
  1391  019B  3A2E               	xorlw	46
  1392  019C  1D03               	skipz
  1393  019D  299F               	goto	u5211
  1394  019E  29A0               	goto	u5210
  1395  019F                     u5211:
  1396  019F  29E5               	goto	l3032
  1397  01A0                     u5210:
  1398  01A0                     l3018:
  1399                           
  1400                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 629:    flag |= 0
      +                          x4000;
  1401  01A0  1732               	bsf	(sprintf@flag^(0+128)+1),6
  1402  01A1                     l3020:
  1403                           
  1404                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 630:    f++;
  1405  01A1  3001               	movlw	1
  1406  01A2  00A5               	movwf	??_sprintf^(0+128)
  1407  01A3  0825               	movf	??_sprintf^(0+128),w
  1408  01A4  07A0               	addwf	sprintf@f^(0+128),f
  1409  01A5                     l3022:
  1410                           
  1411                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 644:    {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  1412  01A5  01BE               	clrf	sprintf@prec^(0+128)
  1413  01A6  01BF               	clrf	(sprintf@prec+1)^(0+128)
  1414                           
  1415                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  1416  01A7  29D4               	goto	l3030
  1417  01A8                     l3024:
  1418                           
  1419                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 647:      prec *=
      +                           10;
  1420  01A8  300A               	movlw	10
  1421  01A9  00F0               	movwf	___wmul@multiplier
  1422  01AA  3000               	movlw	0
  1423  01AB  00F1               	movwf	___wmul@multiplier+1
  1424  01AC  1683               	bsf	3,5	;RP0=1, select bank1
  1425  01AD  1303               	bcf	3,6	;RP1=0, select bank1
  1426  01AE  083F               	movf	(sprintf@prec+1)^(0+128),w
  1427  01AF  00F3               	movwf	___wmul@multiplicand+1
  1428  01B0  083E               	movf	sprintf@prec^(0+128),w
  1429  01B1  00F2               	movwf	___wmul@multiplicand
  1430  01B2  160A  158A  256C  120A  118A  	fcall	___wmul
  1431  01B7  0871               	movf	?___wmul+1,w
  1432  01B8  1683               	bsf	3,5	;RP0=1, select bank1
  1433  01B9  1303               	bcf	3,6	;RP1=0, select bank1
  1434  01BA  00BF               	movwf	(sprintf@prec+1)^(0+128)
  1435  01BB  0870               	movf	?___wmul,w
  1436  01BC  00BE               	movwf	sprintf@prec^(0+128)
  1437  01BD                     l3026:
  1438                           
  1439                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 648:         prec
      +                           += *f++ - '0';
  1440  01BD  0820               	movf	sprintf@f^(0+128),w
  1441  01BE  0084               	movwf	4
  1442  01BF  160A  158A  2000  120A  118A  	fcall	stringdir
  1443  01C4  3ED0               	addlw	208
  1444  01C5  00A5               	movwf	??_sprintf^(0+128)
  1445  01C6  30FF               	movlw	255
  1446  01C7  1803               	skipnc
  1447  01C8  3000               	movlw	0
  1448  01C9  00A6               	movwf	(??_sprintf^(0+128)+1)
  1449  01CA  0825               	movf	??_sprintf^(0+128),w
  1450  01CB  07BE               	addwf	sprintf@prec^(0+128),f
  1451  01CC  1803               	skipnc
  1452  01CD  0ABF               	incf	(sprintf@prec+1)^(0+128),f
  1453  01CE  0826               	movf	(??_sprintf+1)^(0+128),w
  1454  01CF  07BF               	addwf	(sprintf@prec+1)^(0+128),f
  1455  01D0                     l3028:
  1456  01D0  3001               	movlw	1
  1457  01D1  00A5               	movwf	??_sprintf^(0+128)
  1458  01D2  0825               	movf	??_sprintf^(0+128),w
  1459  01D3  07A0               	addwf	sprintf@f^(0+128),f
  1460  01D4                     l3030:
  1461                           
  1462                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  1463  01D4  0820               	movf	sprintf@f^(0+128),w
  1464  01D5  0084               	movwf	4
  1465  01D6  160A  158A  2000  120A  118A  	fcall	stringdir
  1466  01DB  160A  158A  24EA  120A  118A  	fcall	_isdigit
  1467  01E0  1803               	btfsc	3,0
  1468  01E1  29E3               	goto	u5221
  1469  01E2  29E4               	goto	u5220
  1470  01E3                     u5221:
  1471  01E3  29A8               	goto	l3024
  1472  01E4                     u5220:
  1473  01E4  29EB               	goto	l3038
  1474  01E5                     l3032:
  1475                           
  1476                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  1477  01E5  01BE               	clrf	sprintf@prec^(0+128)
  1478  01E6  01BF               	clrf	(sprintf@prec+1)^(0+128)
  1479  01E7                     l3034:
  1480                           
  1481                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 654:    flag |= 0
      +                          x1000;
  1482  01E7  1632               	bsf	(sprintf@flag^(0+128)+1),4
  1483  01E8  29EB               	goto	l3038
  1484  01E9                     l206:	
  1485                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 688:   case 'f':
  1486                           
  1487                           
  1488                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 689:    flag |= 0
      +                          x400;
  1489  01E9  1532               	bsf	(sprintf@flag^(0+128)+1),2
  1490                           
  1491                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 690:    break;
  1492  01EA  2A07               	goto	l3040
  1493  01EB                     l3038:
  1494  01EB  3001               	movlw	1
  1495  01EC  1683               	bsf	3,5	;RP0=1, select bank1
  1496  01ED  1303               	bcf	3,6	;RP1=0, select bank1
  1497  01EE  07A0               	addwf	sprintf@f^(0+128),f
  1498  01EF  30FF               	movlw	-1
  1499  01F0  0720               	addwf	sprintf@f^(0+128),w
  1500  01F1  0084               	movwf	4
  1501  01F2  160A  158A  2000  120A  118A  	fcall	stringdir
  1502  01F7  00C4               	movwf	sprintf@c^(0+128)
  1503  01F8  00A5               	movwf	??_sprintf^(0+128)
  1504  01F9  01A6               	clrf	(??_sprintf^(0+128)+1)
  1505                           
  1506                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1507                           ; Switch size 1, requested type "simple"
  1508                           ; Number of cases is 1, Range of values is 0 to 0
  1509                           ; switch strategies available:
  1510                           ; Name         Instructions Cycles
  1511                           ; simple_byte            4     3 (average)
  1512                           ; direct_byte           11     8 (fixed)
  1513                           ; jumptable            260     6 (fixed)
  1514                           ;	Chosen strategy is simple_byte
  1515  01FA  0826               	movf	(??_sprintf+1)^(0+128),w
  1516  01FB  3A00               	xorlw	0	; case 0
  1517  01FC  1903               	skipnz
  1518  01FD  29FF               	goto	l3422
  1519  01FE  2FD8               	goto	l3216
  1520  01FF                     l3422:
  1521                           
  1522                           ; Switch size 1, requested type "simple"
  1523                           ; Number of cases is 2, Range of values is 0 to 102
  1524                           ; switch strategies available:
  1525                           ; Name         Instructions Cycles
  1526                           ; simple_byte            7     4 (average)
  1527                           ; jumptable            260     6 (fixed)
  1528                           ;	Chosen strategy is simple_byte
  1529  01FF  0825               	movf	??_sprintf^(0+128),w
  1530  0200  3A00               	xorlw	0	; case 0
  1531  0201  1903               	skipnz
  1532  0202  2FEA               	goto	l3218
  1533  0203  3A66               	xorlw	102	; case 102
  1534  0204  1903               	skipnz
  1535  0205  29E9               	goto	l206
  1536  0206  2FD8               	goto	l3216
  1537  0207                     l3040:
  1538                           
  1539                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 851:   if(flag & 
      +                          (0x700)) {
  1540  0207  3000               	movlw	0
  1541  0208  0531               	andwf	sprintf@flag^(0+128),w
  1542  0209  00A5               	movwf	??_sprintf^(0+128)
  1543  020A  3007               	movlw	7
  1544  020B  0532               	andwf	(sprintf@flag+1)^(0+128),w
  1545  020C  00A6               	movwf	(??_sprintf+1)^(0+128)
  1546  020D  0825               	movf	??_sprintf^(0+128),w
  1547  020E  0426               	iorwf	(??_sprintf^(0+128)+1),w
  1548  020F  1903               	btfsc	3,2
  1549  0210  2A12               	goto	u5231
  1550  0211  2A13               	goto	u5230
  1551  0212                     u5231:
  1552  0212  2F93               	goto	l3196
  1553  0213                     u5230:
  1554  0213                     l3042:
  1555                           
  1556                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 853:    if(flag &
      +                           0x1000)
  1557  0213  1E32               	btfss	(sprintf@flag+1)^(0+128),4
  1558  0214  2A16               	goto	u5241
  1559  0215  2A17               	goto	u5240
  1560  0216                     u5241:
  1561  0216  2A1B               	goto	l3046
  1562  0217                     u5240:
  1563  0217                     l3044:
  1564                           
  1565                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 855:     prec = 6
      +                          ;
  1566  0217  3006               	movlw	6
  1567  0218  00BE               	movwf	sprintf@prec^(0+128)
  1568  0219  3000               	movlw	0
  1569  021A  00BF               	movwf	(sprintf@prec^(0+128)+1)
  1570  021B                     l3046:
  1571                           
  1572                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 856:    fval = (*
      +                          (double *)__va_arg((*(double **)ap), (double)0));
  1573  021B  082E               	movf	sprintf@ap^(0+128),w
  1574  021C  0084               	movwf	4
  1575  021D  1383               	bcf	3,7	;select IRP bank0
  1576  021E  0800               	movf	0,w
  1577  021F  00C0               	movwf	sprintf@fval^(0+128)
  1578  0220  0A84               	incf	4,f
  1579  0221  0800               	movf	0,w
  1580  0222  00C1               	movwf	(sprintf@fval+1)^(0+128)
  1581  0223  0A84               	incf	4,f
  1582  0224  0800               	movf	0,w
  1583  0225  00C2               	movwf	(sprintf@fval+2)^(0+128)
  1584  0226  0A84               	incf	4,f
  1585  0227  0800               	movf	0,w
  1586  0228  00C3               	movwf	(sprintf@fval+3)^(0+128)
  1587  0229                     l3048:
  1588  0229  3004               	movlw	4
  1589  022A  00A5               	movwf	??_sprintf^(0+128)
  1590  022B  0825               	movf	??_sprintf^(0+128),w
  1591  022C  07AE               	addwf	sprintf@ap^(0+128),f
  1592  022D                     l3050:
  1593                           
  1594                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 857:    if(fval <
      +                           0.0) {
  1595  022D  0843               	movf	(sprintf@fval+3)^(0+128),w
  1596  022E  00F3               	movwf	___flge@ff1+3
  1597  022F  0842               	movf	(sprintf@fval+2)^(0+128),w
  1598  0230  00F2               	movwf	___flge@ff1+2
  1599  0231  0841               	movf	(sprintf@fval+1)^(0+128),w
  1600  0232  00F1               	movwf	___flge@ff1+1
  1601  0233  0840               	movf	sprintf@fval^(0+128),w
  1602  0234  00F0               	movwf	___flge@ff1
  1603  0235  3000               	movlw	0
  1604  0236  00F7               	movwf	___flge@ff2+3
  1605  0237  3000               	movlw	0
  1606  0238  00F6               	movwf	___flge@ff2+2
  1607  0239  3000               	movlw	0
  1608  023A  00F5               	movwf	___flge@ff2+1
  1609  023B  3000               	movlw	0
  1610  023C  00F4               	movwf	___flge@ff2
  1611  023D  160A  118A  2034  120A  118A  	fcall	___flge
  1612  0242  1803               	btfsc	3,0
  1613  0243  2A45               	goto	u5251
  1614  0244  2A46               	goto	u5250
  1615  0245                     u5251:
  1616  0245  2A63               	goto	l3056
  1617  0246                     u5250:
  1618  0246                     l3052:
  1619                           
  1620                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 858:     fval = -
      +                          fval;
  1621  0246  1683               	bsf	3,5	;RP0=1, select bank1
  1622  0247  1303               	bcf	3,6	;RP1=0, select bank1
  1623  0248  0843               	movf	(sprintf@fval+3)^(0+128),w
  1624  0249  00F3               	movwf	___flneg@f1+3
  1625  024A  0842               	movf	(sprintf@fval+2)^(0+128),w
  1626  024B  00F2               	movwf	___flneg@f1+2
  1627  024C  0841               	movf	(sprintf@fval+1)^(0+128),w
  1628  024D  00F1               	movwf	___flneg@f1+1
  1629  024E  0840               	movf	sprintf@fval^(0+128),w
  1630  024F  00F0               	movwf	___flneg@f1
  1631  0250  160A  158A  24DF  120A  118A  	fcall	___flneg
  1632  0255  0873               	movf	?___flneg+3,w
  1633  0256  1683               	bsf	3,5	;RP0=1, select bank1
  1634  0257  1303               	bcf	3,6	;RP1=0, select bank1
  1635  0258  00C3               	movwf	(sprintf@fval+3)^(0+128)
  1636  0259  0872               	movf	?___flneg+2,w
  1637  025A  00C2               	movwf	(sprintf@fval+2)^(0+128)
  1638  025B  0871               	movf	?___flneg+1,w
  1639  025C  00C1               	movwf	(sprintf@fval+1)^(0+128)
  1640  025D  0870               	movf	?___flneg,w
  1641  025E  00C0               	movwf	sprintf@fval^(0+128)
  1642  025F                     l3054:
  1643                           
  1644                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 859:     flag |= 
      +                          0x03;
  1645  025F  3003               	movlw	3
  1646  0260  04B1               	iorwf	sprintf@flag^(0+128),f
  1647  0261  3000               	movlw	0
  1648  0262  04B2               	iorwf	(sprintf@flag+1)^(0+128),f
  1649  0263                     l3056:
  1650                           
  1651                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 861:    eexp = 0;
  1652  0263  1683               	bsf	3,5	;RP0=1, select bank1
  1653  0264  1303               	bcf	3,6	;RP1=0, select bank1
  1654  0265  01B7               	clrf	sprintf@eexp^(0+128)
  1655  0266  01B8               	clrf	(sprintf@eexp+1)^(0+128)
  1656  0267                     l3058:
  1657                           
  1658                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 862:    if( fval!
      +                          =0) {
  1659  0267  0843               	movf	(sprintf@fval+3)^(0+128),w
  1660  0268  00F3               	movwf	___fleq@ff1+3
  1661  0269  0842               	movf	(sprintf@fval+2)^(0+128),w
  1662  026A  00F2               	movwf	___fleq@ff1+2
  1663  026B  0841               	movf	(sprintf@fval+1)^(0+128),w
  1664  026C  00F1               	movwf	___fleq@ff1+1
  1665  026D  0840               	movf	sprintf@fval^(0+128),w
  1666  026E  00F0               	movwf	___fleq@ff1
  1667  026F  3000               	movlw	0
  1668  0270  00F7               	movwf	___fleq@ff2+3
  1669  0271  3000               	movlw	0
  1670  0272  00F6               	movwf	___fleq@ff2+2
  1671  0273  3000               	movlw	0
  1672  0274  00F5               	movwf	___fleq@ff2+1
  1673  0275  3000               	movlw	0
  1674  0276  00F4               	movwf	___fleq@ff2
  1675  0277  160A  158A  2636  120A  118A  	fcall	___fleq
  1676  027C  1803               	btfsc	3,0
  1677  027D  2A7F               	goto	u5261
  1678  027E  2A80               	goto	u5260
  1679  027F                     u5261:
  1680  027F  2B70               	goto	l3084
  1681  0280                     u5260:
  1682  0280                     l3060:
  1683                           
  1684                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 863:     (void)(*
      +                          (&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  1685  0280  1003               	clrc
  1686  0281  1683               	bsf	3,5	;RP0=1, select bank1
  1687  0282  1303               	bcf	3,6	;RP1=0, select bank1
  1688  0283  0D42               	rlf	(sprintf@fval+2)^(0+128),w
  1689  0284  0D43               	rlf	(sprintf@fval+3)^(0+128),w
  1690  0285  3E82               	addlw	130
  1691  0286  00B7               	movwf	sprintf@eexp^(0+128)
  1692  0287  30FF               	movlw	255
  1693  0288  1803               	skipnc
  1694  0289  3000               	movlw	0
  1695  028A  00B8               	movwf	(sprintf@eexp^(0+128)+1)
  1696  028B                     l3062:
  1697                           
  1698                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 864:     eexp--;
  1699  028B  30FF               	movlw	255
  1700  028C  07B7               	addwf	sprintf@eexp^(0+128),f
  1701  028D  1803               	skipnc
  1702  028E  0AB8               	incf	(sprintf@eexp+1)^(0+128),f
  1703  028F  30FF               	movlw	255
  1704  0290  07B8               	addwf	(sprintf@eexp+1)^(0+128),f
  1705  0291                     l3064:
  1706                           
  1707                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 865:     eexp *= 
      +                          3;
  1708  0291  3003               	movlw	3
  1709  0292  00F0               	movwf	___wmul@multiplier
  1710  0293  3000               	movlw	0
  1711  0294  00F1               	movwf	___wmul@multiplier+1
  1712  0295  0838               	movf	(sprintf@eexp+1)^(0+128),w
  1713  0296  00F3               	movwf	___wmul@multiplicand+1
  1714  0297  0837               	movf	sprintf@eexp^(0+128),w
  1715  0298  00F2               	movwf	___wmul@multiplicand
  1716  0299  160A  158A  256C  120A  118A  	fcall	___wmul
  1717  029E  0871               	movf	?___wmul+1,w
  1718  029F  1683               	bsf	3,5	;RP0=1, select bank1
  1719  02A0  1303               	bcf	3,6	;RP1=0, select bank1
  1720  02A1  00B8               	movwf	(sprintf@eexp+1)^(0+128)
  1721  02A2  0870               	movf	?___wmul,w
  1722  02A3  00B7               	movwf	sprintf@eexp^(0+128)
  1723  02A4                     l3066:
  1724                           
  1725                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 866:     eexp /= 
      +                          10;
  1726  02A4  300A               	movlw	10
  1727  02A5  00F7               	movwf	___awdiv@divisor
  1728  02A6  3000               	movlw	0
  1729  02A7  00F8               	movwf	___awdiv@divisor+1
  1730  02A8  0838               	movf	(sprintf@eexp+1)^(0+128),w
  1731  02A9  00FA               	movwf	___awdiv@dividend+1
  1732  02AA  0837               	movf	sprintf@eexp^(0+128),w
  1733  02AB  00F9               	movwf	___awdiv@dividend
  1734  02AC  160A  158A  2797  120A  118A  	fcall	___awdiv
  1735  02B1  0878               	movf	?___awdiv+1,w
  1736  02B2  1683               	bsf	3,5	;RP0=1, select bank1
  1737  02B3  1303               	bcf	3,6	;RP1=0, select bank1
  1738  02B4  00B8               	movwf	(sprintf@eexp+1)^(0+128)
  1739  02B5  0877               	movf	?___awdiv,w
  1740  02B6  00B7               	movwf	sprintf@eexp^(0+128)
  1741  02B7                     l3068:
  1742                           
  1743                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 867:     if(eexp 
      +                          < 0)
  1744  02B7  1FB8               	btfss	(sprintf@eexp+1)^(0+128),7
  1745  02B8  2ABA               	goto	u5271
  1746  02B9  2ABB               	goto	u5270
  1747  02BA                     u5271:
  1748  02BA  2AC1               	goto	l3072
  1749  02BB                     u5270:
  1750  02BB                     l3070:
  1751                           
  1752                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 868:      eexp--;
  1753  02BB  30FF               	movlw	255
  1754  02BC  07B7               	addwf	sprintf@eexp^(0+128),f
  1755  02BD  1803               	skipnc
  1756  02BE  0AB8               	incf	(sprintf@eexp+1)^(0+128),f
  1757  02BF  30FF               	movlw	255
  1758  02C0  07B8               	addwf	(sprintf@eexp+1)^(0+128),f
  1759  02C1                     l3072:
  1760                           
  1761                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 872:     tmpval.i
      +                          nteg = scale(-eexp);
  1762  02C1  0337               	decf	sprintf@eexp^(0+128),w
  1763  02C2  3AFF               	xorlw	255
  1764  02C3  120A  158A  2140  120A  118A  	fcall	_scale
  1765  02C8  1283               	bcf	3,5	;RP0=0, select bank0
  1766  02C9  1303               	bcf	3,6	;RP1=0, select bank0
  1767  02CA  0841               	movf	?_scale+3,w
  1768  02CB  1683               	bsf	3,5	;RP0=1, select bank1
  1769  02CC  1303               	bcf	3,6	;RP1=0, select bank1
  1770  02CD  00BC               	movwf	(sprintf@tmpval+3)^(0+128)
  1771  02CE  1283               	bcf	3,5	;RP0=0, select bank0
  1772  02CF  1303               	bcf	3,6	;RP1=0, select bank0
  1773  02D0  0840               	movf	?_scale+2,w
  1774  02D1  1683               	bsf	3,5	;RP0=1, select bank1
  1775  02D2  1303               	bcf	3,6	;RP1=0, select bank1
  1776  02D3  00BB               	movwf	(sprintf@tmpval+2)^(0+128)
  1777  02D4  1283               	bcf	3,5	;RP0=0, select bank0
  1778  02D5  1303               	bcf	3,6	;RP1=0, select bank0
  1779  02D6  083F               	movf	?_scale+1,w
  1780  02D7  1683               	bsf	3,5	;RP0=1, select bank1
  1781  02D8  1303               	bcf	3,6	;RP1=0, select bank1
  1782  02D9  00BA               	movwf	(sprintf@tmpval+1)^(0+128)
  1783  02DA  1283               	bcf	3,5	;RP0=0, select bank0
  1784  02DB  1303               	bcf	3,6	;RP1=0, select bank0
  1785  02DC  083E               	movf	?_scale,w
  1786  02DD  1683               	bsf	3,5	;RP0=1, select bank1
  1787  02DE  1303               	bcf	3,6	;RP1=0, select bank1
  1788  02DF  00B9               	movwf	sprintf@tmpval^(0+128)
  1789  02E0                     l3074:
  1790                           
  1791                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 873:     tmpval.i
      +                          nteg *= fval;
  1792  02E0  0843               	movf	(sprintf@fval+3)^(0+128),w
  1793  02E1  1283               	bcf	3,5	;RP0=0, select bank0
  1794  02E2  1303               	bcf	3,6	;RP1=0, select bank0
  1795  02E3  00A7               	movwf	___flmul@b+3
  1796  02E4  1683               	bsf	3,5	;RP0=1, select bank1
  1797  02E5  1303               	bcf	3,6	;RP1=0, select bank1
  1798  02E6  0842               	movf	(sprintf@fval+2)^(0+128),w
  1799  02E7  1283               	bcf	3,5	;RP0=0, select bank0
  1800  02E8  1303               	bcf	3,6	;RP1=0, select bank0
  1801  02E9  00A6               	movwf	___flmul@b+2
  1802  02EA  1683               	bsf	3,5	;RP0=1, select bank1
  1803  02EB  1303               	bcf	3,6	;RP1=0, select bank1
  1804  02EC  0841               	movf	(sprintf@fval+1)^(0+128),w
  1805  02ED  1283               	bcf	3,5	;RP0=0, select bank0
  1806  02EE  1303               	bcf	3,6	;RP1=0, select bank0
  1807  02EF  00A5               	movwf	___flmul@b+1
  1808  02F0  1683               	bsf	3,5	;RP0=1, select bank1
  1809  02F1  1303               	bcf	3,6	;RP1=0, select bank1
  1810  02F2  0840               	movf	sprintf@fval^(0+128),w
  1811  02F3  1283               	bcf	3,5	;RP0=0, select bank0
  1812  02F4  1303               	bcf	3,6	;RP1=0, select bank0
  1813  02F5  00A4               	movwf	___flmul@b
  1814  02F6  1683               	bsf	3,5	;RP0=1, select bank1
  1815  02F7  1303               	bcf	3,6	;RP1=0, select bank1
  1816  02F8  083C               	movf	(sprintf@tmpval+3)^(0+128),w
  1817  02F9  1283               	bcf	3,5	;RP0=0, select bank0
  1818  02FA  1303               	bcf	3,6	;RP1=0, select bank0
  1819  02FB  00AB               	movwf	___flmul@a+3
  1820  02FC  1683               	bsf	3,5	;RP0=1, select bank1
  1821  02FD  1303               	bcf	3,6	;RP1=0, select bank1
  1822  02FE  083B               	movf	(sprintf@tmpval+2)^(0+128),w
  1823  02FF  1283               	bcf	3,5	;RP0=0, select bank0
  1824  0300  1303               	bcf	3,6	;RP1=0, select bank0
  1825  0301  00AA               	movwf	___flmul@a+2
  1826  0302  1683               	bsf	3,5	;RP0=1, select bank1
  1827  0303  1303               	bcf	3,6	;RP1=0, select bank1
  1828  0304  083A               	movf	(sprintf@tmpval+1)^(0+128),w
  1829  0305  1283               	bcf	3,5	;RP0=0, select bank0
  1830  0306  1303               	bcf	3,6	;RP1=0, select bank0
  1831  0307  00A9               	movwf	___flmul@a+1
  1832  0308  1683               	bsf	3,5	;RP0=1, select bank1
  1833  0309  1303               	bcf	3,6	;RP1=0, select bank1
  1834  030A  0839               	movf	sprintf@tmpval^(0+128),w
  1835  030B  1283               	bcf	3,5	;RP0=0, select bank0
  1836  030C  1303               	bcf	3,6	;RP1=0, select bank0
  1837  030D  00A8               	movwf	___flmul@a
  1838  030E  120A  158A  249F  120A  118A  	fcall	___flmul
  1839  0313  1283               	bcf	3,5	;RP0=0, select bank0
  1840  0314  1303               	bcf	3,6	;RP1=0, select bank0
  1841  0315  0827               	movf	?___flmul+3,w
  1842  0316  1683               	bsf	3,5	;RP0=1, select bank1
  1843  0317  1303               	bcf	3,6	;RP1=0, select bank1
  1844  0318  00BC               	movwf	(sprintf@tmpval+3)^(0+128)
  1845  0319  1283               	bcf	3,5	;RP0=0, select bank0
  1846  031A  1303               	bcf	3,6	;RP1=0, select bank0
  1847  031B  0826               	movf	?___flmul+2,w
  1848  031C  1683               	bsf	3,5	;RP0=1, select bank1
  1849  031D  1303               	bcf	3,6	;RP1=0, select bank1
  1850  031E  00BB               	movwf	(sprintf@tmpval+2)^(0+128)
  1851  031F  1283               	bcf	3,5	;RP0=0, select bank0
  1852  0320  1303               	bcf	3,6	;RP1=0, select bank0
  1853  0321  0825               	movf	?___flmul+1,w
  1854  0322  1683               	bsf	3,5	;RP0=1, select bank1
  1855  0323  1303               	bcf	3,6	;RP1=0, select bank1
  1856  0324  00BA               	movwf	(sprintf@tmpval+1)^(0+128)
  1857  0325  1283               	bcf	3,5	;RP0=0, select bank0
  1858  0326  1303               	bcf	3,6	;RP1=0, select bank0
  1859  0327  0824               	movf	?___flmul,w
  1860  0328  1683               	bsf	3,5	;RP0=1, select bank1
  1861  0329  1303               	bcf	3,6	;RP1=0, select bank1
  1862  032A  00B9               	movwf	sprintf@tmpval^(0+128)
  1863  032B                     l3076:
  1864                           
  1865                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 874:     if(tmpva
      +                          l.integ < 1.0)
  1866  032B  083C               	movf	(sprintf@tmpval+3)^(0+128),w
  1867  032C  00F3               	movwf	___flge@ff1+3
  1868  032D  083B               	movf	(sprintf@tmpval+2)^(0+128),w
  1869  032E  00F2               	movwf	___flge@ff1+2
  1870  032F  083A               	movf	(sprintf@tmpval+1)^(0+128),w
  1871  0330  00F1               	movwf	___flge@ff1+1
  1872  0331  0839               	movf	sprintf@tmpval^(0+128),w
  1873  0332  00F0               	movwf	___flge@ff1
  1874  0333  303F               	movlw	63
  1875  0334  00F7               	movwf	___flge@ff2+3
  1876  0335  3080               	movlw	128
  1877  0336  00F6               	movwf	___flge@ff2+2
  1878  0337  3000               	movlw	0
  1879  0338  00F5               	movwf	___flge@ff2+1
  1880  0339  3000               	movlw	0
  1881  033A  00F4               	movwf	___flge@ff2
  1882  033B  160A  118A  2034  120A  118A  	fcall	___flge
  1883  0340  1803               	btfsc	3,0
  1884  0341  2B43               	goto	u5281
  1885  0342  2B44               	goto	u5280
  1886  0343                     u5281:
  1887  0343  2B4D               	goto	l3080
  1888  0344                     u5280:
  1889  0344                     l3078:
  1890                           
  1891                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 875:      eexp--;
  1892  0344  30FF               	movlw	255
  1893  0345  1683               	bsf	3,5	;RP0=1, select bank1
  1894  0346  1303               	bcf	3,6	;RP1=0, select bank1
  1895  0347  07B7               	addwf	sprintf@eexp^(0+128),f
  1896  0348  1803               	skipnc
  1897  0349  0AB8               	incf	(sprintf@eexp+1)^(0+128),f
  1898  034A  30FF               	movlw	255
  1899  034B  07B8               	addwf	(sprintf@eexp+1)^(0+128),f
  1900  034C  2B70               	goto	l3084
  1901  034D                     l3080:
  1902  034D  1683               	bsf	3,5	;RP0=1, select bank1
  1903  034E  1303               	bcf	3,6	;RP1=0, select bank1
  1904  034F  083C               	movf	(sprintf@tmpval+3)^(0+128),w
  1905  0350  00F3               	movwf	___flge@ff1+3
  1906  0351  083B               	movf	(sprintf@tmpval+2)^(0+128),w
  1907  0352  00F2               	movwf	___flge@ff1+2
  1908  0353  083A               	movf	(sprintf@tmpval+1)^(0+128),w
  1909  0354  00F1               	movwf	___flge@ff1+1
  1910  0355  0839               	movf	sprintf@tmpval^(0+128),w
  1911  0356  00F0               	movwf	___flge@ff1
  1912  0357  3041               	movlw	65
  1913  0358  00F7               	movwf	___flge@ff2+3
  1914  0359  3020               	movlw	32
  1915  035A  00F6               	movwf	___flge@ff2+2
  1916  035B  3000               	movlw	0
  1917  035C  00F5               	movwf	___flge@ff2+1
  1918  035D  3000               	movlw	0
  1919  035E  00F4               	movwf	___flge@ff2
  1920  035F  160A  118A  2034  120A  118A  	fcall	___flge
  1921  0364  1C03               	btfss	3,0
  1922  0365  2B67               	goto	u5291
  1923  0366  2B68               	goto	u5290
  1924  0367                     u5291:
  1925  0367  2B70               	goto	l3084
  1926  0368                     u5290:
  1927  0368                     l3082:
  1928                           
  1929                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 877:      eexp++;
  1930  0368  3001               	movlw	1
  1931  0369  1683               	bsf	3,5	;RP0=1, select bank1
  1932  036A  1303               	bcf	3,6	;RP1=0, select bank1
  1933  036B  07B7               	addwf	sprintf@eexp^(0+128),f
  1934  036C  1803               	skipnc
  1935  036D  0AB8               	incf	(sprintf@eexp+1)^(0+128),f
  1936  036E  3000               	movlw	0
  1937  036F  07B8               	addwf	(sprintf@eexp+1)^(0+128),f
  1938  0370                     l3084:
  1939                           
  1940                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1138:      if(pre
      +                          c <= 12)
  1941  0370  1683               	bsf	3,5	;RP0=1, select bank1
  1942  0371  1303               	bcf	3,6	;RP1=0, select bank1
  1943  0372  083F               	movf	(sprintf@prec+1)^(0+128),w
  1944  0373  3A80               	xorlw	128
  1945  0374  00FF               	movwf	btemp+1
  1946  0375  3080               	movlw	128
  1947  0376  027F               	subwf	btemp+1,w
  1948  0377  1D03               	skipz
  1949  0378  2B7B               	goto	u5305
  1950  0379  300D               	movlw	13
  1951  037A  023E               	subwf	sprintf@prec^(0+128),w
  1952  037B                     u5305:
  1953  037B  1803               	skipnc
  1954  037C  2B7E               	goto	u5301
  1955  037D  2B7F               	goto	u5300
  1956  037E                     u5301:
  1957  037E  2BC6               	goto	l3088
  1958  037F                     u5300:
  1959  037F                     l3086:
  1960                           
  1961                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1139:       fval 
      +                          += fround((unsigned int)prec);
  1962  037F  1683               	bsf	3,5	;RP0=1, select bank1
  1963  0380  1303               	bcf	3,6	;RP1=0, select bank1
  1964  0381  083E               	movf	sprintf@prec^(0+128),w
  1965  0382  160A  118A  236D  120A  118A  	fcall	_fround
  1966  0387  1283               	bcf	3,5	;RP0=0, select bank0
  1967  0388  1303               	bcf	3,6	;RP1=0, select bank0
  1968  0389  0841               	movf	?_fround+3,w
  1969  038A  00D5               	movwf	___fladd@b+3
  1970  038B  0840               	movf	?_fround+2,w
  1971  038C  00D4               	movwf	___fladd@b+2
  1972  038D  083F               	movf	?_fround+1,w
  1973  038E  00D3               	movwf	___fladd@b+1
  1974  038F  083E               	movf	?_fround,w
  1975  0390  00D2               	movwf	___fladd@b
  1976  0391  1683               	bsf	3,5	;RP0=1, select bank1
  1977  0392  1303               	bcf	3,6	;RP1=0, select bank1
  1978  0393  0843               	movf	(sprintf@fval+3)^(0+128),w
  1979  0394  1283               	bcf	3,5	;RP0=0, select bank0
  1980  0395  1303               	bcf	3,6	;RP1=0, select bank0
  1981  0396  00D9               	movwf	___fladd@a+3
  1982  0397  1683               	bsf	3,5	;RP0=1, select bank1
  1983  0398  1303               	bcf	3,6	;RP1=0, select bank1
  1984  0399  0842               	movf	(sprintf@fval+2)^(0+128),w
  1985  039A  1283               	bcf	3,5	;RP0=0, select bank0
  1986  039B  1303               	bcf	3,6	;RP1=0, select bank0
  1987  039C  00D8               	movwf	___fladd@a+2
  1988  039D  1683               	bsf	3,5	;RP0=1, select bank1
  1989  039E  1303               	bcf	3,6	;RP1=0, select bank1
  1990  039F  0841               	movf	(sprintf@fval+1)^(0+128),w
  1991  03A0  1283               	bcf	3,5	;RP0=0, select bank0
  1992  03A1  1303               	bcf	3,6	;RP1=0, select bank0
  1993  03A2  00D7               	movwf	___fladd@a+1
  1994  03A3  1683               	bsf	3,5	;RP0=1, select bank1
  1995  03A4  1303               	bcf	3,6	;RP1=0, select bank1
  1996  03A5  0840               	movf	sprintf@fval^(0+128),w
  1997  03A6  1283               	bcf	3,5	;RP0=0, select bank0
  1998  03A7  1303               	bcf	3,6	;RP1=0, select bank0
  1999  03A8  00D6               	movwf	___fladd@a
  2000  03A9  160A  118A  2578  120A  118A  	fcall	___fladd
  2001  03AE  1283               	bcf	3,5	;RP0=0, select bank0
  2002  03AF  1303               	bcf	3,6	;RP1=0, select bank0
  2003  03B0  0855               	movf	?___fladd+3,w
  2004  03B1  1683               	bsf	3,5	;RP0=1, select bank1
  2005  03B2  1303               	bcf	3,6	;RP1=0, select bank1
  2006  03B3  00C3               	movwf	(sprintf@fval+3)^(0+128)
  2007  03B4  1283               	bcf	3,5	;RP0=0, select bank0
  2008  03B5  1303               	bcf	3,6	;RP1=0, select bank0
  2009  03B6  0854               	movf	?___fladd+2,w
  2010  03B7  1683               	bsf	3,5	;RP0=1, select bank1
  2011  03B8  1303               	bcf	3,6	;RP1=0, select bank1
  2012  03B9  00C2               	movwf	(sprintf@fval+2)^(0+128)
  2013  03BA  1283               	bcf	3,5	;RP0=0, select bank0
  2014  03BB  1303               	bcf	3,6	;RP1=0, select bank0
  2015  03BC  0853               	movf	?___fladd+1,w
  2016  03BD  1683               	bsf	3,5	;RP0=1, select bank1
  2017  03BE  1303               	bcf	3,6	;RP1=0, select bank1
  2018  03BF  00C1               	movwf	(sprintf@fval+1)^(0+128)
  2019  03C0  1283               	bcf	3,5	;RP0=0, select bank0
  2020  03C1  1303               	bcf	3,6	;RP1=0, select bank0
  2021  03C2  0852               	movf	?___fladd,w
  2022  03C3  1683               	bsf	3,5	;RP0=1, select bank1
  2023  03C4  1303               	bcf	3,6	;RP1=0, select bank1
  2024  03C5  00C0               	movwf	sprintf@fval^(0+128)
  2025  03C6                     l3088:
  2026                           
  2027                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1142:     if((eex
      +                          p > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  2028  03C6  1683               	bsf	3,5	;RP0=1, select bank1
  2029  03C7  1303               	bcf	3,6	;RP1=0, select bank1
  2030  03C8  0838               	movf	(sprintf@eexp+1)^(0+128),w
  2031  03C9  3A80               	xorlw	128
  2032  03CA  00FF               	movwf	btemp+1
  2033  03CB  3080               	movlw	128
  2034  03CC  027F               	subwf	btemp+1,w
  2035  03CD  1D03               	skipz
  2036  03CE  2BD1               	goto	u5315
  2037  03CF  300A               	movlw	10
  2038  03D0  0237               	subwf	sprintf@eexp^(0+128),w
  2039  03D1                     u5315:
  2040  03D1  1803               	skipnc
  2041  03D2  2BD4               	goto	u5311
  2042  03D3  2BD5               	goto	u5310
  2043  03D4                     u5311:
  2044  03D4  2C26               	goto	l3096
  2045  03D5                     u5310:
  2046  03D5                     l3090:
  2047  03D5  1683               	bsf	3,5	;RP0=1, select bank1
  2048  03D6  1303               	bcf	3,6	;RP1=0, select bank1
  2049  03D7  0843               	movf	(sprintf@fval+3)^(0+128),w
  2050  03D8  00F3               	movwf	___fleq@ff1+3
  2051  03D9  0842               	movf	(sprintf@fval+2)^(0+128),w
  2052  03DA  00F2               	movwf	___fleq@ff1+2
  2053  03DB  0841               	movf	(sprintf@fval+1)^(0+128),w
  2054  03DC  00F1               	movwf	___fleq@ff1+1
  2055  03DD  0840               	movf	sprintf@fval^(0+128),w
  2056  03DE  00F0               	movwf	___fleq@ff1
  2057  03DF  3000               	movlw	0
  2058  03E0  00F7               	movwf	___fleq@ff2+3
  2059  03E1  3000               	movlw	0
  2060  03E2  00F6               	movwf	___fleq@ff2+2
  2061  03E3  3000               	movlw	0
  2062  03E4  00F5               	movwf	___fleq@ff2+1
  2063  03E5  3000               	movlw	0
  2064  03E6  00F4               	movwf	___fleq@ff2
  2065  03E7  160A  158A  2636  120A  118A  	fcall	___fleq
  2066  03EC  1803               	btfsc	3,0
  2067  03ED  2BEF               	goto	u5321
  2068  03EE  2BF0               	goto	u5320
  2069  03EF                     u5321:
  2070  03EF  2C98               	goto	l3110
  2071  03F0                     u5320:
  2072  03F0                     l3092:
  2073  03F0  1683               	bsf	3,5	;RP0=1, select bank1
  2074  03F1  1303               	bcf	3,6	;RP1=0, select bank1
  2075  03F2  0843               	movf	(sprintf@fval+3)^(0+128),w
  2076  03F3  1283               	bcf	3,5	;RP0=0, select bank0
  2077  03F4  1303               	bcf	3,6	;RP1=0, select bank0
  2078  03F5  00D4               	movwf	___fltol@f1+3
  2079  03F6  1683               	bsf	3,5	;RP0=1, select bank1
  2080  03F7  1303               	bcf	3,6	;RP1=0, select bank1
  2081  03F8  0842               	movf	(sprintf@fval+2)^(0+128),w
  2082  03F9  1283               	bcf	3,5	;RP0=0, select bank0
  2083  03FA  1303               	bcf	3,6	;RP1=0, select bank0
  2084  03FB  00D3               	movwf	___fltol@f1+2
  2085  03FC  1683               	bsf	3,5	;RP0=1, select bank1
  2086  03FD  1303               	bcf	3,6	;RP1=0, select bank1
  2087  03FE  0841               	movf	(sprintf@fval+1)^(0+128),w
  2088  03FF  1283               	bcf	3,5	;RP0=0, select bank0
  2089  0400  1303               	bcf	3,6	;RP1=0, select bank0
  2090  0401  00D2               	movwf	___fltol@f1+1
  2091  0402  1683               	bsf	3,5	;RP0=1, select bank1
  2092  0403  1303               	bcf	3,6	;RP1=0, select bank1
  2093  0404  0840               	movf	sprintf@fval^(0+128),w
  2094  0405  1283               	bcf	3,5	;RP0=0, select bank0
  2095  0406  1303               	bcf	3,6	;RP1=0, select bank0
  2096  0407  00D1               	movwf	___fltol@f1
  2097  0408  120A  158A  2007  120A  118A  	fcall	___fltol
  2098  040D  1283               	bcf	3,5	;RP0=0, select bank0
  2099  040E  1303               	bcf	3,6	;RP1=0, select bank0
  2100  040F  0854               	movf	?___fltol+3,w
  2101  0410  0453               	iorwf	?___fltol+2,w
  2102  0411  0452               	iorwf	?___fltol+1,w
  2103  0412  0451               	iorwf	?___fltol,w
  2104  0413  1D03               	skipz
  2105  0414  2C16               	goto	u5331
  2106  0415  2C17               	goto	u5330
  2107  0416                     u5331:
  2108  0416  2C98               	goto	l3110
  2109  0417                     u5330:
  2110  0417                     l3094:
  2111  0417  1683               	bsf	3,5	;RP0=1, select bank1
  2112  0418  1303               	bcf	3,6	;RP1=0, select bank1
  2113  0419  0838               	movf	(sprintf@eexp+1)^(0+128),w
  2114  041A  3A80               	xorlw	128
  2115  041B  00FF               	movwf	btemp+1
  2116  041C  3080               	movlw	128
  2117  041D  027F               	subwf	btemp+1,w
  2118  041E  1D03               	skipz
  2119  041F  2C22               	goto	u5345
  2120  0420  3002               	movlw	2
  2121  0421  0237               	subwf	sprintf@eexp^(0+128),w
  2122  0422                     u5345:
  2123  0422  1C03               	skipc
  2124  0423  2C25               	goto	u5341
  2125  0424  2C26               	goto	u5340
  2126  0425                     u5341:
  2127  0425  2C98               	goto	l3110
  2128  0426                     u5340:
  2129  0426                     l3096:
  2130                           
  2131                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1146:      if(tmp
      +                          val.integ < 4.294967296){
  2132  0426  1683               	bsf	3,5	;RP0=1, select bank1
  2133  0427  1303               	bcf	3,6	;RP1=0, select bank1
  2134  0428  083C               	movf	(sprintf@tmpval+3)^(0+128),w
  2135  0429  00F3               	movwf	___flge@ff1+3
  2136  042A  083B               	movf	(sprintf@tmpval+2)^(0+128),w
  2137  042B  00F2               	movwf	___flge@ff1+2
  2138  042C  083A               	movf	(sprintf@tmpval+1)^(0+128),w
  2139  042D  00F1               	movwf	___flge@ff1+1
  2140  042E  0839               	movf	sprintf@tmpval^(0+128),w
  2141  042F  00F0               	movwf	___flge@ff1
  2142  0430  3040               	movlw	64
  2143  0431  00F7               	movwf	___flge@ff2+3
  2144  0432  3089               	movlw	137
  2145  0433  00F6               	movwf	___flge@ff2+2
  2146  0434  3070               	movlw	112
  2147  0435  00F5               	movwf	___flge@ff2+1
  2148  0436  305F               	movlw	95
  2149  0437  00F4               	movwf	___flge@ff2
  2150  0438  160A  118A  2034  120A  118A  	fcall	___flge
  2151  043D  1803               	btfsc	3,0
  2152  043E  2C40               	goto	u5351
  2153  043F  2C41               	goto	u5350
  2154  0440                     u5351:
  2155  0440  2C4A               	goto	l3100
  2156  0441                     u5350:
  2157  0441                     l3098:
  2158                           
  2159                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1147:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-1;
  2160  0441  30F7               	movlw	247
  2161  0442  1683               	bsf	3,5	;RP0=1, select bank1
  2162  0443  1303               	bcf	3,6	;RP1=0, select bank1
  2163  0444  07B7               	addwf	sprintf@eexp^(0+128),f
  2164  0445  1803               	skipnc
  2165  0446  0AB8               	incf	(sprintf@eexp+1)^(0+128),f
  2166  0447  30FF               	movlw	255
  2167  0448  07B8               	addwf	(sprintf@eexp+1)^(0+128),f
  2168                           
  2169                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1148:      }else{
  2170  0449  2C52               	goto	l3102
  2171  044A                     l3100:
  2172                           
  2173                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1149:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-2;
  2174  044A  30F8               	movlw	248
  2175  044B  1683               	bsf	3,5	;RP0=1, select bank1
  2176  044C  1303               	bcf	3,6	;RP1=0, select bank1
  2177  044D  07B7               	addwf	sprintf@eexp^(0+128),f
  2178  044E  1803               	skipnc
  2179  044F  0AB8               	incf	(sprintf@eexp+1)^(0+128),f
  2180  0450  30FF               	movlw	255
  2181  0451  07B8               	addwf	(sprintf@eexp+1)^(0+128),f
  2182  0452                     l3102:
  2183                           
  2184                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1152:      val = 
      +                          ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.integ));
  2185  0452  0837               	movf	sprintf@eexp^(0+128),w
  2186  0453  120A  158A  2140  120A  118A  	fcall	_scale
  2187  0458  1283               	bcf	3,5	;RP0=0, select bank0
  2188  0459  1303               	bcf	3,6	;RP1=0, select bank0
  2189  045A  0841               	movf	?_scale+3,w
  2190  045B  1683               	bsf	3,5	;RP0=1, select bank1
  2191  045C  1303               	bcf	3,6	;RP1=0, select bank1
  2192  045D  00BC               	movwf	(sprintf@tmpval+3)^(0+128)
  2193  045E  1283               	bcf	3,5	;RP0=0, select bank0
  2194  045F  1303               	bcf	3,6	;RP1=0, select bank0
  2195  0460  0840               	movf	?_scale+2,w
  2196  0461  1683               	bsf	3,5	;RP0=1, select bank1
  2197  0462  1303               	bcf	3,6	;RP1=0, select bank1
  2198  0463  00BB               	movwf	(sprintf@tmpval+2)^(0+128)
  2199  0464  1283               	bcf	3,5	;RP0=0, select bank0
  2200  0465  1303               	bcf	3,6	;RP1=0, select bank0
  2201  0466  083F               	movf	?_scale+1,w
  2202  0467  1683               	bsf	3,5	;RP0=1, select bank1
  2203  0468  1303               	bcf	3,6	;RP1=0, select bank1
  2204  0469  00BA               	movwf	(sprintf@tmpval+1)^(0+128)
  2205  046A  1283               	bcf	3,5	;RP0=0, select bank0
  2206  046B  1303               	bcf	3,6	;RP1=0, select bank0
  2207  046C  083E               	movf	?_scale,w
  2208  046D  1683               	bsf	3,5	;RP0=1, select bank1
  2209  046E  1303               	bcf	3,6	;RP1=0, select bank1
  2210  046F  00B9               	movwf	sprintf@tmpval^(0+128)
  2211  0470                     l3104:
  2212  0470  0843               	movf	(sprintf@fval+3)^(0+128),w
  2213  0471  00F3               	movwf	__div_to_l_@f1+3
  2214  0472  0842               	movf	(sprintf@fval+2)^(0+128),w
  2215  0473  00F2               	movwf	__div_to_l_@f1+2
  2216  0474  0841               	movf	(sprintf@fval+1)^(0+128),w
  2217  0475  00F1               	movwf	__div_to_l_@f1+1
  2218  0476  0840               	movf	sprintf@fval^(0+128),w
  2219  0477  00F0               	movwf	__div_to_l_@f1
  2220  0478  083C               	movf	(sprintf@tmpval+3)^(0+128),w
  2221  0479  00F7               	movwf	__div_to_l_@f2+3
  2222  047A  083B               	movf	(sprintf@tmpval+2)^(0+128),w
  2223  047B  00F6               	movwf	__div_to_l_@f2+2
  2224  047C  083A               	movf	(sprintf@tmpval+1)^(0+128),w
  2225  047D  00F5               	movwf	__div_to_l_@f2+1
  2226  047E  0839               	movf	sprintf@tmpval^(0+128),w
  2227  047F  00F4               	movwf	__div_to_l_@f2
  2228  0480  120A  118A  20B2  120A  118A  	fcall	__div_to_l_
  2229  0485  0873               	movf	?__div_to_l_+3,w
  2230  0486  1683               	bsf	3,5	;RP0=1, select bank1
  2231  0487  1303               	bcf	3,6	;RP1=0, select bank1
  2232  0488  00B6               	movwf	(sprintf@val+3)^(0+128)
  2233  0489  0872               	movf	?__div_to_l_+2,w
  2234  048A  00B5               	movwf	(sprintf@val+2)^(0+128)
  2235  048B  0871               	movf	?__div_to_l_+1,w
  2236  048C  00B4               	movwf	(sprintf@val+1)^(0+128)
  2237  048D  0870               	movf	?__div_to_l_,w
  2238  048E  00B3               	movwf	sprintf@val^(0+128)
  2239  048F                     l3108:
  2240                           
  2241                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1155:      fval =
      +                           0.0;
  2242  048F  3000               	movlw	0
  2243  0490  00C3               	movwf	(sprintf@fval+3)^(0+128)
  2244  0491  3000               	movlw	0
  2245  0492  00C2               	movwf	(sprintf@fval+2)^(0+128)
  2246  0493  3000               	movlw	0
  2247  0494  00C1               	movwf	(sprintf@fval+1)^(0+128)
  2248  0495  3000               	movlw	0
  2249  0496  00C0               	movwf	sprintf@fval^(0+128)
  2250                           
  2251                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1156:     } else 
      +                          {
  2252  0497  2D1C               	goto	l3116
  2253  0498                     l3110:
  2254                           
  2255                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1157:      val = 
      +                          (unsigned long)fval;
  2256  0498  1683               	bsf	3,5	;RP0=1, select bank1
  2257  0499  1303               	bcf	3,6	;RP1=0, select bank1
  2258  049A  0843               	movf	(sprintf@fval+3)^(0+128),w
  2259  049B  1283               	bcf	3,5	;RP0=0, select bank0
  2260  049C  1303               	bcf	3,6	;RP1=0, select bank0
  2261  049D  00D4               	movwf	___fltol@f1+3
  2262  049E  1683               	bsf	3,5	;RP0=1, select bank1
  2263  049F  1303               	bcf	3,6	;RP1=0, select bank1
  2264  04A0  0842               	movf	(sprintf@fval+2)^(0+128),w
  2265  04A1  1283               	bcf	3,5	;RP0=0, select bank0
  2266  04A2  1303               	bcf	3,6	;RP1=0, select bank0
  2267  04A3  00D3               	movwf	___fltol@f1+2
  2268  04A4  1683               	bsf	3,5	;RP0=1, select bank1
  2269  04A5  1303               	bcf	3,6	;RP1=0, select bank1
  2270  04A6  0841               	movf	(sprintf@fval+1)^(0+128),w
  2271  04A7  1283               	bcf	3,5	;RP0=0, select bank0
  2272  04A8  1303               	bcf	3,6	;RP1=0, select bank0
  2273  04A9  00D2               	movwf	___fltol@f1+1
  2274  04AA  1683               	bsf	3,5	;RP0=1, select bank1
  2275  04AB  1303               	bcf	3,6	;RP1=0, select bank1
  2276  04AC  0840               	movf	sprintf@fval^(0+128),w
  2277  04AD  1283               	bcf	3,5	;RP0=0, select bank0
  2278  04AE  1303               	bcf	3,6	;RP1=0, select bank0
  2279  04AF  00D1               	movwf	___fltol@f1
  2280  04B0  120A  158A  2007  120A  118A  	fcall	___fltol
  2281  04B5  1283               	bcf	3,5	;RP0=0, select bank0
  2282  04B6  1303               	bcf	3,6	;RP1=0, select bank0
  2283  04B7  0854               	movf	?___fltol+3,w
  2284  04B8  1683               	bsf	3,5	;RP0=1, select bank1
  2285  04B9  1303               	bcf	3,6	;RP1=0, select bank1
  2286  04BA  00B6               	movwf	(sprintf@val+3)^(0+128)
  2287  04BB  1283               	bcf	3,5	;RP0=0, select bank0
  2288  04BC  1303               	bcf	3,6	;RP1=0, select bank0
  2289  04BD  0853               	movf	?___fltol+2,w
  2290  04BE  1683               	bsf	3,5	;RP0=1, select bank1
  2291  04BF  1303               	bcf	3,6	;RP1=0, select bank1
  2292  04C0  00B5               	movwf	(sprintf@val+2)^(0+128)
  2293  04C1  1283               	bcf	3,5	;RP0=0, select bank0
  2294  04C2  1303               	bcf	3,6	;RP1=0, select bank0
  2295  04C3  0852               	movf	?___fltol+1,w
  2296  04C4  1683               	bsf	3,5	;RP0=1, select bank1
  2297  04C5  1303               	bcf	3,6	;RP1=0, select bank1
  2298  04C6  00B4               	movwf	(sprintf@val+1)^(0+128)
  2299  04C7  1283               	bcf	3,5	;RP0=0, select bank0
  2300  04C8  1303               	bcf	3,6	;RP1=0, select bank0
  2301  04C9  0851               	movf	?___fltol,w
  2302  04CA  1683               	bsf	3,5	;RP0=1, select bank1
  2303  04CB  1303               	bcf	3,6	;RP1=0, select bank1
  2304  04CC  00B3               	movwf	sprintf@val^(0+128)
  2305  04CD                     l3112:
  2306                           
  2307                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1158:      fval -
      +                          = (double)val;
  2308  04CD  0836               	movf	(sprintf@val+3)^(0+128),w
  2309  04CE  00F3               	movwf	___xxtofl@val+3
  2310  04CF  0835               	movf	(sprintf@val+2)^(0+128),w
  2311  04D0  00F2               	movwf	___xxtofl@val+2
  2312  04D1  0834               	movf	(sprintf@val+1)^(0+128),w
  2313  04D2  00F1               	movwf	___xxtofl@val+1
  2314  04D3  0833               	movf	sprintf@val^(0+128),w
  2315  04D4  00F0               	movwf	___xxtofl@val
  2316  04D5  3000               	movlw	0
  2317  04D6  160A  118A  20D6  120A  118A  	fcall	___xxtofl
  2318  04DB  0873               	movf	?___xxtofl+3,w
  2319  04DC  1283               	bcf	3,5	;RP0=0, select bank0
  2320  04DD  1303               	bcf	3,6	;RP1=0, select bank0
  2321  04DE  00E9               	movwf	___flsub@a+3
  2322  04DF  0872               	movf	?___xxtofl+2,w
  2323  04E0  00E8               	movwf	___flsub@a+2
  2324  04E1  0871               	movf	?___xxtofl+1,w
  2325  04E2  00E7               	movwf	___flsub@a+1
  2326  04E3  0870               	movf	?___xxtofl,w
  2327  04E4  00E6               	movwf	___flsub@a
  2328  04E5  1683               	bsf	3,5	;RP0=1, select bank1
  2329  04E6  1303               	bcf	3,6	;RP1=0, select bank1
  2330  04E7  0843               	movf	(sprintf@fval+3)^(0+128),w
  2331  04E8  1283               	bcf	3,5	;RP0=0, select bank0
  2332  04E9  1303               	bcf	3,6	;RP1=0, select bank0
  2333  04EA  00ED               	movwf	___flsub@b+3
  2334  04EB  1683               	bsf	3,5	;RP0=1, select bank1
  2335  04EC  1303               	bcf	3,6	;RP1=0, select bank1
  2336  04ED  0842               	movf	(sprintf@fval+2)^(0+128),w
  2337  04EE  1283               	bcf	3,5	;RP0=0, select bank0
  2338  04EF  1303               	bcf	3,6	;RP1=0, select bank0
  2339  04F0  00EC               	movwf	___flsub@b+2
  2340  04F1  1683               	bsf	3,5	;RP0=1, select bank1
  2341  04F2  1303               	bcf	3,6	;RP1=0, select bank1
  2342  04F3  0841               	movf	(sprintf@fval+1)^(0+128),w
  2343  04F4  1283               	bcf	3,5	;RP0=0, select bank0
  2344  04F5  1303               	bcf	3,6	;RP1=0, select bank0
  2345  04F6  00EB               	movwf	___flsub@b+1
  2346  04F7  1683               	bsf	3,5	;RP0=1, select bank1
  2347  04F8  1303               	bcf	3,6	;RP1=0, select bank1
  2348  04F9  0840               	movf	sprintf@fval^(0+128),w
  2349  04FA  1283               	bcf	3,5	;RP0=0, select bank0
  2350  04FB  1303               	bcf	3,6	;RP1=0, select bank0
  2351  04FC  00EA               	movwf	___flsub@b
  2352  04FD  160A  158A  2548  120A  118A  	fcall	___flsub
  2353  0502  1283               	bcf	3,5	;RP0=0, select bank0
  2354  0503  1303               	bcf	3,6	;RP1=0, select bank0
  2355  0504  0869               	movf	?___flsub+3,w
  2356  0505  1683               	bsf	3,5	;RP0=1, select bank1
  2357  0506  1303               	bcf	3,6	;RP1=0, select bank1
  2358  0507  00C3               	movwf	(sprintf@fval+3)^(0+128)
  2359  0508  1283               	bcf	3,5	;RP0=0, select bank0
  2360  0509  1303               	bcf	3,6	;RP1=0, select bank0
  2361  050A  0868               	movf	?___flsub+2,w
  2362  050B  1683               	bsf	3,5	;RP0=1, select bank1
  2363  050C  1303               	bcf	3,6	;RP1=0, select bank1
  2364  050D  00C2               	movwf	(sprintf@fval+2)^(0+128)
  2365  050E  1283               	bcf	3,5	;RP0=0, select bank0
  2366  050F  1303               	bcf	3,6	;RP1=0, select bank0
  2367  0510  0867               	movf	?___flsub+1,w
  2368  0511  1683               	bsf	3,5	;RP0=1, select bank1
  2369  0512  1303               	bcf	3,6	;RP1=0, select bank1
  2370  0513  00C1               	movwf	(sprintf@fval+1)^(0+128)
  2371  0514  1283               	bcf	3,5	;RP0=0, select bank0
  2372  0515  1303               	bcf	3,6	;RP1=0, select bank0
  2373  0516  0866               	movf	?___flsub,w
  2374  0517  1683               	bsf	3,5	;RP0=1, select bank1
  2375  0518  1303               	bcf	3,6	;RP1=0, select bank1
  2376  0519  00C0               	movwf	sprintf@fval^(0+128)
  2377  051A                     l3114:
  2378                           
  2379                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1159:      eexp =
      +                           0;
  2380  051A  01B7               	clrf	sprintf@eexp^(0+128)
  2381  051B  01B8               	clrf	(sprintf@eexp+1)^(0+128)
  2382  051C                     l3116:
  2383                           
  2384                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1162:     for(c =
      +                           1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  2385  051C  01C4               	clrf	sprintf@c^(0+128)
  2386  051D  0AC4               	incf	sprintf@c^(0+128),f
  2387  051E                     l3122:
  2388                           
  2389                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1163:      if(val
      +                           < dpowers[c])
  2390  051E  0844               	movf	sprintf@c^(0+128),w
  2391  051F  00A5               	movwf	??_sprintf^(0+128)
  2392  0520  3001               	movlw	1
  2393  0521                     u5365:
  2394  0521  1003               	clrc
  2395  0522  0DA5               	rlf	??_sprintf^(0+128),f
  2396  0523  3EFF               	addlw	-1
  2397  0524  1D03               	skipz
  2398  0525  2D21               	goto	u5365
  2399  0526  1003               	clrc
  2400  0527  0D25               	rlf	??_sprintf^(0+128),w
  2401  0528  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2402  0529  0084               	movwf	4
  2403  052A  160A  158A  2000  120A  118A  	fcall	stringdir
  2404  052F  00A6               	movwf	(??_sprintf+1)^(0+128)
  2405  0530  160A  158A  2000  120A  118A  	fcall	stringdir
  2406  0535  00A7               	movwf	((??_sprintf+1)^(0+128)+1)
  2407  0536  160A  158A  2000  120A  118A  	fcall	stringdir
  2408  053B  00A8               	movwf	((??_sprintf+1)^(0+128)+2)
  2409  053C  160A  158A  2000  120A  118A  	fcall	stringdir
  2410  0541  00A9               	movwf	((??_sprintf+1)^(0+128)+3)
  2411  0542  0829               	movf	(??_sprintf+4)^(0+128),w
  2412  0543  0236               	subwf	(sprintf@val+3)^(0+128),w
  2413  0544  1D03               	skipz
  2414  0545  2D50               	goto	u5375
  2415  0546  0828               	movf	(??_sprintf+3)^(0+128),w
  2416  0547  0235               	subwf	(sprintf@val+2)^(0+128),w
  2417  0548  1D03               	skipz
  2418  0549  2D50               	goto	u5375
  2419  054A  0827               	movf	(??_sprintf+2)^(0+128),w
  2420  054B  0234               	subwf	(sprintf@val+1)^(0+128),w
  2421  054C  1D03               	skipz
  2422  054D  2D50               	goto	u5375
  2423  054E  0826               	movf	(??_sprintf+1)^(0+128),w
  2424  054F  0233               	subwf	sprintf@val^(0+128),w
  2425  0550                     u5375:
  2426  0550  1803               	skipnc
  2427  0551  2D53               	goto	u5371
  2428  0552  2D54               	goto	u5370
  2429  0553                     u5371:
  2430  0553  2D55               	goto	l3126
  2431  0554                     u5370:
  2432  0554  2D5F               	goto	l3128
  2433  0555                     l3126:
  2434  0555  3001               	movlw	1
  2435  0556  00A5               	movwf	??_sprintf^(0+128)
  2436  0557  0825               	movf	??_sprintf^(0+128),w
  2437  0558  07C4               	addwf	sprintf@c^(0+128),f
  2438  0559  300A               	movlw	10
  2439  055A  0644               	xorwf	sprintf@c^(0+128),w
  2440  055B  1D03               	btfss	3,2
  2441  055C  2D5E               	goto	u5381
  2442  055D  2D5F               	goto	u5380
  2443  055E                     u5381:
  2444  055E  2D1E               	goto	l3122
  2445  055F                     u5380:
  2446  055F                     l3128:
  2447                           
  2448                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1201:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1214:     if(flag & 0x0
      +                          3)
  2449  055F  3003               	movlw	3
  2450  0560  0531               	andwf	sprintf@flag^(0+128),w
  2451  0561  00A5               	movwf	??_sprintf^(0+128)
  2452  0562  3000               	movlw	0
  2453  0563  0532               	andwf	(sprintf@flag+1)^(0+128),w
  2454  0564  00A6               	movwf	(??_sprintf+1)^(0+128)
  2455  0565  0825               	movf	??_sprintf^(0+128),w
  2456  0566  0426               	iorwf	(??_sprintf^(0+128)+1),w
  2457  0567  1903               	btfsc	3,2
  2458  0568  2D6A               	goto	u5391
  2459  0569  2D6B               	goto	u5390
  2460  056A                     u5391:
  2461  056A  2DE4               	goto	l3144
  2462  056B                     u5390:
  2463  056B                     l3130:
  2464                           
  2465                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1216:      ((*sp+
      +                          + = ('-')),(++ccnt));
  2466  056B  302D               	movlw	45
  2467  056C  00A5               	movwf	??_sprintf^(0+128)
  2468  056D  083D               	movf	sprintf@sp^(0+128),w
  2469  056E  0084               	movwf	4
  2470  056F  0825               	movf	??_sprintf^(0+128),w
  2471  0570  1383               	bcf	3,7	;select IRP bank0
  2472  0571  0080               	movwf	0
  2473  0572                     l3132:
  2474  0572  3001               	movlw	1
  2475  0573  00A5               	movwf	??_sprintf^(0+128)
  2476  0574  0825               	movf	??_sprintf^(0+128),w
  2477  0575  07BD               	addwf	sprintf@sp^(0+128),f
  2478  0576                     l3134:
  2479  0576  3001               	movlw	1
  2480  0577  07AF               	addwf	sprintf@ccnt^(0+128),f
  2481  0578  1803               	skipnc
  2482  0579  0AB0               	incf	(sprintf@ccnt+1)^(0+128),f
  2483  057A  3000               	movlw	0
  2484  057B  07B0               	addwf	(sprintf@ccnt+1)^(0+128),f
  2485  057C  2DE4               	goto	l3144
  2486  057D                     l3136:
  2487                           
  2488                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1226:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1227:      tmpval.vd = 
      +                          val/dpowers[c];
  2489  057D  0844               	movf	sprintf@c^(0+128),w
  2490  057E  00A5               	movwf	??_sprintf^(0+128)
  2491  057F  3001               	movlw	1
  2492  0580                     u5405:
  2493  0580  1003               	clrc
  2494  0581  0DA5               	rlf	??_sprintf^(0+128),f
  2495  0582  3EFF               	addlw	-1
  2496  0583  1D03               	skipz
  2497  0584  2D80               	goto	u5405
  2498  0585  1003               	clrc
  2499  0586  0D25               	rlf	??_sprintf^(0+128),w
  2500  0587  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2501  0588  0084               	movwf	4
  2502  0589  160A  158A  2000  120A  118A  	fcall	stringdir
  2503  058E  00F0               	movwf	___lldiv@divisor
  2504  058F  160A  158A  2000  120A  118A  	fcall	stringdir
  2505  0594  00F1               	movwf	___lldiv@divisor+1
  2506  0595  160A  158A  2000  120A  118A  	fcall	stringdir
  2507  059A  00F2               	movwf	___lldiv@divisor+2
  2508  059B  160A  158A  2000  120A  118A  	fcall	stringdir
  2509  05A0  00F3               	movwf	___lldiv@divisor+3
  2510  05A1  0836               	movf	(sprintf@val+3)^(0+128),w
  2511  05A2  00F7               	movwf	___lldiv@dividend+3
  2512  05A3  0835               	movf	(sprintf@val+2)^(0+128),w
  2513  05A4  00F6               	movwf	___lldiv@dividend+2
  2514  05A5  0834               	movf	(sprintf@val+1)^(0+128),w
  2515  05A6  00F5               	movwf	___lldiv@dividend+1
  2516  05A7  0833               	movf	sprintf@val^(0+128),w
  2517  05A8  00F4               	movwf	___lldiv@dividend
  2518  05A9  160A  158A  2731  120A  118A  	fcall	___lldiv
  2519  05AE  0873               	movf	?___lldiv+3,w
  2520  05AF  1683               	bsf	3,5	;RP0=1, select bank1
  2521  05B0  1303               	bcf	3,6	;RP1=0, select bank1
  2522  05B1  00BC               	movwf	(sprintf@tmpval+3)^(0+128)
  2523  05B2  0872               	movf	?___lldiv+2,w
  2524  05B3  00BB               	movwf	(sprintf@tmpval+2)^(0+128)
  2525  05B4  0871               	movf	?___lldiv+1,w
  2526  05B5  00BA               	movwf	(sprintf@tmpval+1)^(0+128)
  2527  05B6  0870               	movf	?___lldiv,w
  2528  05B7  00B9               	movwf	sprintf@tmpval^(0+128)
  2529  05B8                     l3138:
  2530                           
  2531                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1228:      tmpval
      +                          .vd %= 10;
  2532  05B8  3000               	movlw	0
  2533  05B9  00F3               	movwf	___llmod@divisor+3
  2534  05BA  3000               	movlw	0
  2535  05BB  00F2               	movwf	___llmod@divisor+2
  2536  05BC  3000               	movlw	0
  2537  05BD  00F1               	movwf	___llmod@divisor+1
  2538  05BE  300A               	movlw	10
  2539  05BF  00F0               	movwf	___llmod@divisor
  2540  05C0  083C               	movf	(sprintf@tmpval+3)^(0+128),w
  2541  05C1  00F7               	movwf	___llmod@dividend+3
  2542  05C2  083B               	movf	(sprintf@tmpval+2)^(0+128),w
  2543  05C3  00F6               	movwf	___llmod@dividend+2
  2544  05C4  083A               	movf	(sprintf@tmpval+1)^(0+128),w
  2545  05C5  00F5               	movwf	___llmod@dividend+1
  2546  05C6  0839               	movf	sprintf@tmpval^(0+128),w
  2547  05C7  00F4               	movwf	___llmod@dividend
  2548  05C8  160A  158A  2684  120A  118A  	fcall	___llmod
  2549  05CD  0873               	movf	?___llmod+3,w
  2550  05CE  1683               	bsf	3,5	;RP0=1, select bank1
  2551  05CF  1303               	bcf	3,6	;RP1=0, select bank1
  2552  05D0  00BC               	movwf	(sprintf@tmpval+3)^(0+128)
  2553  05D1  0872               	movf	?___llmod+2,w
  2554  05D2  00BB               	movwf	(sprintf@tmpval+2)^(0+128)
  2555  05D3  0871               	movf	?___llmod+1,w
  2556  05D4  00BA               	movwf	(sprintf@tmpval+1)^(0+128)
  2557  05D5  0870               	movf	?___llmod,w
  2558  05D6  00B9               	movwf	sprintf@tmpval^(0+128)
  2559  05D7                     l3140:
  2560                           
  2561                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1229:      ((*sp+
      +                          + = ('0' + tmpval.vd)),(++ccnt));
  2562  05D7  0839               	movf	sprintf@tmpval^(0+128),w
  2563  05D8  3E30               	addlw	48
  2564  05D9  00A5               	movwf	??_sprintf^(0+128)
  2565  05DA  083D               	movf	sprintf@sp^(0+128),w
  2566  05DB  0084               	movwf	4
  2567  05DC  0825               	movf	??_sprintf^(0+128),w
  2568  05DD  1383               	bcf	3,7	;select IRP bank0
  2569  05DE  0080               	movwf	0
  2570  05DF  3001               	movlw	1
  2571  05E0  00A5               	movwf	??_sprintf^(0+128)
  2572  05E1  0825               	movf	??_sprintf^(0+128),w
  2573  05E2  07BD               	addwf	sprintf@sp^(0+128),f
  2574  05E3  2D76               	goto	l3134
  2575  05E4                     l3144:
  2576                           
  2577                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1222:    while(c-
      +                          -) {
  2578  05E4  3001               	movlw	1
  2579  05E5  02C4               	subwf	sprintf@c^(0+128),f
  2580  05E6  0A44               	incf	sprintf@c^(0+128),w
  2581  05E7  1D03               	btfss	3,2
  2582  05E8  2DEA               	goto	u5411
  2583  05E9  2DEB               	goto	u5410
  2584  05EA                     u5411:
  2585  05EA  2D7D               	goto	l3136
  2586  05EB                     u5410:
  2587  05EB  2E05               	goto	l3154
  2588  05EC                     l3146:
  2589                           
  2590                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1234:     ((*sp++
      +                           = ('0')),(++ccnt));
  2591  05EC  3030               	movlw	48
  2592  05ED  1683               	bsf	3,5	;RP0=1, select bank1
  2593  05EE  1303               	bcf	3,6	;RP1=0, select bank1
  2594  05EF  00A5               	movwf	??_sprintf^(0+128)
  2595  05F0  083D               	movf	sprintf@sp^(0+128),w
  2596  05F1  0084               	movwf	4
  2597  05F2  0825               	movf	??_sprintf^(0+128),w
  2598  05F3  1383               	bcf	3,7	;select IRP bank0
  2599  05F4  0080               	movwf	0
  2600  05F5                     l3148:
  2601  05F5  3001               	movlw	1
  2602  05F6  00A5               	movwf	??_sprintf^(0+128)
  2603  05F7  0825               	movf	??_sprintf^(0+128),w
  2604  05F8  07BD               	addwf	sprintf@sp^(0+128),f
  2605  05F9                     l3150:
  2606  05F9  3001               	movlw	1
  2607  05FA  07AF               	addwf	sprintf@ccnt^(0+128),f
  2608  05FB  1803               	skipnc
  2609  05FC  0AB0               	incf	(sprintf@ccnt+1)^(0+128),f
  2610  05FD  3000               	movlw	0
  2611  05FE  07B0               	addwf	(sprintf@ccnt+1)^(0+128),f
  2612  05FF                     l3152:
  2613                           
  2614                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1235:     eexp--;
  2615  05FF  30FF               	movlw	255
  2616  0600  07B7               	addwf	sprintf@eexp^(0+128),f
  2617  0601  1803               	skipnc
  2618  0602  0AB8               	incf	(sprintf@eexp+1)^(0+128),f
  2619  0603  30FF               	movlw	255
  2620  0604  07B8               	addwf	(sprintf@eexp+1)^(0+128),f
  2621  0605                     l3154:
  2622                           
  2623                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1233:    while(ee
      +                          xp > 0) {
  2624  0605  0838               	movf	(sprintf@eexp+1)^(0+128),w
  2625  0606  3A80               	xorlw	128
  2626  0607  00FF               	movwf	btemp+1
  2627  0608  3080               	movlw	128
  2628  0609  027F               	subwf	btemp+1,w
  2629  060A  1D03               	skipz
  2630  060B  2E0E               	goto	u5425
  2631  060C  3001               	movlw	1
  2632  060D  0237               	subwf	sprintf@eexp^(0+128),w
  2633  060E                     u5425:
  2634  060E  1803               	skipnc
  2635  060F  2E11               	goto	u5421
  2636  0610  2E12               	goto	u5420
  2637  0611                     u5421:
  2638  0611  2DEC               	goto	l3146
  2639  0612                     u5420:
  2640  0612                     l3156:
  2641                           
  2642                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1237:    if(prec 
      +                          > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  2643  0612  1683               	bsf	3,5	;RP0=1, select bank1
  2644  0613  1303               	bcf	3,6	;RP1=0, select bank1
  2645  0614  083F               	movf	(sprintf@prec+1)^(0+128),w
  2646  0615  3A80               	xorlw	128
  2647  0616  00FF               	movwf	btemp+1
  2648  0617  3080               	movlw	128
  2649  0618  027F               	subwf	btemp+1,w
  2650  0619  1D03               	skipz
  2651  061A  2E1D               	goto	u5435
  2652  061B  3009               	movlw	9
  2653  061C  023E               	subwf	sprintf@prec^(0+128),w
  2654  061D                     u5435:
  2655  061D  1C03               	skipc
  2656  061E  2E20               	goto	u5431
  2657  061F  2E21               	goto	u5430
  2658  0620                     u5431:
  2659  0620  2E28               	goto	l3160
  2660  0621                     u5430:
  2661  0621                     l3158:
  2662                           
  2663                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1238:     c = (si
      +                          zeof dpowers/sizeof dpowers[0])-2;
  2664  0621  3008               	movlw	8
  2665  0622  1683               	bsf	3,5	;RP0=1, select bank1
  2666  0623  1303               	bcf	3,6	;RP1=0, select bank1
  2667  0624  00A5               	movwf	??_sprintf^(0+128)
  2668  0625  0825               	movf	??_sprintf^(0+128),w
  2669  0626  00C4               	movwf	sprintf@c^(0+128)
  2670  0627  2E2E               	goto	l239
  2671  0628                     l3160:
  2672                           
  2673                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1240:     c = (ch
      +                          ar)prec;
  2674  0628  1683               	bsf	3,5	;RP0=1, select bank1
  2675  0629  1303               	bcf	3,6	;RP1=0, select bank1
  2676  062A  083E               	movf	sprintf@prec^(0+128),w
  2677  062B  00A5               	movwf	??_sprintf^(0+128)
  2678  062C  0825               	movf	??_sprintf^(0+128),w
  2679  062D  00C4               	movwf	sprintf@c^(0+128)
  2680  062E                     l239:
  2681                           
  2682                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1241:    prec -= 
      +                          (int)c;
  2683  062E  0844               	movf	sprintf@c^(0+128),w
  2684  062F  00A5               	movwf	??_sprintf^(0+128)
  2685  0630  01A6               	clrf	(??_sprintf^(0+128)+1)
  2686  0631  0825               	movf	??_sprintf^(0+128),w
  2687  0632  02BE               	subwf	sprintf@prec^(0+128),f
  2688  0633  0826               	movf	(??_sprintf+1)^(0+128),w
  2689  0634  1C03               	skipc
  2690  0635  03BF               	decf	(sprintf@prec+1)^(0+128),f
  2691  0636  02BF               	subwf	(sprintf@prec+1)^(0+128),f
  2692  0637                     l3162:
  2693                           
  2694                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1245:    if(c)
  2695  0637  0844               	movf	sprintf@c^(0+128),w
  2696  0638  1903               	btfsc	3,2
  2697  0639  2E3B               	goto	u5441
  2698  063A  2E3C               	goto	u5440
  2699  063B                     u5441:
  2700  063B  2E4D               	goto	l3170
  2701  063C                     u5440:
  2702  063C                     l3164:
  2703                           
  2704                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1247:     ((*sp++
      +                           = ('.')),(++ccnt));
  2705  063C  302E               	movlw	46
  2706  063D  00A5               	movwf	??_sprintf^(0+128)
  2707  063E  083D               	movf	sprintf@sp^(0+128),w
  2708  063F  0084               	movwf	4
  2709  0640  0825               	movf	??_sprintf^(0+128),w
  2710  0641  1383               	bcf	3,7	;select IRP bank0
  2711  0642  0080               	movwf	0
  2712  0643                     l3166:
  2713  0643  3001               	movlw	1
  2714  0644  00A5               	movwf	??_sprintf^(0+128)
  2715  0645  0825               	movf	??_sprintf^(0+128),w
  2716  0646  07BD               	addwf	sprintf@sp^(0+128),f
  2717  0647                     l3168:
  2718  0647  3001               	movlw	1
  2719  0648  07AF               	addwf	sprintf@ccnt^(0+128),f
  2720  0649  1803               	skipnc
  2721  064A  0AB0               	incf	(sprintf@ccnt+1)^(0+128),f
  2722  064B  3000               	movlw	0
  2723  064C  07B0               	addwf	(sprintf@ccnt+1)^(0+128),f
  2724  064D                     l3170:
  2725                           
  2726                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  2727  064D  0844               	movf	sprintf@c^(0+128),w
  2728  064E  120A  158A  2140  120A  118A  	fcall	_scale
  2729  0653  1283               	bcf	3,5	;RP0=0, select bank0
  2730  0654  1303               	bcf	3,6	;RP1=0, select bank0
  2731  0655  0841               	movf	?_scale+3,w
  2732  0656  1683               	bsf	3,5	;RP0=1, select bank1
  2733  0657  1303               	bcf	3,6	;RP1=0, select bank1
  2734  0658  00AD               	movwf	(_sprintf$957+3)^(0+128)
  2735  0659  1283               	bcf	3,5	;RP0=0, select bank0
  2736  065A  1303               	bcf	3,6	;RP1=0, select bank0
  2737  065B  0840               	movf	?_scale+2,w
  2738  065C  1683               	bsf	3,5	;RP0=1, select bank1
  2739  065D  1303               	bcf	3,6	;RP1=0, select bank1
  2740  065E  00AC               	movwf	(_sprintf$957+2)^(0+128)
  2741  065F  1283               	bcf	3,5	;RP0=0, select bank0
  2742  0660  1303               	bcf	3,6	;RP1=0, select bank0
  2743  0661  083F               	movf	?_scale+1,w
  2744  0662  1683               	bsf	3,5	;RP0=1, select bank1
  2745  0663  1303               	bcf	3,6	;RP1=0, select bank1
  2746  0664  00AB               	movwf	(_sprintf$957+1)^(0+128)
  2747  0665  1283               	bcf	3,5	;RP0=0, select bank0
  2748  0666  1303               	bcf	3,6	;RP1=0, select bank0
  2749  0667  083E               	movf	?_scale,w
  2750  0668  1683               	bsf	3,5	;RP0=1, select bank1
  2751  0669  1303               	bcf	3,6	;RP1=0, select bank1
  2752  066A  00AA               	movwf	_sprintf$957^(0+128)
  2753  066B                     l3172:
  2754                           
  2755                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  2756  066B  082D               	movf	(_sprintf$957+3)^(0+128),w
  2757  066C  1283               	bcf	3,5	;RP0=0, select bank0
  2758  066D  1303               	bcf	3,6	;RP1=0, select bank0
  2759  066E  00AB               	movwf	___flmul@a+3
  2760  066F  1683               	bsf	3,5	;RP0=1, select bank1
  2761  0670  1303               	bcf	3,6	;RP1=0, select bank1
  2762  0671  082C               	movf	(_sprintf$957+2)^(0+128),w
  2763  0672  1283               	bcf	3,5	;RP0=0, select bank0
  2764  0673  1303               	bcf	3,6	;RP1=0, select bank0
  2765  0674  00AA               	movwf	___flmul@a+2
  2766  0675  1683               	bsf	3,5	;RP0=1, select bank1
  2767  0676  1303               	bcf	3,6	;RP1=0, select bank1
  2768  0677  082B               	movf	(_sprintf$957+1)^(0+128),w
  2769  0678  1283               	bcf	3,5	;RP0=0, select bank0
  2770  0679  1303               	bcf	3,6	;RP1=0, select bank0
  2771  067A  00A9               	movwf	___flmul@a+1
  2772  067B  1683               	bsf	3,5	;RP0=1, select bank1
  2773  067C  1303               	bcf	3,6	;RP1=0, select bank1
  2774  067D  082A               	movf	_sprintf$957^(0+128),w
  2775  067E  1283               	bcf	3,5	;RP0=0, select bank0
  2776  067F  1303               	bcf	3,6	;RP1=0, select bank0
  2777  0680  00A8               	movwf	___flmul@a
  2778  0681  1683               	bsf	3,5	;RP0=1, select bank1
  2779  0682  1303               	bcf	3,6	;RP1=0, select bank1
  2780  0683  0843               	movf	(sprintf@fval+3)^(0+128),w
  2781  0684  1283               	bcf	3,5	;RP0=0, select bank0
  2782  0685  1303               	bcf	3,6	;RP1=0, select bank0
  2783  0686  00A7               	movwf	___flmul@b+3
  2784  0687  1683               	bsf	3,5	;RP0=1, select bank1
  2785  0688  1303               	bcf	3,6	;RP1=0, select bank1
  2786  0689  0842               	movf	(sprintf@fval+2)^(0+128),w
  2787  068A  1283               	bcf	3,5	;RP0=0, select bank0
  2788  068B  1303               	bcf	3,6	;RP1=0, select bank0
  2789  068C  00A6               	movwf	___flmul@b+2
  2790  068D  1683               	bsf	3,5	;RP0=1, select bank1
  2791  068E  1303               	bcf	3,6	;RP1=0, select bank1
  2792  068F  0841               	movf	(sprintf@fval+1)^(0+128),w
  2793  0690  1283               	bcf	3,5	;RP0=0, select bank0
  2794  0691  1303               	bcf	3,6	;RP1=0, select bank0
  2795  0692  00A5               	movwf	___flmul@b+1
  2796  0693  1683               	bsf	3,5	;RP0=1, select bank1
  2797  0694  1303               	bcf	3,6	;RP1=0, select bank1
  2798  0695  0840               	movf	sprintf@fval^(0+128),w
  2799  0696  1283               	bcf	3,5	;RP0=0, select bank0
  2800  0697  1303               	bcf	3,6	;RP1=0, select bank0
  2801  0698  00A4               	movwf	___flmul@b
  2802  0699  120A  158A  249F  120A  118A  	fcall	___flmul
  2803  069E  1283               	bcf	3,5	;RP0=0, select bank0
  2804  069F  1303               	bcf	3,6	;RP1=0, select bank0
  2805  06A0  0827               	movf	?___flmul+3,w
  2806  06A1  00D4               	movwf	___fltol@f1+3
  2807  06A2  0826               	movf	?___flmul+2,w
  2808  06A3  00D3               	movwf	___fltol@f1+2
  2809  06A4  0825               	movf	?___flmul+1,w
  2810  06A5  00D2               	movwf	___fltol@f1+1
  2811  06A6  0824               	movf	?___flmul,w
  2812  06A7  00D1               	movwf	___fltol@f1
  2813  06A8  120A  158A  2007  120A  118A  	fcall	___fltol
  2814  06AD  1283               	bcf	3,5	;RP0=0, select bank0
  2815  06AE  1303               	bcf	3,6	;RP1=0, select bank0
  2816  06AF  0854               	movf	?___fltol+3,w
  2817  06B0  1683               	bsf	3,5	;RP0=1, select bank1
  2818  06B1  1303               	bcf	3,6	;RP1=0, select bank1
  2819  06B2  00B6               	movwf	(sprintf@val+3)^(0+128)
  2820  06B3  1283               	bcf	3,5	;RP0=0, select bank0
  2821  06B4  1303               	bcf	3,6	;RP1=0, select bank0
  2822  06B5  0853               	movf	?___fltol+2,w
  2823  06B6  1683               	bsf	3,5	;RP0=1, select bank1
  2824  06B7  1303               	bcf	3,6	;RP1=0, select bank1
  2825  06B8  00B5               	movwf	(sprintf@val+2)^(0+128)
  2826  06B9  1283               	bcf	3,5	;RP0=0, select bank0
  2827  06BA  1303               	bcf	3,6	;RP1=0, select bank0
  2828  06BB  0852               	movf	?___fltol+1,w
  2829  06BC  1683               	bsf	3,5	;RP0=1, select bank1
  2830  06BD  1303               	bcf	3,6	;RP1=0, select bank1
  2831  06BE  00B4               	movwf	(sprintf@val+1)^(0+128)
  2832  06BF  1283               	bcf	3,5	;RP0=0, select bank0
  2833  06C0  1303               	bcf	3,6	;RP1=0, select bank0
  2834  06C1  0851               	movf	?___fltol,w
  2835  06C2  1683               	bsf	3,5	;RP0=1, select bank1
  2836  06C3  1303               	bcf	3,6	;RP1=0, select bank1
  2837  06C4  00B3               	movwf	sprintf@val^(0+128)
  2838                           
  2839                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  2840  06C5  2F6D               	goto	l3184
  2841  06C6                     l3174:
  2842                           
  2843                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1255:     tmpval.
      +                          vd = val/dpowers[c];
  2844  06C6  0844               	movf	sprintf@c^(0+128),w
  2845  06C7  00A5               	movwf	??_sprintf^(0+128)
  2846  06C8  3001               	movlw	1
  2847  06C9                     u5455:
  2848  06C9  1003               	clrc
  2849  06CA  0DA5               	rlf	??_sprintf^(0+128),f
  2850  06CB  3EFF               	addlw	-1
  2851  06CC  1D03               	skipz
  2852  06CD  2EC9               	goto	u5455
  2853  06CE  1003               	clrc
  2854  06CF  0D25               	rlf	??_sprintf^(0+128),w
  2855  06D0  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2856  06D1  0084               	movwf	4
  2857  06D2  160A  158A  2000  120A  118A  	fcall	stringdir
  2858  06D7  00F0               	movwf	___lldiv@divisor
  2859  06D8  160A  158A  2000  120A  118A  	fcall	stringdir
  2860  06DD  00F1               	movwf	___lldiv@divisor+1
  2861  06DE  160A  158A  2000  120A  118A  	fcall	stringdir
  2862  06E3  00F2               	movwf	___lldiv@divisor+2
  2863  06E4  160A  158A  2000  120A  118A  	fcall	stringdir
  2864  06E9  00F3               	movwf	___lldiv@divisor+3
  2865  06EA  0836               	movf	(sprintf@val+3)^(0+128),w
  2866  06EB  00F7               	movwf	___lldiv@dividend+3
  2867  06EC  0835               	movf	(sprintf@val+2)^(0+128),w
  2868  06ED  00F6               	movwf	___lldiv@dividend+2
  2869  06EE  0834               	movf	(sprintf@val+1)^(0+128),w
  2870  06EF  00F5               	movwf	___lldiv@dividend+1
  2871  06F0  0833               	movf	sprintf@val^(0+128),w
  2872  06F1  00F4               	movwf	___lldiv@dividend
  2873  06F2  160A  158A  2731  120A  118A  	fcall	___lldiv
  2874  06F7  0873               	movf	?___lldiv+3,w
  2875  06F8  1683               	bsf	3,5	;RP0=1, select bank1
  2876  06F9  1303               	bcf	3,6	;RP1=0, select bank1
  2877  06FA  00BC               	movwf	(sprintf@tmpval+3)^(0+128)
  2878  06FB  0872               	movf	?___lldiv+2,w
  2879  06FC  00BB               	movwf	(sprintf@tmpval+2)^(0+128)
  2880  06FD  0871               	movf	?___lldiv+1,w
  2881  06FE  00BA               	movwf	(sprintf@tmpval+1)^(0+128)
  2882  06FF  0870               	movf	?___lldiv,w
  2883  0700  00B9               	movwf	sprintf@tmpval^(0+128)
  2884  0701                     l3176:
  2885                           
  2886                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1256:     tmpval.
      +                          vd %= 10;
  2887  0701  3000               	movlw	0
  2888  0702  00F3               	movwf	___llmod@divisor+3
  2889  0703  3000               	movlw	0
  2890  0704  00F2               	movwf	___llmod@divisor+2
  2891  0705  3000               	movlw	0
  2892  0706  00F1               	movwf	___llmod@divisor+1
  2893  0707  300A               	movlw	10
  2894  0708  00F0               	movwf	___llmod@divisor
  2895  0709  083C               	movf	(sprintf@tmpval+3)^(0+128),w
  2896  070A  00F7               	movwf	___llmod@dividend+3
  2897  070B  083B               	movf	(sprintf@tmpval+2)^(0+128),w
  2898  070C  00F6               	movwf	___llmod@dividend+2
  2899  070D  083A               	movf	(sprintf@tmpval+1)^(0+128),w
  2900  070E  00F5               	movwf	___llmod@dividend+1
  2901  070F  0839               	movf	sprintf@tmpval^(0+128),w
  2902  0710  00F4               	movwf	___llmod@dividend
  2903  0711  160A  158A  2684  120A  118A  	fcall	___llmod
  2904  0716  0873               	movf	?___llmod+3,w
  2905  0717  1683               	bsf	3,5	;RP0=1, select bank1
  2906  0718  1303               	bcf	3,6	;RP1=0, select bank1
  2907  0719  00BC               	movwf	(sprintf@tmpval+3)^(0+128)
  2908  071A  0872               	movf	?___llmod+2,w
  2909  071B  00BB               	movwf	(sprintf@tmpval+2)^(0+128)
  2910  071C  0871               	movf	?___llmod+1,w
  2911  071D  00BA               	movwf	(sprintf@tmpval+1)^(0+128)
  2912  071E  0870               	movf	?___llmod,w
  2913  071F  00B9               	movwf	sprintf@tmpval^(0+128)
  2914  0720                     l3178:
  2915                           
  2916                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1257:     ((*sp++
      +                           = ('0' + tmpval.vd)),(++ccnt));
  2917  0720  0839               	movf	sprintf@tmpval^(0+128),w
  2918  0721  3E30               	addlw	48
  2919  0722  00A5               	movwf	??_sprintf^(0+128)
  2920  0723  083D               	movf	sprintf@sp^(0+128),w
  2921  0724  0084               	movwf	4
  2922  0725  0825               	movf	??_sprintf^(0+128),w
  2923  0726  1383               	bcf	3,7	;select IRP bank0
  2924  0727  0080               	movwf	0
  2925  0728  3001               	movlw	1
  2926  0729  00A5               	movwf	??_sprintf^(0+128)
  2927  072A  0825               	movf	??_sprintf^(0+128),w
  2928  072B  07BD               	addwf	sprintf@sp^(0+128),f
  2929  072C                     l3180:
  2930  072C  3001               	movlw	1
  2931  072D  07AF               	addwf	sprintf@ccnt^(0+128),f
  2932  072E  1803               	skipnc
  2933  072F  0AB0               	incf	(sprintf@ccnt+1)^(0+128),f
  2934  0730  3000               	movlw	0
  2935  0731  07B0               	addwf	(sprintf@ccnt+1)^(0+128),f
  2936  0732                     l3182:
  2937                           
  2938                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1258:     val %= 
      +                          dpowers[c];
  2939  0732  0844               	movf	sprintf@c^(0+128),w
  2940  0733  00A5               	movwf	??_sprintf^(0+128)
  2941  0734  3001               	movlw	1
  2942  0735                     u5465:
  2943  0735  1003               	clrc
  2944  0736  0DA5               	rlf	??_sprintf^(0+128),f
  2945  0737  3EFF               	addlw	-1
  2946  0738  1D03               	skipz
  2947  0739  2F35               	goto	u5465
  2948  073A  1003               	clrc
  2949  073B  0D25               	rlf	??_sprintf^(0+128),w
  2950  073C  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2951  073D  0084               	movwf	4
  2952  073E  160A  158A  2000  120A  118A  	fcall	stringdir
  2953  0743  00F0               	movwf	___llmod@divisor
  2954  0744  160A  158A  2000  120A  118A  	fcall	stringdir
  2955  0749  00F1               	movwf	___llmod@divisor+1
  2956  074A  160A  158A  2000  120A  118A  	fcall	stringdir
  2957  074F  00F2               	movwf	___llmod@divisor+2
  2958  0750  160A  158A  2000  120A  118A  	fcall	stringdir
  2959  0755  00F3               	movwf	___llmod@divisor+3
  2960  0756  0836               	movf	(sprintf@val+3)^(0+128),w
  2961  0757  00F7               	movwf	___llmod@dividend+3
  2962  0758  0835               	movf	(sprintf@val+2)^(0+128),w
  2963  0759  00F6               	movwf	___llmod@dividend+2
  2964  075A  0834               	movf	(sprintf@val+1)^(0+128),w
  2965  075B  00F5               	movwf	___llmod@dividend+1
  2966  075C  0833               	movf	sprintf@val^(0+128),w
  2967  075D  00F4               	movwf	___llmod@dividend
  2968  075E  160A  158A  2684  120A  118A  	fcall	___llmod
  2969  0763  0873               	movf	?___llmod+3,w
  2970  0764  1683               	bsf	3,5	;RP0=1, select bank1
  2971  0765  1303               	bcf	3,6	;RP1=0, select bank1
  2972  0766  00B6               	movwf	(sprintf@val+3)^(0+128)
  2973  0767  0872               	movf	?___llmod+2,w
  2974  0768  00B5               	movwf	(sprintf@val+2)^(0+128)
  2975  0769  0871               	movf	?___llmod+1,w
  2976  076A  00B4               	movwf	(sprintf@val+1)^(0+128)
  2977  076B  0870               	movf	?___llmod,w
  2978  076C  00B3               	movwf	sprintf@val^(0+128)
  2979  076D                     l3184:
  2980                           
  2981                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  2982  076D  3001               	movlw	1
  2983  076E  02C4               	subwf	sprintf@c^(0+128),f
  2984  076F  0A44               	incf	sprintf@c^(0+128),w
  2985  0770  1D03               	btfss	3,2
  2986  0771  2F73               	goto	u5471
  2987  0772  2F74               	goto	u5470
  2988  0773                     u5471:
  2989  0773  2EC6               	goto	l3174
  2990  0774                     u5470:
  2991  0774  2F8C               	goto	l3194
  2992  0775                     l3186:
  2993                           
  2994                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1262:     ((*sp++
      +                           = ('0')),(++ccnt));
  2995  0775  3030               	movlw	48
  2996  0776  00A5               	movwf	??_sprintf^(0+128)
  2997  0777  083D               	movf	sprintf@sp^(0+128),w
  2998  0778  0084               	movwf	4
  2999  0779  0825               	movf	??_sprintf^(0+128),w
  3000  077A  1383               	bcf	3,7	;select IRP bank0
  3001  077B  0080               	movwf	0
  3002  077C                     l3188:
  3003  077C  3001               	movlw	1
  3004  077D  00A5               	movwf	??_sprintf^(0+128)
  3005  077E  0825               	movf	??_sprintf^(0+128),w
  3006  077F  07BD               	addwf	sprintf@sp^(0+128),f
  3007  0780                     l3190:
  3008  0780  3001               	movlw	1
  3009  0781  07AF               	addwf	sprintf@ccnt^(0+128),f
  3010  0782  1803               	skipnc
  3011  0783  0AB0               	incf	(sprintf@ccnt+1)^(0+128),f
  3012  0784  3000               	movlw	0
  3013  0785  07B0               	addwf	(sprintf@ccnt+1)^(0+128),f
  3014  0786                     l3192:
  3015                           
  3016                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1263:     prec--;
  3017  0786  30FF               	movlw	255
  3018  0787  07BE               	addwf	sprintf@prec^(0+128),f
  3019  0788  1803               	skipnc
  3020  0789  0ABF               	incf	(sprintf@prec+1)^(0+128),f
  3021  078A  30FF               	movlw	255
  3022  078B  07BF               	addwf	(sprintf@prec+1)^(0+128),f
  3023  078C                     l3194:
  3024                           
  3025                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1261:    while(pr
      +                          ec) {
  3026  078C  083E               	movf	sprintf@prec^(0+128),w
  3027  078D  043F               	iorwf	(sprintf@prec+1)^(0+128),w
  3028  078E  1D03               	btfss	3,2
  3029  078F  2F91               	goto	u5481
  3030  0790  2F92               	goto	u5480
  3031  0791                     u5481:
  3032  0791  2F75               	goto	l3186
  3033  0792                     u5480:
  3034  0792  2FD8               	goto	l3216
  3035  0793                     l3196:
  3036                           
  3037                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1316:   if(prec =
      +                          = 0 && val == 0)
  3038  0793  083E               	movf	sprintf@prec^(0+128),w
  3039  0794  043F               	iorwf	(sprintf@prec+1)^(0+128),w
  3040  0795  1D03               	btfss	3,2
  3041  0796  2F98               	goto	u5491
  3042  0797  2F99               	goto	u5490
  3043  0798                     u5491:
  3044  0798  2FA7               	goto	l247
  3045  0799                     u5490:
  3046  0799                     l3198:
  3047  0799  0836               	movf	(sprintf@val+3)^(0+128),w
  3048  079A  0435               	iorwf	(sprintf@val+2)^(0+128),w
  3049  079B  0434               	iorwf	(sprintf@val+1)^(0+128),w
  3050  079C  0433               	iorwf	sprintf@val^(0+128),w
  3051  079D  1D03               	skipz
  3052  079E  2FA0               	goto	u5501
  3053  079F  2FA1               	goto	u5500
  3054  07A0                     u5501:
  3055  07A0  2FA7               	goto	l247
  3056  07A1                     u5500:
  3057  07A1                     l3200:
  3058                           
  3059                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1317:    prec++;
  3060  07A1  3001               	movlw	1
  3061  07A2  07BE               	addwf	sprintf@prec^(0+128),f
  3062  07A3  1803               	skipnc
  3063  07A4  0ABF               	incf	(sprintf@prec+1)^(0+128),f
  3064  07A5  3000               	movlw	0
  3065  07A6  07BF               	addwf	(sprintf@prec+1)^(0+128),f
  3066  07A7                     l247:
  3067                           
  3068                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1365:   if(c < pr
      +                          ec)
  3069  07A7  083F               	movf	(sprintf@prec+1)^(0+128),w
  3070  07A8  3A80               	xorlw	128
  3071  07A9  3C80               	sublw	128
  3072  07AA  1D03               	skipz
  3073  07AB  2FAE               	goto	u5515
  3074  07AC  083E               	movf	sprintf@prec^(0+128),w
  3075  07AD  0244               	subwf	sprintf@c^(0+128),w
  3076  07AE                     u5515:
  3077  07AE  1803               	skipnc
  3078  07AF  2FB1               	goto	u5511
  3079  07B0  2FB2               	goto	u5510
  3080  07B1                     u5511:
  3081  07B1  2FB3               	goto	l3204
  3082  07B2                     u5510:
  3083  07B2                     l3202:
  3084  07B2  2FC2               	goto	l3208
  3085  07B3                     l3204:
  3086  07B3  1683               	bsf	3,5	;RP0=1, select bank1
  3087  07B4  1303               	bcf	3,6	;RP1=0, select bank1
  3088  07B5  083F               	movf	(sprintf@prec+1)^(0+128),w
  3089  07B6  3A80               	xorlw	128
  3090  07B7  00A5               	movwf	??_sprintf^(0+128)
  3091  07B8  3080               	movlw	128
  3092  07B9  0225               	subwf	??_sprintf^(0+128),w
  3093  07BA  1D03               	skipz
  3094  07BB  2FBE               	goto	u5525
  3095  07BC  0844               	movf	sprintf@c^(0+128),w
  3096  07BD  023E               	subwf	sprintf@prec^(0+128),w
  3097  07BE                     u5525:
  3098  07BE  1803               	skipnc
  3099  07BF  2FC1               	goto	u5521
  3100  07C0  2FC2               	goto	u5520
  3101  07C1                     u5521:
  3102  07C1  2FC2               	goto	l3208
  3103  07C2                     u5520:
  3104  07C2                     l3206:
  3105  07C2                     l3208:
  3106                           
  3107                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  3108  07C2  3003               	movlw	3
  3109  07C3  1683               	bsf	3,5	;RP0=1, select bank1
  3110  07C4  1303               	bcf	3,6	;RP1=0, select bank1
  3111  07C5  0531               	andwf	sprintf@flag^(0+128),w
  3112  07C6  00A5               	movwf	??_sprintf^(0+128)
  3113  07C7  3000               	movlw	0
  3114  07C8  0532               	andwf	(sprintf@flag+1)^(0+128),w
  3115  07C9  00A6               	movwf	(??_sprintf+1)^(0+128)
  3116  07CA  0825               	movf	??_sprintf^(0+128),w
  3117  07CB  0426               	iorwf	(??_sprintf^(0+128)+1),w
  3118  07CC  1903               	btfsc	3,2
  3119  07CD  2FCF               	goto	u5531
  3120  07CE  2FD0               	goto	u5530
  3121  07CF                     u5531:
  3122  07CF  2FD8               	goto	l3216
  3123  07D0                     u5530:
  3124  07D0                     l3210:
  3125                           
  3126                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')),(++ccnt));
  3127  07D0  302D               	movlw	45
  3128  07D1  00A5               	movwf	??_sprintf^(0+128)
  3129  07D2  083D               	movf	sprintf@sp^(0+128),w
  3130  07D3  0084               	movwf	4
  3131  07D4  0825               	movf	??_sprintf^(0+128),w
  3132  07D5  1383               	bcf	3,7	;select IRP bank0
  3133  07D6  0080               	movwf	0
  3134  07D7  2987               	goto	l3010
  3135  07D8                     l3216:
  3136                           
  3137                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  3138  07D8  3001               	movlw	1
  3139  07D9  07A0               	addwf	sprintf@f^(0+128),f
  3140  07DA  30FF               	movlw	-1
  3141  07DB  0720               	addwf	sprintf@f^(0+128),w
  3142  07DC  0084               	movwf	4
  3143  07DD  160A  158A  2000  120A  118A  	fcall	stringdir
  3144  07E2  00A5               	movwf	??_sprintf^(0+128)
  3145  07E3  0825               	movf	??_sprintf^(0+128),w
  3146  07E4  00C4               	movwf	sprintf@c^(0+128)
  3147  07E5  0844               	movf	sprintf@c^(0+128),w
  3148  07E6  1D03               	btfss	3,2
  3149  07E7  2FE9               	goto	u5541
  3150  07E8  2FEA               	goto	u5540
  3151  07E9                     u5541:
  3152  07E9  297A               	goto	l3006
  3153  07EA                     u5540:
  3154  07EA                     l3218:
  3155                           
  3156                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  3157  07EA  083D               	movf	sprintf@sp^(0+128),w
  3158  07EB  0084               	movwf	4
  3159  07EC  1383               	bcf	3,7	;select IRP bank0
  3160  07ED  0180               	clrf	0
  3161  07EE                     l3220:
  3162                           
  3163                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1566:  return ccn
      +                          t;
  3164  07EE  0830               	movf	(sprintf@ccnt+1)^(0+128),w
  3165  07EF  00A1               	movwf	(?_sprintf+1)^(0+128)
  3166  07F0  082F               	movf	sprintf@ccnt^(0+128),w
  3167  07F1  00A0               	movwf	?_sprintf^(0+128)
  3168  07F2                     l253:
  3169  07F2  0008               	return
  3170  07F3                     __end_of_sprintf:
  3171                           
  3172                           	psect	text2
  3173  0940                     __ptext2:	
  3174 ;; *************** function _scale *****************
  3175 ;; Defined at:
  3176 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c"
  3177 ;; Parameters:    Size  Location     Type
  3178 ;;  scl             1    wreg     char 
  3179 ;; Auto vars:     Size  Location     Type
  3180 ;;  scl             1   48[BANK0 ] char 
  3181 ;; Return value:  Size  Location     Type
  3182 ;;                  4   30[BANK0 ] char 
  3183 ;; Registers used:
  3184 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3185 ;; Tracked objects:
  3186 ;;		On entry : 0/0
  3187 ;;		On exit  : 0/0
  3188 ;;		Unchanged: 0/0
  3189 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3190 ;;      Params:         0       4       0       0       0
  3191 ;;      Locals:         0       5       0       0       0
  3192 ;;      Temps:          0      10       0       0       0
  3193 ;;      Totals:         0      19       0       0       0
  3194 ;;Total ram usage:       19 bytes
  3195 ;; Hardware stack levels used: 1
  3196 ;; Hardware stack levels required when called: 2
  3197 ;; This function calls:
  3198 ;;		___awdiv
  3199 ;;		___awmod
  3200 ;;		___flmul
  3201 ;; This function is called by:
  3202 ;;		_sprintf
  3203 ;; This function uses a non-reentrant model
  3204 ;;
  3205                           
  3206  0940                     _scale:	
  3207                           ;psect for function _scale
  3208                           
  3209                           
  3210                           ;incstack = 0
  3211                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3212                           ;scale@scl stored from wreg
  3213  0940  1283               	bcf	3,5	;RP0=0, select bank0
  3214  0941  1303               	bcf	3,6	;RP1=0, select bank0
  3215  0942  00D0               	movwf	scale@scl
  3216  0943                     l2630:
  3217                           
  3218                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 433: scale(signed
      +                           char scl);C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 434: {;
      +                          C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 436:  if(scl < 0) 
      +                          {
  3219  0943  1FD0               	btfss	scale@scl,7
  3220  0944  2946               	goto	u4201
  3221  0945  2947               	goto	u4200
  3222  0946                     u4201:
  3223  0946  2AF4               	goto	l2652
  3224  0947                     u4200:
  3225  0947                     l2632:
  3226                           
  3227                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 437:   scl = -scl
      +                          ;
  3228  0947  09D0               	comf	scale@scl,f
  3229  0948  0AD0               	incf	scale@scl,f
  3230  0949                     l2634:
  3231                           
  3232                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 438:   if(scl>=11
      +                          0)
  3233  0949  0850               	movf	scale@scl,w
  3234  094A  3A80               	xorlw	128
  3235  094B  3E12               	addlw	-238
  3236  094C  1C03               	skipc
  3237  094D  294F               	goto	u4211
  3238  094E  2950               	goto	u4210
  3239  094F                     u4211:
  3240  094F  2A38               	goto	l2642
  3241  0950                     u4210:
  3242  0950                     l2636:
  3243                           
  3244                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  3245  0950  300A               	movlw	10
  3246  0951  00F7               	movwf	___awdiv@divisor
  3247  0952  3000               	movlw	0
  3248  0953  00F8               	movwf	___awdiv@divisor+1
  3249  0954  0850               	movf	scale@scl,w
  3250  0955  00F2               	movwf	___awmod@dividend
  3251  0956  01F3               	clrf	___awmod@dividend+1
  3252  0957  1BF2               	btfsc	___awmod@dividend,7
  3253  0958  03F3               	decf	___awmod@dividend+1,f
  3254  0959  3064               	movlw	100
  3255  095A  00F0               	movwf	___awmod@divisor
  3256  095B  3000               	movlw	0
  3257  095C  00F1               	movwf	___awmod@divisor+1
  3258  095D  160A  158A  26D8  120A  158A  	fcall	___awmod
  3259  0962  0871               	movf	?___awmod+1,w
  3260  0963  00FA               	movwf	___awdiv@dividend+1
  3261  0964  0870               	movf	?___awmod,w
  3262  0965  00F9               	movwf	___awdiv@dividend
  3263  0966  160A  158A  2797  120A  158A  	fcall	___awdiv
  3264  096B  0877               	movf	?___awdiv,w
  3265  096C  1283               	bcf	3,5	;RP0=0, select bank0
  3266  096D  1303               	bcf	3,6	;RP1=0, select bank0
  3267  096E  00C2               	movwf	??_scale
  3268  096F  3001               	movlw	1
  3269  0970                     u4225:
  3270  0970  1003               	clrc
  3271  0971  0DC2               	rlf	??_scale,f
  3272  0972  3EFF               	addlw	-1
  3273  0973  1D03               	skipz
  3274  0974  2970               	goto	u4225
  3275  0975  1003               	clrc
  3276  0976  0D42               	rlf	??_scale,w
  3277  0977  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3278  0978  0084               	movwf	4
  3279  0979  160A  158A  2000  120A  158A  	fcall	stringdir
  3280  097E  00C3               	movwf	??_scale+1
  3281  097F  160A  158A  2000  120A  158A  	fcall	stringdir
  3282  0984  00C4               	movwf	??_scale+2
  3283  0985  160A  158A  2000  120A  158A  	fcall	stringdir
  3284  098A  00C5               	movwf	??_scale+3
  3285  098B  160A  158A  2000  120A  158A  	fcall	stringdir
  3286  0990  00C6               	movwf	??_scale+4
  3287  0991  0846               	movf	??_scale+4,w
  3288  0992  00A7               	movwf	___flmul@b+3
  3289  0993  0845               	movf	??_scale+3,w
  3290  0994  00A6               	movwf	___flmul@b+2
  3291  0995  0844               	movf	??_scale+2,w
  3292  0996  00A5               	movwf	___flmul@b+1
  3293  0997  0843               	movf	??_scale+1,w
  3294  0998  00A4               	movwf	___flmul@b
  3295  0999  3064               	movlw	100
  3296  099A  00F7               	movwf	___awdiv@divisor
  3297  099B  3000               	movlw	0
  3298  099C  00F8               	movwf	___awdiv@divisor+1
  3299  099D  0850               	movf	scale@scl,w
  3300  099E  00F9               	movwf	___awdiv@dividend
  3301  099F  01FA               	clrf	___awdiv@dividend+1
  3302  09A0  1BF9               	btfsc	___awdiv@dividend,7
  3303  09A1  03FA               	decf	___awdiv@dividend+1,f
  3304  09A2  160A  158A  2797  120A  158A  	fcall	___awdiv
  3305  09A7  0877               	movf	?___awdiv,w
  3306  09A8  1283               	bcf	3,5	;RP0=0, select bank0
  3307  09A9  1303               	bcf	3,6	;RP1=0, select bank0
  3308  09AA  00C7               	movwf	??_scale+5
  3309  09AB  3001               	movlw	1
  3310  09AC                     u4235:
  3311  09AC  1003               	clrc
  3312  09AD  0DC7               	rlf	??_scale+5,f
  3313  09AE  3EFF               	addlw	-1
  3314  09AF  1D03               	skipz
  3315  09B0  29AC               	goto	u4235
  3316  09B1  1003               	clrc
  3317  09B2  0D47               	rlf	??_scale+5,w
  3318  09B3  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  3319  09B4  0084               	movwf	4
  3320  09B5  160A  158A  2000  120A  158A  	fcall	stringdir
  3321  09BA  00C8               	movwf	??_scale+6
  3322  09BB  160A  158A  2000  120A  158A  	fcall	stringdir
  3323  09C0  00C9               	movwf	??_scale+7
  3324  09C1  160A  158A  2000  120A  158A  	fcall	stringdir
  3325  09C6  00CA               	movwf	??_scale+8
  3326  09C7  160A  158A  2000  120A  158A  	fcall	stringdir
  3327  09CC  00CB               	movwf	??_scale+9
  3328  09CD  084B               	movf	??_scale+9,w
  3329  09CE  00AB               	movwf	___flmul@a+3
  3330  09CF  084A               	movf	??_scale+8,w
  3331  09D0  00AA               	movwf	___flmul@a+2
  3332  09D1  0849               	movf	??_scale+7,w
  3333  09D2  00A9               	movwf	___flmul@a+1
  3334  09D3  0848               	movf	??_scale+6,w
  3335  09D4  00A8               	movwf	___flmul@a
  3336  09D5  120A  158A  249F  120A  158A  	fcall	___flmul
  3337  09DA  1283               	bcf	3,5	;RP0=0, select bank0
  3338  09DB  1303               	bcf	3,6	;RP1=0, select bank0
  3339  09DC  0827               	movf	?___flmul+3,w
  3340  09DD  00CF               	movwf	_scale$956+3
  3341  09DE  0826               	movf	?___flmul+2,w
  3342  09DF  00CE               	movwf	_scale$956+2
  3343  09E0  0825               	movf	?___flmul+1,w
  3344  09E1  00CD               	movwf	_scale$956+1
  3345  09E2  0824               	movf	?___flmul,w
  3346  09E3  00CC               	movwf	_scale$956
  3347                           
  3348                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  3349  09E4  300A               	movlw	10
  3350  09E5  00F0               	movwf	___awmod@divisor
  3351  09E6  3000               	movlw	0
  3352  09E7  00F1               	movwf	___awmod@divisor+1
  3353  09E8  0850               	movf	scale@scl,w
  3354  09E9  00F2               	movwf	___awmod@dividend
  3355  09EA  01F3               	clrf	___awmod@dividend+1
  3356  09EB  1BF2               	btfsc	___awmod@dividend,7
  3357  09EC  03F3               	decf	___awmod@dividend+1,f
  3358  09ED  160A  158A  26D8  120A  158A  	fcall	___awmod
  3359  09F2  0870               	movf	?___awmod,w
  3360  09F3  1283               	bcf	3,5	;RP0=0, select bank0
  3361  09F4  1303               	bcf	3,6	;RP1=0, select bank0
  3362  09F5  00C2               	movwf	??_scale
  3363  09F6  3001               	movlw	1
  3364  09F7                     u4245:
  3365  09F7  1003               	clrc
  3366  09F8  0DC2               	rlf	??_scale,f
  3367  09F9  3EFF               	addlw	-1
  3368  09FA  1D03               	skipz
  3369  09FB  29F7               	goto	u4245
  3370  09FC  1003               	clrc
  3371  09FD  0D42               	rlf	??_scale,w
  3372  09FE  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3373  09FF  0084               	movwf	4
  3374  0A00  160A  158A  2000  120A  158A  	fcall	stringdir
  3375  0A05  00C3               	movwf	??_scale+1
  3376  0A06  160A  158A  2000  120A  158A  	fcall	stringdir
  3377  0A0B  00C4               	movwf	??_scale+2
  3378  0A0C  160A  158A  2000  120A  158A  	fcall	stringdir
  3379  0A11  00C5               	movwf	??_scale+3
  3380  0A12  160A  158A  2000  120A  158A  	fcall	stringdir
  3381  0A17  00C6               	movwf	??_scale+4
  3382  0A18  0846               	movf	??_scale+4,w
  3383  0A19  00A7               	movwf	___flmul@b+3
  3384  0A1A  0845               	movf	??_scale+3,w
  3385  0A1B  00A6               	movwf	___flmul@b+2
  3386  0A1C  0844               	movf	??_scale+2,w
  3387  0A1D  00A5               	movwf	___flmul@b+1
  3388  0A1E  0843               	movf	??_scale+1,w
  3389  0A1F  00A4               	movwf	___flmul@b
  3390  0A20  084F               	movf	_scale$956+3,w
  3391  0A21  00AB               	movwf	___flmul@a+3
  3392  0A22  084E               	movf	_scale$956+2,w
  3393  0A23  00AA               	movwf	___flmul@a+2
  3394  0A24  084D               	movf	_scale$956+1,w
  3395  0A25  00A9               	movwf	___flmul@a+1
  3396  0A26  084C               	movf	_scale$956,w
  3397  0A27  00A8               	movwf	___flmul@a
  3398  0A28  120A  158A  249F  120A  158A  	fcall	___flmul
  3399  0A2D  1283               	bcf	3,5	;RP0=0, select bank0
  3400  0A2E  1303               	bcf	3,6	;RP1=0, select bank0
  3401  0A2F  0827               	movf	?___flmul+3,w
  3402  0A30  00C1               	movwf	?_scale+3
  3403  0A31  0826               	movf	?___flmul+2,w
  3404  0A32  00C0               	movwf	?_scale+2
  3405  0A33  0825               	movf	?___flmul+1,w
  3406  0A34  00BF               	movwf	?_scale+1
  3407  0A35  0824               	movf	?___flmul,w
  3408  0A36  00BE               	movwf	?_scale
  3409  0A37  2C9E               	goto	l187
  3410  0A38                     l2642:
  3411  0A38  0850               	movf	scale@scl,w
  3412  0A39  3A80               	xorlw	128
  3413  0A3A  3E75               	addlw	-139
  3414  0A3B  1C03               	skipc
  3415  0A3C  2A3E               	goto	u4251
  3416  0A3D  2A3F               	goto	u4250
  3417  0A3E                     u4251:
  3418  0A3E  2AC7               	goto	l2648
  3419  0A3F                     u4250:
  3420  0A3F                     l2644:
  3421                           
  3422                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 441:    return _n
      +                          powers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  3423  0A3F  300A               	movlw	10
  3424  0A40  00F0               	movwf	___awmod@divisor
  3425  0A41  3000               	movlw	0
  3426  0A42  00F1               	movwf	___awmod@divisor+1
  3427  0A43  0850               	movf	scale@scl,w
  3428  0A44  00F2               	movwf	___awmod@dividend
  3429  0A45  01F3               	clrf	___awmod@dividend+1
  3430  0A46  1BF2               	btfsc	___awmod@dividend,7
  3431  0A47  03F3               	decf	___awmod@dividend+1,f
  3432  0A48  160A  158A  26D8  120A  158A  	fcall	___awmod
  3433  0A4D  0870               	movf	?___awmod,w
  3434  0A4E  1283               	bcf	3,5	;RP0=0, select bank0
  3435  0A4F  1303               	bcf	3,6	;RP1=0, select bank0
  3436  0A50  00C2               	movwf	??_scale
  3437  0A51  3001               	movlw	1
  3438  0A52                     u4265:
  3439  0A52  1003               	clrc
  3440  0A53  0DC2               	rlf	??_scale,f
  3441  0A54  3EFF               	addlw	-1
  3442  0A55  1D03               	skipz
  3443  0A56  2A52               	goto	u4265
  3444  0A57  1003               	clrc
  3445  0A58  0D42               	rlf	??_scale,w
  3446  0A59  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3447  0A5A  0084               	movwf	4
  3448  0A5B  160A  158A  2000  120A  158A  	fcall	stringdir
  3449  0A60  00C3               	movwf	??_scale+1
  3450  0A61  160A  158A  2000  120A  158A  	fcall	stringdir
  3451  0A66  00C4               	movwf	??_scale+2
  3452  0A67  160A  158A  2000  120A  158A  	fcall	stringdir
  3453  0A6C  00C5               	movwf	??_scale+3
  3454  0A6D  160A  158A  2000  120A  158A  	fcall	stringdir
  3455  0A72  00C6               	movwf	??_scale+4
  3456  0A73  0846               	movf	??_scale+4,w
  3457  0A74  00A7               	movwf	___flmul@b+3
  3458  0A75  0845               	movf	??_scale+3,w
  3459  0A76  00A6               	movwf	___flmul@b+2
  3460  0A77  0844               	movf	??_scale+2,w
  3461  0A78  00A5               	movwf	___flmul@b+1
  3462  0A79  0843               	movf	??_scale+1,w
  3463  0A7A  00A4               	movwf	___flmul@b
  3464  0A7B  300A               	movlw	10
  3465  0A7C  00F7               	movwf	___awdiv@divisor
  3466  0A7D  3000               	movlw	0
  3467  0A7E  00F8               	movwf	___awdiv@divisor+1
  3468  0A7F  0850               	movf	scale@scl,w
  3469  0A80  00F9               	movwf	___awdiv@dividend
  3470  0A81  01FA               	clrf	___awdiv@dividend+1
  3471  0A82  1BF9               	btfsc	___awdiv@dividend,7
  3472  0A83  03FA               	decf	___awdiv@dividend+1,f
  3473  0A84  160A  158A  2797  120A  158A  	fcall	___awdiv
  3474  0A89  0877               	movf	?___awdiv,w
  3475  0A8A  1283               	bcf	3,5	;RP0=0, select bank0
  3476  0A8B  1303               	bcf	3,6	;RP1=0, select bank0
  3477  0A8C  00C7               	movwf	??_scale+5
  3478  0A8D  3001               	movlw	1
  3479  0A8E                     u4275:
  3480  0A8E  1003               	clrc
  3481  0A8F  0DC7               	rlf	??_scale+5,f
  3482  0A90  3EFF               	addlw	-1
  3483  0A91  1D03               	skipz
  3484  0A92  2A8E               	goto	u4275
  3485  0A93  1003               	clrc
  3486  0A94  0D47               	rlf	??_scale+5,w
  3487  0A95  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3488  0A96  0084               	movwf	4
  3489  0A97  160A  158A  2000  120A  158A  	fcall	stringdir
  3490  0A9C  00C8               	movwf	??_scale+6
  3491  0A9D  160A  158A  2000  120A  158A  	fcall	stringdir
  3492  0AA2  00C9               	movwf	??_scale+7
  3493  0AA3  160A  158A  2000  120A  158A  	fcall	stringdir
  3494  0AA8  00CA               	movwf	??_scale+8
  3495  0AA9  160A  158A  2000  120A  158A  	fcall	stringdir
  3496  0AAE  00CB               	movwf	??_scale+9
  3497  0AAF  084B               	movf	??_scale+9,w
  3498  0AB0  00AB               	movwf	___flmul@a+3
  3499  0AB1  084A               	movf	??_scale+8,w
  3500  0AB2  00AA               	movwf	___flmul@a+2
  3501  0AB3  0849               	movf	??_scale+7,w
  3502  0AB4  00A9               	movwf	___flmul@a+1
  3503  0AB5  0848               	movf	??_scale+6,w
  3504  0AB6  00A8               	movwf	___flmul@a
  3505  0AB7  120A  158A  249F  120A  158A  	fcall	___flmul
  3506  0ABC  1283               	bcf	3,5	;RP0=0, select bank0
  3507  0ABD  1303               	bcf	3,6	;RP1=0, select bank0
  3508  0ABE  0827               	movf	?___flmul+3,w
  3509  0ABF  00C1               	movwf	?_scale+3
  3510  0AC0  0826               	movf	?___flmul+2,w
  3511  0AC1  00C0               	movwf	?_scale+2
  3512  0AC2  0825               	movf	?___flmul+1,w
  3513  0AC3  00BF               	movwf	?_scale+1
  3514  0AC4  0824               	movf	?___flmul,w
  3515  0AC5  00BE               	movwf	?_scale
  3516  0AC6  2C9E               	goto	l187
  3517  0AC7                     l2648:
  3518                           
  3519                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 442:   return _np
      +                          owers_[(unsigned char)scl];
  3520  0AC7  0850               	movf	scale@scl,w
  3521  0AC8  00C2               	movwf	??_scale
  3522  0AC9  3001               	movlw	1
  3523  0ACA                     u4285:
  3524  0ACA  1003               	clrc
  3525  0ACB  0DC2               	rlf	??_scale,f
  3526  0ACC  3EFF               	addlw	-1
  3527  0ACD  1D03               	skipz
  3528  0ACE  2ACA               	goto	u4285
  3529  0ACF  1003               	clrc
  3530  0AD0  0D42               	rlf	??_scale,w
  3531  0AD1  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3532  0AD2  0084               	movwf	4
  3533  0AD3  160A  158A  2000  120A  158A  	fcall	stringdir
  3534  0AD8  00C3               	movwf	??_scale+1
  3535  0AD9  160A  158A  2000  120A  158A  	fcall	stringdir
  3536  0ADE  00C4               	movwf	??_scale+2
  3537  0ADF  160A  158A  2000  120A  158A  	fcall	stringdir
  3538  0AE4  00C5               	movwf	??_scale+3
  3539  0AE5  160A  158A  2000  120A  158A  	fcall	stringdir
  3540  0AEA  00C6               	movwf	??_scale+4
  3541  0AEB  0846               	movf	??_scale+4,w
  3542  0AEC  00C1               	movwf	?_scale+3
  3543  0AED  0845               	movf	??_scale+3,w
  3544  0AEE  00C0               	movwf	?_scale+2
  3545  0AEF  0844               	movf	??_scale+2,w
  3546  0AF0  00BF               	movwf	?_scale+1
  3547  0AF1  0843               	movf	??_scale+1,w
  3548  0AF2  00BE               	movwf	?_scale
  3549  0AF3  2C9E               	goto	l187
  3550  0AF4                     l2652:
  3551                           
  3552                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 444:  if(scl>=110
      +                          )
  3553  0AF4  0850               	movf	scale@scl,w
  3554  0AF5  3A80               	xorlw	128
  3555  0AF6  3E12               	addlw	-238
  3556  0AF7  1C03               	skipc
  3557  0AF8  2AFA               	goto	u4291
  3558  0AF9  2AFB               	goto	u4290
  3559  0AFA                     u4291:
  3560  0AFA  2BE3               	goto	l2660
  3561  0AFB                     u4290:
  3562  0AFB                     l2654:
  3563                           
  3564                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  3565  0AFB  300A               	movlw	10
  3566  0AFC  00F7               	movwf	___awdiv@divisor
  3567  0AFD  3000               	movlw	0
  3568  0AFE  00F8               	movwf	___awdiv@divisor+1
  3569  0AFF  0850               	movf	scale@scl,w
  3570  0B00  00F2               	movwf	___awmod@dividend
  3571  0B01  01F3               	clrf	___awmod@dividend+1
  3572  0B02  1BF2               	btfsc	___awmod@dividend,7
  3573  0B03  03F3               	decf	___awmod@dividend+1,f
  3574  0B04  3064               	movlw	100
  3575  0B05  00F0               	movwf	___awmod@divisor
  3576  0B06  3000               	movlw	0
  3577  0B07  00F1               	movwf	___awmod@divisor+1
  3578  0B08  160A  158A  26D8  120A  158A  	fcall	___awmod
  3579  0B0D  0871               	movf	?___awmod+1,w
  3580  0B0E  00FA               	movwf	___awdiv@dividend+1
  3581  0B0F  0870               	movf	?___awmod,w
  3582  0B10  00F9               	movwf	___awdiv@dividend
  3583  0B11  160A  158A  2797  120A  158A  	fcall	___awdiv
  3584  0B16  0877               	movf	?___awdiv,w
  3585  0B17  1283               	bcf	3,5	;RP0=0, select bank0
  3586  0B18  1303               	bcf	3,6	;RP1=0, select bank0
  3587  0B19  00C2               	movwf	??_scale
  3588  0B1A  3001               	movlw	1
  3589  0B1B                     u4305:
  3590  0B1B  1003               	clrc
  3591  0B1C  0DC2               	rlf	??_scale,f
  3592  0B1D  3EFF               	addlw	-1
  3593  0B1E  1D03               	skipz
  3594  0B1F  2B1B               	goto	u4305
  3595  0B20  1003               	clrc
  3596  0B21  0D42               	rlf	??_scale,w
  3597  0B22  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  3598  0B23  0084               	movwf	4
  3599  0B24  160A  158A  2000  120A  158A  	fcall	stringdir
  3600  0B29  00C3               	movwf	??_scale+1
  3601  0B2A  160A  158A  2000  120A  158A  	fcall	stringdir
  3602  0B2F  00C4               	movwf	??_scale+2
  3603  0B30  160A  158A  2000  120A  158A  	fcall	stringdir
  3604  0B35  00C5               	movwf	??_scale+3
  3605  0B36  160A  158A  2000  120A  158A  	fcall	stringdir
  3606  0B3B  00C6               	movwf	??_scale+4
  3607  0B3C  0846               	movf	??_scale+4,w
  3608  0B3D  00A7               	movwf	___flmul@b+3
  3609  0B3E  0845               	movf	??_scale+3,w
  3610  0B3F  00A6               	movwf	___flmul@b+2
  3611  0B40  0844               	movf	??_scale+2,w
  3612  0B41  00A5               	movwf	___flmul@b+1
  3613  0B42  0843               	movf	??_scale+1,w
  3614  0B43  00A4               	movwf	___flmul@b
  3615  0B44  3064               	movlw	100
  3616  0B45  00F7               	movwf	___awdiv@divisor
  3617  0B46  3000               	movlw	0
  3618  0B47  00F8               	movwf	___awdiv@divisor+1
  3619  0B48  0850               	movf	scale@scl,w
  3620  0B49  00F9               	movwf	___awdiv@dividend
  3621  0B4A  01FA               	clrf	___awdiv@dividend+1
  3622  0B4B  1BF9               	btfsc	___awdiv@dividend,7
  3623  0B4C  03FA               	decf	___awdiv@dividend+1,f
  3624  0B4D  160A  158A  2797  120A  158A  	fcall	___awdiv
  3625  0B52  0877               	movf	?___awdiv,w
  3626  0B53  1283               	bcf	3,5	;RP0=0, select bank0
  3627  0B54  1303               	bcf	3,6	;RP1=0, select bank0
  3628  0B55  00C7               	movwf	??_scale+5
  3629  0B56  3001               	movlw	1
  3630  0B57                     u4315:
  3631  0B57  1003               	clrc
  3632  0B58  0DC7               	rlf	??_scale+5,f
  3633  0B59  3EFF               	addlw	-1
  3634  0B5A  1D03               	skipz
  3635  0B5B  2B57               	goto	u4315
  3636  0B5C  1003               	clrc
  3637  0B5D  0D47               	rlf	??_scale+5,w
  3638  0B5E  3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  3639  0B5F  0084               	movwf	4
  3640  0B60  160A  158A  2000  120A  158A  	fcall	stringdir
  3641  0B65  00C8               	movwf	??_scale+6
  3642  0B66  160A  158A  2000  120A  158A  	fcall	stringdir
  3643  0B6B  00C9               	movwf	??_scale+7
  3644  0B6C  160A  158A  2000  120A  158A  	fcall	stringdir
  3645  0B71  00CA               	movwf	??_scale+8
  3646  0B72  160A  158A  2000  120A  158A  	fcall	stringdir
  3647  0B77  00CB               	movwf	??_scale+9
  3648  0B78  084B               	movf	??_scale+9,w
  3649  0B79  00AB               	movwf	___flmul@a+3
  3650  0B7A  084A               	movf	??_scale+8,w
  3651  0B7B  00AA               	movwf	___flmul@a+2
  3652  0B7C  0849               	movf	??_scale+7,w
  3653  0B7D  00A9               	movwf	___flmul@a+1
  3654  0B7E  0848               	movf	??_scale+6,w
  3655  0B7F  00A8               	movwf	___flmul@a
  3656  0B80  120A  158A  249F  120A  158A  	fcall	___flmul
  3657  0B85  1283               	bcf	3,5	;RP0=0, select bank0
  3658  0B86  1303               	bcf	3,6	;RP1=0, select bank0
  3659  0B87  0827               	movf	?___flmul+3,w
  3660  0B88  00CF               	movwf	_scale$956+3
  3661  0B89  0826               	movf	?___flmul+2,w
  3662  0B8A  00CE               	movwf	_scale$956+2
  3663  0B8B  0825               	movf	?___flmul+1,w
  3664  0B8C  00CD               	movwf	_scale$956+1
  3665  0B8D  0824               	movf	?___flmul,w
  3666  0B8E  00CC               	movwf	_scale$956
  3667                           
  3668                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  3669  0B8F  300A               	movlw	10
  3670  0B90  00F0               	movwf	___awmod@divisor
  3671  0B91  3000               	movlw	0
  3672  0B92  00F1               	movwf	___awmod@divisor+1
  3673  0B93  0850               	movf	scale@scl,w
  3674  0B94  00F2               	movwf	___awmod@dividend
  3675  0B95  01F3               	clrf	___awmod@dividend+1
  3676  0B96  1BF2               	btfsc	___awmod@dividend,7
  3677  0B97  03F3               	decf	___awmod@dividend+1,f
  3678  0B98  160A  158A  26D8  120A  158A  	fcall	___awmod
  3679  0B9D  0870               	movf	?___awmod,w
  3680  0B9E  1283               	bcf	3,5	;RP0=0, select bank0
  3681  0B9F  1303               	bcf	3,6	;RP1=0, select bank0
  3682  0BA0  00C2               	movwf	??_scale
  3683  0BA1  3001               	movlw	1
  3684  0BA2                     u4325:
  3685  0BA2  1003               	clrc
  3686  0BA3  0DC2               	rlf	??_scale,f
  3687  0BA4  3EFF               	addlw	-1
  3688  0BA5  1D03               	skipz
  3689  0BA6  2BA2               	goto	u4325
  3690  0BA7  1003               	clrc
  3691  0BA8  0D42               	rlf	??_scale,w
  3692  0BA9  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3693  0BAA  0084               	movwf	4
  3694  0BAB  160A  158A  2000  120A  158A  	fcall	stringdir
  3695  0BB0  00C3               	movwf	??_scale+1
  3696  0BB1  160A  158A  2000  120A  158A  	fcall	stringdir
  3697  0BB6  00C4               	movwf	??_scale+2
  3698  0BB7  160A  158A  2000  120A  158A  	fcall	stringdir
  3699  0BBC  00C5               	movwf	??_scale+3
  3700  0BBD  160A  158A  2000  120A  158A  	fcall	stringdir
  3701  0BC2  00C6               	movwf	??_scale+4
  3702  0BC3  0846               	movf	??_scale+4,w
  3703  0BC4  00A7               	movwf	___flmul@b+3
  3704  0BC5  0845               	movf	??_scale+3,w
  3705  0BC6  00A6               	movwf	___flmul@b+2
  3706  0BC7  0844               	movf	??_scale+2,w
  3707  0BC8  00A5               	movwf	___flmul@b+1
  3708  0BC9  0843               	movf	??_scale+1,w
  3709  0BCA  00A4               	movwf	___flmul@b
  3710  0BCB  084F               	movf	_scale$956+3,w
  3711  0BCC  00AB               	movwf	___flmul@a+3
  3712  0BCD  084E               	movf	_scale$956+2,w
  3713  0BCE  00AA               	movwf	___flmul@a+2
  3714  0BCF  084D               	movf	_scale$956+1,w
  3715  0BD0  00A9               	movwf	___flmul@a+1
  3716  0BD1  084C               	movf	_scale$956,w
  3717  0BD2  00A8               	movwf	___flmul@a
  3718  0BD3  120A  158A  249F  120A  158A  	fcall	___flmul
  3719  0BD8  1283               	bcf	3,5	;RP0=0, select bank0
  3720  0BD9  1303               	bcf	3,6	;RP1=0, select bank0
  3721  0BDA  0827               	movf	?___flmul+3,w
  3722  0BDB  00C1               	movwf	?_scale+3
  3723  0BDC  0826               	movf	?___flmul+2,w
  3724  0BDD  00C0               	movwf	?_scale+2
  3725  0BDE  0825               	movf	?___flmul+1,w
  3726  0BDF  00BF               	movwf	?_scale+1
  3727  0BE0  0824               	movf	?___flmul,w
  3728  0BE1  00BE               	movwf	?_scale
  3729  0BE2  2C9E               	goto	l187
  3730  0BE3                     l2660:
  3731  0BE3  0850               	movf	scale@scl,w
  3732  0BE4  3A80               	xorlw	128
  3733  0BE5  3E75               	addlw	-139
  3734  0BE6  1C03               	skipc
  3735  0BE7  2BE9               	goto	u4331
  3736  0BE8  2BEA               	goto	u4330
  3737  0BE9                     u4331:
  3738  0BE9  2C72               	goto	l2666
  3739  0BEA                     u4330:
  3740  0BEA                     l2662:
  3741                           
  3742                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 447:   return _po
      +                          wers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  3743  0BEA  300A               	movlw	10
  3744  0BEB  00F0               	movwf	___awmod@divisor
  3745  0BEC  3000               	movlw	0
  3746  0BED  00F1               	movwf	___awmod@divisor+1
  3747  0BEE  0850               	movf	scale@scl,w
  3748  0BEF  00F2               	movwf	___awmod@dividend
  3749  0BF0  01F3               	clrf	___awmod@dividend+1
  3750  0BF1  1BF2               	btfsc	___awmod@dividend,7
  3751  0BF2  03F3               	decf	___awmod@dividend+1,f
  3752  0BF3  160A  158A  26D8  120A  158A  	fcall	___awmod
  3753  0BF8  0870               	movf	?___awmod,w
  3754  0BF9  1283               	bcf	3,5	;RP0=0, select bank0
  3755  0BFA  1303               	bcf	3,6	;RP1=0, select bank0
  3756  0BFB  00C2               	movwf	??_scale
  3757  0BFC  3001               	movlw	1
  3758  0BFD                     u4345:
  3759  0BFD  1003               	clrc
  3760  0BFE  0DC2               	rlf	??_scale,f
  3761  0BFF  3EFF               	addlw	-1
  3762  0C00  1D03               	skipz
  3763  0C01  2BFD               	goto	u4345
  3764  0C02  1003               	clrc
  3765  0C03  0D42               	rlf	??_scale,w
  3766  0C04  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3767  0C05  0084               	movwf	4
  3768  0C06  160A  158A  2000  120A  158A  	fcall	stringdir
  3769  0C0B  00C3               	movwf	??_scale+1
  3770  0C0C  160A  158A  2000  120A  158A  	fcall	stringdir
  3771  0C11  00C4               	movwf	??_scale+2
  3772  0C12  160A  158A  2000  120A  158A  	fcall	stringdir
  3773  0C17  00C5               	movwf	??_scale+3
  3774  0C18  160A  158A  2000  120A  158A  	fcall	stringdir
  3775  0C1D  00C6               	movwf	??_scale+4
  3776  0C1E  0846               	movf	??_scale+4,w
  3777  0C1F  00A7               	movwf	___flmul@b+3
  3778  0C20  0845               	movf	??_scale+3,w
  3779  0C21  00A6               	movwf	___flmul@b+2
  3780  0C22  0844               	movf	??_scale+2,w
  3781  0C23  00A5               	movwf	___flmul@b+1
  3782  0C24  0843               	movf	??_scale+1,w
  3783  0C25  00A4               	movwf	___flmul@b
  3784  0C26  300A               	movlw	10
  3785  0C27  00F7               	movwf	___awdiv@divisor
  3786  0C28  3000               	movlw	0
  3787  0C29  00F8               	movwf	___awdiv@divisor+1
  3788  0C2A  0850               	movf	scale@scl,w
  3789  0C2B  00F9               	movwf	___awdiv@dividend
  3790  0C2C  01FA               	clrf	___awdiv@dividend+1
  3791  0C2D  1BF9               	btfsc	___awdiv@dividend,7
  3792  0C2E  03FA               	decf	___awdiv@dividend+1,f
  3793  0C2F  160A  158A  2797  120A  158A  	fcall	___awdiv
  3794  0C34  0877               	movf	?___awdiv,w
  3795  0C35  1283               	bcf	3,5	;RP0=0, select bank0
  3796  0C36  1303               	bcf	3,6	;RP1=0, select bank0
  3797  0C37  00C7               	movwf	??_scale+5
  3798  0C38  3001               	movlw	1
  3799  0C39                     u4355:
  3800  0C39  1003               	clrc
  3801  0C3A  0DC7               	rlf	??_scale+5,f
  3802  0C3B  3EFF               	addlw	-1
  3803  0C3C  1D03               	skipz
  3804  0C3D  2C39               	goto	u4355
  3805  0C3E  1003               	clrc
  3806  0C3F  0D47               	rlf	??_scale+5,w
  3807  0C40  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  3808  0C41  0084               	movwf	4
  3809  0C42  160A  158A  2000  120A  158A  	fcall	stringdir
  3810  0C47  00C8               	movwf	??_scale+6
  3811  0C48  160A  158A  2000  120A  158A  	fcall	stringdir
  3812  0C4D  00C9               	movwf	??_scale+7
  3813  0C4E  160A  158A  2000  120A  158A  	fcall	stringdir
  3814  0C53  00CA               	movwf	??_scale+8
  3815  0C54  160A  158A  2000  120A  158A  	fcall	stringdir
  3816  0C59  00CB               	movwf	??_scale+9
  3817  0C5A  084B               	movf	??_scale+9,w
  3818  0C5B  00AB               	movwf	___flmul@a+3
  3819  0C5C  084A               	movf	??_scale+8,w
  3820  0C5D  00AA               	movwf	___flmul@a+2
  3821  0C5E  0849               	movf	??_scale+7,w
  3822  0C5F  00A9               	movwf	___flmul@a+1
  3823  0C60  0848               	movf	??_scale+6,w
  3824  0C61  00A8               	movwf	___flmul@a
  3825  0C62  120A  158A  249F  120A  158A  	fcall	___flmul
  3826  0C67  1283               	bcf	3,5	;RP0=0, select bank0
  3827  0C68  1303               	bcf	3,6	;RP1=0, select bank0
  3828  0C69  0827               	movf	?___flmul+3,w
  3829  0C6A  00C1               	movwf	?_scale+3
  3830  0C6B  0826               	movf	?___flmul+2,w
  3831  0C6C  00C0               	movwf	?_scale+2
  3832  0C6D  0825               	movf	?___flmul+1,w
  3833  0C6E  00BF               	movwf	?_scale+1
  3834  0C6F  0824               	movf	?___flmul,w
  3835  0C70  00BE               	movwf	?_scale
  3836  0C71  2C9E               	goto	l187
  3837  0C72                     l2666:
  3838                           
  3839                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 448:  return _pow
      +                          ers_[(unsigned char)scl];
  3840  0C72  0850               	movf	scale@scl,w
  3841  0C73  00C2               	movwf	??_scale
  3842  0C74  3001               	movlw	1
  3843  0C75                     u4365:
  3844  0C75  1003               	clrc
  3845  0C76  0DC2               	rlf	??_scale,f
  3846  0C77  3EFF               	addlw	-1
  3847  0C78  1D03               	skipz
  3848  0C79  2C75               	goto	u4365
  3849  0C7A  1003               	clrc
  3850  0C7B  0D42               	rlf	??_scale,w
  3851  0C7C  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3852  0C7D  0084               	movwf	4
  3853  0C7E  160A  158A  2000  120A  158A  	fcall	stringdir
  3854  0C83  00C3               	movwf	??_scale+1
  3855  0C84  160A  158A  2000  120A  158A  	fcall	stringdir
  3856  0C89  00C4               	movwf	??_scale+2
  3857  0C8A  160A  158A  2000  120A  158A  	fcall	stringdir
  3858  0C8F  00C5               	movwf	??_scale+3
  3859  0C90  160A  158A  2000  120A  158A  	fcall	stringdir
  3860  0C95  00C6               	movwf	??_scale+4
  3861  0C96  0846               	movf	??_scale+4,w
  3862  0C97  00C1               	movwf	?_scale+3
  3863  0C98  0845               	movf	??_scale+3,w
  3864  0C99  00C0               	movwf	?_scale+2
  3865  0C9A  0844               	movf	??_scale+2,w
  3866  0C9B  00BF               	movwf	?_scale+1
  3867  0C9C  0843               	movf	??_scale+1,w
  3868  0C9D  00BE               	movwf	?_scale
  3869  0C9E                     l187:
  3870  0C9E  0008               	return
  3871  0C9F                     __end_of_scale:
  3872                           
  3873                           	psect	text3
  3874  1ED8                     __ptext3:	
  3875 ;; *************** function ___awmod *****************
  3876 ;; Defined at:
  3877 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\awmod.c"
  3878 ;; Parameters:    Size  Location     Type
  3879 ;;  divisor         2    0[COMMON] int 
  3880 ;;  dividend        2    2[COMMON] int 
  3881 ;; Auto vars:     Size  Location     Type
  3882 ;;  sign            1    6[COMMON] unsigned char 
  3883 ;;  counter         1    5[COMMON] unsigned char 
  3884 ;; Return value:  Size  Location     Type
  3885 ;;                  2    0[COMMON] int 
  3886 ;; Registers used:
  3887 ;;		wreg, status,2, status,0
  3888 ;; Tracked objects:
  3889 ;;		On entry : 0/0
  3890 ;;		On exit  : 0/0
  3891 ;;		Unchanged: 0/0
  3892 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3893 ;;      Params:         4       0       0       0       0
  3894 ;;      Locals:         2       0       0       0       0
  3895 ;;      Temps:          1       0       0       0       0
  3896 ;;      Totals:         7       0       0       0       0
  3897 ;;Total ram usage:        7 bytes
  3898 ;; Hardware stack levels used: 1
  3899 ;; This function calls:
  3900 ;;		Nothing
  3901 ;; This function is called by:
  3902 ;;		_scale
  3903 ;; This function uses a non-reentrant model
  3904 ;;
  3905                           
  3906  1ED8                     ___awmod:	
  3907                           ;psect for function ___awmod
  3908                           
  3909  1ED8                     l2188:	
  3910                           ;incstack = 0
  3911                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3912                           
  3913  1ED8  01F6               	clrf	___awmod@sign
  3914  1ED9                     l2190:
  3915  1ED9  1FF3               	btfss	___awmod@dividend+1,7
  3916  1EDA  2EDC               	goto	u3061
  3917  1EDB  2EDD               	goto	u3060
  3918  1EDC                     u3061:
  3919  1EDC  2EE4               	goto	l2196
  3920  1EDD                     u3060:
  3921  1EDD                     l2192:
  3922  1EDD  09F2               	comf	___awmod@dividend,f
  3923  1EDE  09F3               	comf	___awmod@dividend+1,f
  3924  1EDF  0AF2               	incf	___awmod@dividend,f
  3925  1EE0  1903               	skipnz
  3926  1EE1  0AF3               	incf	___awmod@dividend+1,f
  3927  1EE2                     l2194:
  3928  1EE2  01F6               	clrf	___awmod@sign
  3929  1EE3  0AF6               	incf	___awmod@sign,f
  3930  1EE4                     l2196:
  3931  1EE4  1FF1               	btfss	___awmod@divisor+1,7
  3932  1EE5  2EE7               	goto	u3071
  3933  1EE6  2EE8               	goto	u3070
  3934  1EE7                     u3071:
  3935  1EE7  2EED               	goto	l2200
  3936  1EE8                     u3070:
  3937  1EE8                     l2198:
  3938  1EE8  09F0               	comf	___awmod@divisor,f
  3939  1EE9  09F1               	comf	___awmod@divisor+1,f
  3940  1EEA  0AF0               	incf	___awmod@divisor,f
  3941  1EEB  1903               	skipnz
  3942  1EEC  0AF1               	incf	___awmod@divisor+1,f
  3943  1EED                     l2200:
  3944  1EED  0870               	movf	___awmod@divisor,w
  3945  1EEE  0471               	iorwf	___awmod@divisor+1,w
  3946  1EEF  1903               	btfsc	3,2
  3947  1EF0  2EF2               	goto	u3081
  3948  1EF1  2EF3               	goto	u3080
  3949  1EF2                     u3081:
  3950  1EF2  2F22               	goto	l2218
  3951  1EF3                     u3080:
  3952  1EF3                     l2202:
  3953  1EF3  01F5               	clrf	___awmod@counter
  3954  1EF4  0AF5               	incf	___awmod@counter,f
  3955  1EF5  2F01               	goto	l2208
  3956  1EF6                     l2204:
  3957  1EF6  3001               	movlw	1
  3958  1EF7                     u3095:
  3959  1EF7  1003               	clrc
  3960  1EF8  0DF0               	rlf	___awmod@divisor,f
  3961  1EF9  0DF1               	rlf	___awmod@divisor+1,f
  3962  1EFA  3EFF               	addlw	-1
  3963  1EFB  1D03               	skipz
  3964  1EFC  2EF7               	goto	u3095
  3965  1EFD                     l2206:
  3966  1EFD  3001               	movlw	1
  3967  1EFE  00F4               	movwf	??___awmod
  3968  1EFF  0874               	movf	??___awmod,w
  3969  1F00  07F5               	addwf	___awmod@counter,f
  3970  1F01                     l2208:
  3971  1F01  1FF1               	btfss	___awmod@divisor+1,7
  3972  1F02  2F04               	goto	u3101
  3973  1F03  2F05               	goto	u3100
  3974  1F04                     u3101:
  3975  1F04  2EF6               	goto	l2204
  3976  1F05                     u3100:
  3977  1F05                     l2210:
  3978  1F05  0871               	movf	___awmod@divisor+1,w
  3979  1F06  0273               	subwf	___awmod@dividend+1,w
  3980  1F07  1D03               	skipz
  3981  1F08  2F0B               	goto	u3115
  3982  1F09  0870               	movf	___awmod@divisor,w
  3983  1F0A  0272               	subwf	___awmod@dividend,w
  3984  1F0B                     u3115:
  3985  1F0B  1C03               	skipc
  3986  1F0C  2F0E               	goto	u3111
  3987  1F0D  2F0F               	goto	u3110
  3988  1F0E                     u3111:
  3989  1F0E  2F15               	goto	l2214
  3990  1F0F                     u3110:
  3991  1F0F                     l2212:
  3992  1F0F  0870               	movf	___awmod@divisor,w
  3993  1F10  02F2               	subwf	___awmod@dividend,f
  3994  1F11  0871               	movf	___awmod@divisor+1,w
  3995  1F12  1C03               	skipc
  3996  1F13  03F3               	decf	___awmod@dividend+1,f
  3997  1F14  02F3               	subwf	___awmod@dividend+1,f
  3998  1F15                     l2214:
  3999  1F15  3001               	movlw	1
  4000  1F16                     u3125:
  4001  1F16  1003               	clrc
  4002  1F17  0CF1               	rrf	___awmod@divisor+1,f
  4003  1F18  0CF0               	rrf	___awmod@divisor,f
  4004  1F19  3EFF               	addlw	-1
  4005  1F1A  1D03               	skipz
  4006  1F1B  2F16               	goto	u3125
  4007  1F1C                     l2216:
  4008  1F1C  3001               	movlw	1
  4009  1F1D  02F5               	subwf	___awmod@counter,f
  4010  1F1E  1D03               	btfss	3,2
  4011  1F1F  2F21               	goto	u3131
  4012  1F20  2F22               	goto	u3130
  4013  1F21                     u3131:
  4014  1F21  2F05               	goto	l2210
  4015  1F22                     u3130:
  4016  1F22                     l2218:
  4017  1F22  0876               	movf	___awmod@sign,w
  4018  1F23  1903               	btfsc	3,2
  4019  1F24  2F26               	goto	u3141
  4020  1F25  2F27               	goto	u3140
  4021  1F26                     u3141:
  4022  1F26  2F2C               	goto	l2222
  4023  1F27                     u3140:
  4024  1F27                     l2220:
  4025  1F27  09F2               	comf	___awmod@dividend,f
  4026  1F28  09F3               	comf	___awmod@dividend+1,f
  4027  1F29  0AF2               	incf	___awmod@dividend,f
  4028  1F2A  1903               	skipnz
  4029  1F2B  0AF3               	incf	___awmod@dividend+1,f
  4030  1F2C                     l2222:
  4031  1F2C  0873               	movf	___awmod@dividend+1,w
  4032  1F2D  00F1               	movwf	?___awmod+1
  4033  1F2E  0872               	movf	___awmod@dividend,w
  4034  1F2F  00F0               	movwf	?___awmod
  4035  1F30                     l423:
  4036  1F30  0008               	return
  4037  1F31                     __end_of___awmod:
  4038                           
  4039                           	psect	text4
  4040  1F97                     __ptext4:	
  4041 ;; *************** function ___awdiv *****************
  4042 ;; Defined at:
  4043 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\awdiv.c"
  4044 ;; Parameters:    Size  Location     Type
  4045 ;;  divisor         2    7[COMMON] int 
  4046 ;;  dividend        2    9[COMMON] int 
  4047 ;; Auto vars:     Size  Location     Type
  4048 ;;  quotient        2    2[BANK0 ] int 
  4049 ;;  sign            1    1[BANK0 ] unsigned char 
  4050 ;;  counter         1    0[BANK0 ] unsigned char 
  4051 ;; Return value:  Size  Location     Type
  4052 ;;                  2    7[COMMON] int 
  4053 ;; Registers used:
  4054 ;;		wreg, status,2, status,0
  4055 ;; Tracked objects:
  4056 ;;		On entry : 0/0
  4057 ;;		On exit  : 0/0
  4058 ;;		Unchanged: 0/0
  4059 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4060 ;;      Params:         4       0       0       0       0
  4061 ;;      Locals:         0       4       0       0       0
  4062 ;;      Temps:          1       0       0       0       0
  4063 ;;      Totals:         5       4       0       0       0
  4064 ;;Total ram usage:        9 bytes
  4065 ;; Hardware stack levels used: 1
  4066 ;; This function calls:
  4067 ;;		Nothing
  4068 ;; This function is called by:
  4069 ;;		_scale
  4070 ;;		_sprintf
  4071 ;; This function uses a non-reentrant model
  4072 ;;
  4073                           
  4074  1F97                     ___awdiv:	
  4075                           ;psect for function ___awdiv
  4076                           
  4077  1F97                     l2144:	
  4078                           ;incstack = 0
  4079                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4080                           
  4081  1F97  1283               	bcf	3,5	;RP0=0, select bank0
  4082  1F98  1303               	bcf	3,6	;RP1=0, select bank0
  4083  1F99  01A1               	clrf	___awdiv@sign
  4084  1F9A                     l2146:
  4085  1F9A  1FF8               	btfss	___awdiv@divisor+1,7
  4086  1F9B  2F9D               	goto	u2961
  4087  1F9C  2F9E               	goto	u2960
  4088  1F9D                     u2961:
  4089  1F9D  2FA5               	goto	l2152
  4090  1F9E                     u2960:
  4091  1F9E                     l2148:
  4092  1F9E  09F7               	comf	___awdiv@divisor,f
  4093  1F9F  09F8               	comf	___awdiv@divisor+1,f
  4094  1FA0  0AF7               	incf	___awdiv@divisor,f
  4095  1FA1  1903               	skipnz
  4096  1FA2  0AF8               	incf	___awdiv@divisor+1,f
  4097  1FA3                     l2150:
  4098  1FA3  01A1               	clrf	___awdiv@sign
  4099  1FA4  0AA1               	incf	___awdiv@sign,f
  4100  1FA5                     l2152:
  4101  1FA5  1FFA               	btfss	___awdiv@dividend+1,7
  4102  1FA6  2FA8               	goto	u2971
  4103  1FA7  2FA9               	goto	u2970
  4104  1FA8                     u2971:
  4105  1FA8  2FB2               	goto	l2158
  4106  1FA9                     u2970:
  4107  1FA9                     l2154:
  4108  1FA9  09F9               	comf	___awdiv@dividend,f
  4109  1FAA  09FA               	comf	___awdiv@dividend+1,f
  4110  1FAB  0AF9               	incf	___awdiv@dividend,f
  4111  1FAC  1903               	skipnz
  4112  1FAD  0AFA               	incf	___awdiv@dividend+1,f
  4113  1FAE                     l2156:
  4114  1FAE  3001               	movlw	1
  4115  1FAF  00FB               	movwf	??___awdiv
  4116  1FB0  087B               	movf	??___awdiv,w
  4117  1FB1  06A1               	xorwf	___awdiv@sign,f
  4118  1FB2                     l2158:
  4119  1FB2  01A2               	clrf	___awdiv@quotient
  4120  1FB3  01A3               	clrf	___awdiv@quotient+1
  4121  1FB4                     l2160:
  4122  1FB4  0877               	movf	___awdiv@divisor,w
  4123  1FB5  0478               	iorwf	___awdiv@divisor+1,w
  4124  1FB6  1903               	btfsc	3,2
  4125  1FB7  2FB9               	goto	u2981
  4126  1FB8  2FBA               	goto	u2980
  4127  1FB9                     u2981:
  4128  1FB9  2FF1               	goto	l2180
  4129  1FBA                     u2980:
  4130  1FBA                     l2162:
  4131  1FBA  01A0               	clrf	___awdiv@counter
  4132  1FBB  0AA0               	incf	___awdiv@counter,f
  4133  1FBC  2FC8               	goto	l2168
  4134  1FBD                     l2164:
  4135  1FBD  3001               	movlw	1
  4136  1FBE                     u2995:
  4137  1FBE  1003               	clrc
  4138  1FBF  0DF7               	rlf	___awdiv@divisor,f
  4139  1FC0  0DF8               	rlf	___awdiv@divisor+1,f
  4140  1FC1  3EFF               	addlw	-1
  4141  1FC2  1D03               	skipz
  4142  1FC3  2FBE               	goto	u2995
  4143  1FC4                     l2166:
  4144  1FC4  3001               	movlw	1
  4145  1FC5  00FB               	movwf	??___awdiv
  4146  1FC6  087B               	movf	??___awdiv,w
  4147  1FC7  07A0               	addwf	___awdiv@counter,f
  4148  1FC8                     l2168:
  4149  1FC8  1FF8               	btfss	___awdiv@divisor+1,7
  4150  1FC9  2FCB               	goto	u3001
  4151  1FCA  2FCC               	goto	u3000
  4152  1FCB                     u3001:
  4153  1FCB  2FBD               	goto	l2164
  4154  1FCC                     u3000:
  4155  1FCC                     l2170:
  4156  1FCC  3001               	movlw	1
  4157  1FCD                     u3015:
  4158  1FCD  1003               	clrc
  4159  1FCE  0DA2               	rlf	___awdiv@quotient,f
  4160  1FCF  0DA3               	rlf	___awdiv@quotient+1,f
  4161  1FD0  3EFF               	addlw	-1
  4162  1FD1  1D03               	skipz
  4163  1FD2  2FCD               	goto	u3015
  4164  1FD3  0878               	movf	___awdiv@divisor+1,w
  4165  1FD4  027A               	subwf	___awdiv@dividend+1,w
  4166  1FD5  1D03               	skipz
  4167  1FD6  2FD9               	goto	u3025
  4168  1FD7  0877               	movf	___awdiv@divisor,w
  4169  1FD8  0279               	subwf	___awdiv@dividend,w
  4170  1FD9                     u3025:
  4171  1FD9  1C03               	skipc
  4172  1FDA  2FDC               	goto	u3021
  4173  1FDB  2FDD               	goto	u3020
  4174  1FDC                     u3021:
  4175  1FDC  2FE4               	goto	l2176
  4176  1FDD                     u3020:
  4177  1FDD                     l2172:
  4178  1FDD  0877               	movf	___awdiv@divisor,w
  4179  1FDE  02F9               	subwf	___awdiv@dividend,f
  4180  1FDF  0878               	movf	___awdiv@divisor+1,w
  4181  1FE0  1C03               	skipc
  4182  1FE1  03FA               	decf	___awdiv@dividend+1,f
  4183  1FE2  02FA               	subwf	___awdiv@dividend+1,f
  4184  1FE3                     l2174:
  4185  1FE3  1422               	bsf	___awdiv@quotient,0
  4186  1FE4                     l2176:
  4187  1FE4  3001               	movlw	1
  4188  1FE5                     u3035:
  4189  1FE5  1003               	clrc
  4190  1FE6  0CF8               	rrf	___awdiv@divisor+1,f
  4191  1FE7  0CF7               	rrf	___awdiv@divisor,f
  4192  1FE8  3EFF               	addlw	-1
  4193  1FE9  1D03               	skipz
  4194  1FEA  2FE5               	goto	u3035
  4195  1FEB                     l2178:
  4196  1FEB  3001               	movlw	1
  4197  1FEC  02A0               	subwf	___awdiv@counter,f
  4198  1FED  1D03               	btfss	3,2
  4199  1FEE  2FF0               	goto	u3041
  4200  1FEF  2FF1               	goto	u3040
  4201  1FF0                     u3041:
  4202  1FF0  2FCC               	goto	l2170
  4203  1FF1                     u3040:
  4204  1FF1                     l2180:
  4205  1FF1  0821               	movf	___awdiv@sign,w
  4206  1FF2  1903               	btfsc	3,2
  4207  1FF3  2FF5               	goto	u3051
  4208  1FF4  2FF6               	goto	u3050
  4209  1FF5                     u3051:
  4210  1FF5  2FFB               	goto	l2184
  4211  1FF6                     u3050:
  4212  1FF6                     l2182:
  4213  1FF6  09A2               	comf	___awdiv@quotient,f
  4214  1FF7  09A3               	comf	___awdiv@quotient+1,f
  4215  1FF8  0AA2               	incf	___awdiv@quotient,f
  4216  1FF9  1903               	skipnz
  4217  1FFA  0AA3               	incf	___awdiv@quotient+1,f
  4218  1FFB                     l2184:
  4219  1FFB  0823               	movf	___awdiv@quotient+1,w
  4220  1FFC  00F8               	movwf	?___awdiv+1
  4221  1FFD  0822               	movf	___awdiv@quotient,w
  4222  1FFE  00F7               	movwf	?___awdiv
  4223  1FFF                     l410:
  4224  1FFF  0008               	return
  4225  2000                     __end_of___awdiv:
  4226                           
  4227                           	psect	text5
  4228  1CEA                     __ptext5:	
  4229 ;; *************** function _isdigit *****************
  4230 ;; Defined at:
  4231 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\isdigit.c"
  4232 ;; Parameters:    Size  Location     Type
  4233 ;;  c               1    wreg     unsigned char 
  4234 ;; Auto vars:     Size  Location     Type
  4235 ;;  c               1    1[COMMON] unsigned char 
  4236 ;; Return value:  Size  Location     Type
  4237 ;;		None               void
  4238 ;; Registers used:
  4239 ;;		wreg, status,2, status,0
  4240 ;; Tracked objects:
  4241 ;;		On entry : 0/0
  4242 ;;		On exit  : 0/0
  4243 ;;		Unchanged: 0/0
  4244 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4245 ;;      Params:         0       0       0       0       0
  4246 ;;      Locals:         2       0       0       0       0
  4247 ;;      Temps:          0       0       0       0       0
  4248 ;;      Totals:         2       0       0       0       0
  4249 ;;Total ram usage:        2 bytes
  4250 ;; Hardware stack levels used: 1
  4251 ;; This function calls:
  4252 ;;		Nothing
  4253 ;; This function is called by:
  4254 ;;		_sprintf
  4255 ;; This function uses a non-reentrant model
  4256 ;;
  4257                           
  4258  1CEA                     _isdigit:	
  4259                           ;psect for function _isdigit
  4260                           
  4261                           
  4262                           ;incstack = 0
  4263                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  4264                           ;isdigit@c stored from wreg
  4265  1CEA  00F1               	movwf	isdigit@c
  4266  1CEB                     l2670:
  4267  1CEB  01F0               	clrf	_isdigit$786
  4268  1CEC                     l2672:
  4269  1CEC  303A               	movlw	58
  4270  1CED  0271               	subwf	isdigit@c,w
  4271  1CEE  1803               	skipnc
  4272  1CEF  2CF1               	goto	u4371
  4273  1CF0  2CF2               	goto	u4370
  4274  1CF1                     u4371:
  4275  1CF1  2CFA               	goto	l2678
  4276  1CF2                     u4370:
  4277  1CF2                     l2674:
  4278  1CF2  3030               	movlw	48
  4279  1CF3  0271               	subwf	isdigit@c,w
  4280  1CF4  1C03               	skipc
  4281  1CF5  2CF7               	goto	u4381
  4282  1CF6  2CF8               	goto	u4380
  4283  1CF7                     u4381:
  4284  1CF7  2CFA               	goto	l2678
  4285  1CF8                     u4380:
  4286  1CF8                     l2676:
  4287  1CF8  01F0               	clrf	_isdigit$786
  4288  1CF9  0AF0               	incf	_isdigit$786,f
  4289  1CFA                     l2678:
  4290  1CFA  0C70               	rrf	_isdigit$786,w
  4291  1CFB                     l744:
  4292  1CFB  0008               	return
  4293  1CFC                     __end_of_isdigit:
  4294                           
  4295                           	psect	text6
  4296  136D                     __ptext6:	
  4297 ;; *************** function _fround *****************
  4298 ;; Defined at:
  4299 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c"
  4300 ;; Parameters:    Size  Location     Type
  4301 ;;  prec            1    wreg     unsigned char 
  4302 ;; Auto vars:     Size  Location     Type
  4303 ;;  prec            1   49[BANK0 ] unsigned char 
  4304 ;; Return value:  Size  Location     Type
  4305 ;;                  4   30[BANK0 ] unsigned char 
  4306 ;; Registers used:
  4307 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4308 ;; Tracked objects:
  4309 ;;		On entry : 0/0
  4310 ;;		On exit  : 0/0
  4311 ;;		Unchanged: 0/0
  4312 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4313 ;;      Params:         0       4       0       0       0
  4314 ;;      Locals:         0       9       0       0       0
  4315 ;;      Temps:          0       7       0       0       0
  4316 ;;      Totals:         0      20       0       0       0
  4317 ;;Total ram usage:       20 bytes
  4318 ;; Hardware stack levels used: 1
  4319 ;; Hardware stack levels required when called: 2
  4320 ;; This function calls:
  4321 ;;		___flmul
  4322 ;;		___lwdiv
  4323 ;;		___lwmod
  4324 ;; This function is called by:
  4325 ;;		_sprintf
  4326 ;; This function uses a non-reentrant model
  4327 ;;
  4328                           
  4329  136D                     _fround:	
  4330                           ;psect for function _fround
  4331                           
  4332                           
  4333                           ;incstack = 0
  4334                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4335                           ;fround@prec stored from wreg
  4336  136D  1283               	bcf	3,5	;RP0=0, select bank0
  4337  136E  1303               	bcf	3,6	;RP1=0, select bank0
  4338  136F  00D1               	movwf	fround@prec
  4339  1370                     l2612:
  4340                           
  4341                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 417: fround(unsig
      +                          ned char prec);C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 418
      +                          : {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 421:  if(prec>
      +                          =110)
  4342  1370  306E               	movlw	110
  4343  1371  0251               	subwf	fround@prec,w
  4344  1372  1C03               	skipc
  4345  1373  2B75               	goto	u4121
  4346  1374  2B76               	goto	u4120
  4347  1375                     u4121:
  4348  1375  2C83               	goto	l2620
  4349  1376                     u4120:
  4350  1376                     l2614:
  4351                           
  4352                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4353  1376  303F               	movlw	63
  4354  1377  00A7               	movwf	___flmul@b+3
  4355  1378  3000               	movlw	0
  4356  1379  00A6               	movwf	___flmul@b+2
  4357  137A  3000               	movlw	0
  4358  137B  00A5               	movwf	___flmul@b+1
  4359  137C  3000               	movlw	0
  4360  137D  00A4               	movwf	___flmul@b
  4361  137E  3064               	movlw	100
  4362  137F  00F6               	movwf	___lwdiv@divisor
  4363  1380  3000               	movlw	0
  4364  1381  00F7               	movwf	___lwdiv@divisor+1
  4365  1382  0851               	movf	fround@prec,w
  4366  1383  00C2               	movwf	??_fround
  4367  1384  01C3               	clrf	??_fround+1
  4368  1385  0842               	movf	??_fround,w
  4369  1386  00F8               	movwf	___lwdiv@dividend
  4370  1387  0843               	movf	??_fround+1,w
  4371  1388  00F9               	movwf	___lwdiv@dividend+1
  4372  1389  160A  158A  25F2  160A  118A  	fcall	___lwdiv
  4373  138E  0876               	movf	?___lwdiv,w
  4374  138F  1283               	bcf	3,5	;RP0=0, select bank0
  4375  1390  1303               	bcf	3,6	;RP1=0, select bank0
  4376  1391  00C4               	movwf	??_fround+2
  4377  1392  3001               	movlw	1
  4378  1393                     u4135:
  4379  1393  1003               	clrc
  4380  1394  0DC4               	rlf	??_fround+2,f
  4381  1395  3EFF               	addlw	-1
  4382  1396  1D03               	skipz
  4383  1397  2B93               	goto	u4135
  4384  1398  1003               	clrc
  4385  1399  0D44               	rlf	??_fround+2,w
  4386  139A  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  4387  139B  0084               	movwf	4
  4388  139C  160A  158A  2000  160A  118A  	fcall	stringdir
  4389  13A1  00C5               	movwf	??_fround+3
  4390  13A2  160A  158A  2000  160A  118A  	fcall	stringdir
  4391  13A7  00C6               	movwf	??_fround+4
  4392  13A8  160A  158A  2000  160A  118A  	fcall	stringdir
  4393  13AD  00C7               	movwf	??_fround+5
  4394  13AE  160A  158A  2000  160A  118A  	fcall	stringdir
  4395  13B3  00C8               	movwf	??_fround+6
  4396  13B4  0848               	movf	??_fround+6,w
  4397  13B5  00AB               	movwf	___flmul@a+3
  4398  13B6  0847               	movf	??_fround+5,w
  4399  13B7  00AA               	movwf	___flmul@a+2
  4400  13B8  0846               	movf	??_fround+4,w
  4401  13B9  00A9               	movwf	___flmul@a+1
  4402  13BA  0845               	movf	??_fround+3,w
  4403  13BB  00A8               	movwf	___flmul@a
  4404  13BC  120A  158A  249F  160A  118A  	fcall	___flmul
  4405  13C1  1283               	bcf	3,5	;RP0=0, select bank0
  4406  13C2  1303               	bcf	3,6	;RP1=0, select bank0
  4407  13C3  0827               	movf	?___flmul+3,w
  4408  13C4  00D0               	movwf	_fround$954+3
  4409  13C5  0826               	movf	?___flmul+2,w
  4410  13C6  00CF               	movwf	_fround$954+2
  4411  13C7  0825               	movf	?___flmul+1,w
  4412  13C8  00CE               	movwf	_fround$954+1
  4413  13C9  0824               	movf	?___flmul,w
  4414  13CA  00CD               	movwf	_fround$954
  4415                           
  4416                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4417  13CB  300A               	movlw	10
  4418  13CC  00F6               	movwf	___lwdiv@divisor
  4419  13CD  3000               	movlw	0
  4420  13CE  00F7               	movwf	___lwdiv@divisor+1
  4421  13CF  0851               	movf	fround@prec,w
  4422  13D0  00C2               	movwf	??_fround
  4423  13D1  01C3               	clrf	??_fround+1
  4424  13D2  0842               	movf	??_fround,w
  4425  13D3  00F2               	movwf	___lwmod@dividend
  4426  13D4  0843               	movf	??_fround+1,w
  4427  13D5  00F3               	movwf	___lwmod@dividend+1
  4428  13D6  3064               	movlw	100
  4429  13D7  00F0               	movwf	___lwmod@divisor
  4430  13D8  3000               	movlw	0
  4431  13D9  00F1               	movwf	___lwmod@divisor+1
  4432  13DA  160A  158A  25B8  160A  118A  	fcall	___lwmod
  4433  13DF  0871               	movf	?___lwmod+1,w
  4434  13E0  00F9               	movwf	___lwdiv@dividend+1
  4435  13E1  0870               	movf	?___lwmod,w
  4436  13E2  00F8               	movwf	___lwdiv@dividend
  4437  13E3  160A  158A  25F2  160A  118A  	fcall	___lwdiv
  4438  13E8  0876               	movf	?___lwdiv,w
  4439  13E9  1283               	bcf	3,5	;RP0=0, select bank0
  4440  13EA  1303               	bcf	3,6	;RP1=0, select bank0
  4441  13EB  00C4               	movwf	??_fround+2
  4442  13EC  3001               	movlw	1
  4443  13ED                     u4145:
  4444  13ED  1003               	clrc
  4445  13EE  0DC4               	rlf	??_fround+2,f
  4446  13EF  3EFF               	addlw	-1
  4447  13F0  1D03               	skipz
  4448  13F1  2BED               	goto	u4145
  4449  13F2  1003               	clrc
  4450  13F3  0D44               	rlf	??_fround+2,w
  4451  13F4  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4452  13F5  0084               	movwf	4
  4453  13F6  160A  158A  2000  160A  118A  	fcall	stringdir
  4454  13FB  00C5               	movwf	??_fround+3
  4455  13FC  160A  158A  2000  160A  118A  	fcall	stringdir
  4456  1401  00C6               	movwf	??_fround+4
  4457  1402  160A  158A  2000  160A  118A  	fcall	stringdir
  4458  1407  00C7               	movwf	??_fround+5
  4459  1408  160A  158A  2000  160A  118A  	fcall	stringdir
  4460  140D  00C8               	movwf	??_fround+6
  4461  140E  0848               	movf	??_fround+6,w
  4462  140F  00A7               	movwf	___flmul@b+3
  4463  1410  0847               	movf	??_fround+5,w
  4464  1411  00A6               	movwf	___flmul@b+2
  4465  1412  0846               	movf	??_fround+4,w
  4466  1413  00A5               	movwf	___flmul@b+1
  4467  1414  0845               	movf	??_fround+3,w
  4468  1415  00A4               	movwf	___flmul@b
  4469  1416  0850               	movf	_fround$954+3,w
  4470  1417  00AB               	movwf	___flmul@a+3
  4471  1418  084F               	movf	_fround$954+2,w
  4472  1419  00AA               	movwf	___flmul@a+2
  4473  141A  084E               	movf	_fround$954+1,w
  4474  141B  00A9               	movwf	___flmul@a+1
  4475  141C  084D               	movf	_fround$954,w
  4476  141D  00A8               	movwf	___flmul@a
  4477  141E  120A  158A  249F  160A  118A  	fcall	___flmul
  4478  1423  1283               	bcf	3,5	;RP0=0, select bank0
  4479  1424  1303               	bcf	3,6	;RP1=0, select bank0
  4480  1425  0827               	movf	?___flmul+3,w
  4481  1426  00CC               	movwf	_fround$955+3
  4482  1427  0826               	movf	?___flmul+2,w
  4483  1428  00CB               	movwf	_fround$955+2
  4484  1429  0825               	movf	?___flmul+1,w
  4485  142A  00CA               	movwf	_fround$955+1
  4486  142B  0824               	movf	?___flmul,w
  4487  142C  00C9               	movwf	_fround$955
  4488                           
  4489                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4490  142D  300A               	movlw	10
  4491  142E  00F0               	movwf	___lwmod@divisor
  4492  142F  3000               	movlw	0
  4493  1430  00F1               	movwf	___lwmod@divisor+1
  4494  1431  0851               	movf	fround@prec,w
  4495  1432  00C2               	movwf	??_fround
  4496  1433  01C3               	clrf	??_fround+1
  4497  1434  0842               	movf	??_fround,w
  4498  1435  00F2               	movwf	___lwmod@dividend
  4499  1436  0843               	movf	??_fround+1,w
  4500  1437  00F3               	movwf	___lwmod@dividend+1
  4501  1438  160A  158A  25B8  160A  118A  	fcall	___lwmod
  4502  143D  0870               	movf	?___lwmod,w
  4503  143E  1283               	bcf	3,5	;RP0=0, select bank0
  4504  143F  1303               	bcf	3,6	;RP1=0, select bank0
  4505  1440  00C4               	movwf	??_fround+2
  4506  1441  3001               	movlw	1
  4507  1442                     u4155:
  4508  1442  1003               	clrc
  4509  1443  0DC4               	rlf	??_fround+2,f
  4510  1444  3EFF               	addlw	-1
  4511  1445  1D03               	skipz
  4512  1446  2C42               	goto	u4155
  4513  1447  1003               	clrc
  4514  1448  0D44               	rlf	??_fround+2,w
  4515  1449  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4516  144A  0084               	movwf	4
  4517  144B  160A  158A  2000  160A  118A  	fcall	stringdir
  4518  1450  00C5               	movwf	??_fround+3
  4519  1451  160A  158A  2000  160A  118A  	fcall	stringdir
  4520  1456  00C6               	movwf	??_fround+4
  4521  1457  160A  158A  2000  160A  118A  	fcall	stringdir
  4522  145C  00C7               	movwf	??_fround+5
  4523  145D  160A  158A  2000  160A  118A  	fcall	stringdir
  4524  1462  00C8               	movwf	??_fround+6
  4525  1463  0848               	movf	??_fround+6,w
  4526  1464  00A7               	movwf	___flmul@b+3
  4527  1465  0847               	movf	??_fround+5,w
  4528  1466  00A6               	movwf	___flmul@b+2
  4529  1467  0846               	movf	??_fround+4,w
  4530  1468  00A5               	movwf	___flmul@b+1
  4531  1469  0845               	movf	??_fround+3,w
  4532  146A  00A4               	movwf	___flmul@b
  4533  146B  084C               	movf	_fround$955+3,w
  4534  146C  00AB               	movwf	___flmul@a+3
  4535  146D  084B               	movf	_fround$955+2,w
  4536  146E  00AA               	movwf	___flmul@a+2
  4537  146F  084A               	movf	_fround$955+1,w
  4538  1470  00A9               	movwf	___flmul@a+1
  4539  1471  0849               	movf	_fround$955,w
  4540  1472  00A8               	movwf	___flmul@a
  4541  1473  120A  158A  249F  160A  118A  	fcall	___flmul
  4542  1478  1283               	bcf	3,5	;RP0=0, select bank0
  4543  1479  1303               	bcf	3,6	;RP1=0, select bank0
  4544  147A  0827               	movf	?___flmul+3,w
  4545  147B  00C1               	movwf	?_fround+3
  4546  147C  0826               	movf	?___flmul+2,w
  4547  147D  00C0               	movwf	?_fround+2
  4548  147E  0825               	movf	?___flmul+1,w
  4549  147F  00BF               	movwf	?_fround+1
  4550  1480  0824               	movf	?___flmul,w
  4551  1481  00BE               	movwf	?_fround
  4552  1482  2D77               	goto	l180
  4553  1483                     l2620:
  4554  1483  300B               	movlw	11
  4555  1484  0251               	subwf	fround@prec,w
  4556  1485  1C03               	skipc
  4557  1486  2C88               	goto	u4161
  4558  1487  2C89               	goto	u4160
  4559  1488                     u4161:
  4560  1488  2D34               	goto	l2626
  4561  1489                     u4160:
  4562  1489                     l2622:
  4563                           
  4564                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  4565  1489  303F               	movlw	63
  4566  148A  00A7               	movwf	___flmul@b+3
  4567  148B  3000               	movlw	0
  4568  148C  00A6               	movwf	___flmul@b+2
  4569  148D  3000               	movlw	0
  4570  148E  00A5               	movwf	___flmul@b+1
  4571  148F  3000               	movlw	0
  4572  1490  00A4               	movwf	___flmul@b
  4573  1491  300A               	movlw	10
  4574  1492  00F6               	movwf	___lwdiv@divisor
  4575  1493  3000               	movlw	0
  4576  1494  00F7               	movwf	___lwdiv@divisor+1
  4577  1495  0851               	movf	fround@prec,w
  4578  1496  00C2               	movwf	??_fround
  4579  1497  01C3               	clrf	??_fround+1
  4580  1498  0842               	movf	??_fround,w
  4581  1499  00F8               	movwf	___lwdiv@dividend
  4582  149A  0843               	movf	??_fround+1,w
  4583  149B  00F9               	movwf	___lwdiv@dividend+1
  4584  149C  160A  158A  25F2  160A  118A  	fcall	___lwdiv
  4585  14A1  0876               	movf	?___lwdiv,w
  4586  14A2  1283               	bcf	3,5	;RP0=0, select bank0
  4587  14A3  1303               	bcf	3,6	;RP1=0, select bank0
  4588  14A4  00C4               	movwf	??_fround+2
  4589  14A5  3001               	movlw	1
  4590  14A6                     u4175:
  4591  14A6  1003               	clrc
  4592  14A7  0DC4               	rlf	??_fround+2,f
  4593  14A8  3EFF               	addlw	-1
  4594  14A9  1D03               	skipz
  4595  14AA  2CA6               	goto	u4175
  4596  14AB  1003               	clrc
  4597  14AC  0D44               	rlf	??_fround+2,w
  4598  14AD  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4599  14AE  0084               	movwf	4
  4600  14AF  160A  158A  2000  160A  118A  	fcall	stringdir
  4601  14B4  00C5               	movwf	??_fround+3
  4602  14B5  160A  158A  2000  160A  118A  	fcall	stringdir
  4603  14BA  00C6               	movwf	??_fround+4
  4604  14BB  160A  158A  2000  160A  118A  	fcall	stringdir
  4605  14C0  00C7               	movwf	??_fround+5
  4606  14C1  160A  158A  2000  160A  118A  	fcall	stringdir
  4607  14C6  00C8               	movwf	??_fround+6
  4608  14C7  0848               	movf	??_fround+6,w
  4609  14C8  00AB               	movwf	___flmul@a+3
  4610  14C9  0847               	movf	??_fround+5,w
  4611  14CA  00AA               	movwf	___flmul@a+2
  4612  14CB  0846               	movf	??_fround+4,w
  4613  14CC  00A9               	movwf	___flmul@a+1
  4614  14CD  0845               	movf	??_fround+3,w
  4615  14CE  00A8               	movwf	___flmul@a
  4616  14CF  120A  158A  249F  160A  118A  	fcall	___flmul
  4617  14D4  1283               	bcf	3,5	;RP0=0, select bank0
  4618  14D5  1303               	bcf	3,6	;RP1=0, select bank0
  4619  14D6  0827               	movf	?___flmul+3,w
  4620  14D7  00D0               	movwf	_fround$954+3
  4621  14D8  0826               	movf	?___flmul+2,w
  4622  14D9  00CF               	movwf	_fround$954+2
  4623  14DA  0825               	movf	?___flmul+1,w
  4624  14DB  00CE               	movwf	_fround$954+1
  4625  14DC  0824               	movf	?___flmul,w
  4626  14DD  00CD               	movwf	_fround$954
  4627                           
  4628                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  4629  14DE  300A               	movlw	10
  4630  14DF  00F0               	movwf	___lwmod@divisor
  4631  14E0  3000               	movlw	0
  4632  14E1  00F1               	movwf	___lwmod@divisor+1
  4633  14E2  0851               	movf	fround@prec,w
  4634  14E3  00C2               	movwf	??_fround
  4635  14E4  01C3               	clrf	??_fround+1
  4636  14E5  0842               	movf	??_fround,w
  4637  14E6  00F2               	movwf	___lwmod@dividend
  4638  14E7  0843               	movf	??_fround+1,w
  4639  14E8  00F3               	movwf	___lwmod@dividend+1
  4640  14E9  160A  158A  25B8  160A  118A  	fcall	___lwmod
  4641  14EE  0870               	movf	?___lwmod,w
  4642  14EF  1283               	bcf	3,5	;RP0=0, select bank0
  4643  14F0  1303               	bcf	3,6	;RP1=0, select bank0
  4644  14F1  00C4               	movwf	??_fround+2
  4645  14F2  3001               	movlw	1
  4646  14F3                     u4185:
  4647  14F3  1003               	clrc
  4648  14F4  0DC4               	rlf	??_fround+2,f
  4649  14F5  3EFF               	addlw	-1
  4650  14F6  1D03               	skipz
  4651  14F7  2CF3               	goto	u4185
  4652  14F8  1003               	clrc
  4653  14F9  0D44               	rlf	??_fround+2,w
  4654  14FA  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4655  14FB  0084               	movwf	4
  4656  14FC  160A  158A  2000  160A  118A  	fcall	stringdir
  4657  1501  00C5               	movwf	??_fround+3
  4658  1502  160A  158A  2000  160A  118A  	fcall	stringdir
  4659  1507  00C6               	movwf	??_fround+4
  4660  1508  160A  158A  2000  160A  118A  	fcall	stringdir
  4661  150D  00C7               	movwf	??_fround+5
  4662  150E  160A  158A  2000  160A  118A  	fcall	stringdir
  4663  1513  00C8               	movwf	??_fround+6
  4664  1514  0848               	movf	??_fround+6,w
  4665  1515  00A7               	movwf	___flmul@b+3
  4666  1516  0847               	movf	??_fround+5,w
  4667  1517  00A6               	movwf	___flmul@b+2
  4668  1518  0846               	movf	??_fround+4,w
  4669  1519  00A5               	movwf	___flmul@b+1
  4670  151A  0845               	movf	??_fround+3,w
  4671  151B  00A4               	movwf	___flmul@b
  4672  151C  0850               	movf	_fround$954+3,w
  4673  151D  00AB               	movwf	___flmul@a+3
  4674  151E  084F               	movf	_fround$954+2,w
  4675  151F  00AA               	movwf	___flmul@a+2
  4676  1520  084E               	movf	_fround$954+1,w
  4677  1521  00A9               	movwf	___flmul@a+1
  4678  1522  084D               	movf	_fround$954,w
  4679  1523  00A8               	movwf	___flmul@a
  4680  1524  120A  158A  249F  160A  118A  	fcall	___flmul
  4681  1529  1283               	bcf	3,5	;RP0=0, select bank0
  4682  152A  1303               	bcf	3,6	;RP1=0, select bank0
  4683  152B  0827               	movf	?___flmul+3,w
  4684  152C  00C1               	movwf	?_fround+3
  4685  152D  0826               	movf	?___flmul+2,w
  4686  152E  00C0               	movwf	?_fround+2
  4687  152F  0825               	movf	?___flmul+1,w
  4688  1530  00BF               	movwf	?_fround+1
  4689  1531  0824               	movf	?___flmul,w
  4690  1532  00BE               	movwf	?_fround
  4691  1533  2D77               	goto	l180
  4692  1534                     l2626:
  4693                           
  4694                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 425:  return 0.5 
      +                          * _npowers_[prec];
  4695  1534  303F               	movlw	63
  4696  1535  00A7               	movwf	___flmul@b+3
  4697  1536  3000               	movlw	0
  4698  1537  00A6               	movwf	___flmul@b+2
  4699  1538  3000               	movlw	0
  4700  1539  00A5               	movwf	___flmul@b+1
  4701  153A  3000               	movlw	0
  4702  153B  00A4               	movwf	___flmul@b
  4703  153C  0851               	movf	fround@prec,w
  4704  153D  00C2               	movwf	??_fround
  4705  153E  3001               	movlw	1
  4706  153F                     u4195:
  4707  153F  1003               	clrc
  4708  1540  0DC2               	rlf	??_fround,f
  4709  1541  3EFF               	addlw	-1
  4710  1542  1D03               	skipz
  4711  1543  2D3F               	goto	u4195
  4712  1544  1003               	clrc
  4713  1545  0D42               	rlf	??_fround,w
  4714  1546  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4715  1547  0084               	movwf	4
  4716  1548  160A  158A  2000  160A  118A  	fcall	stringdir
  4717  154D  00C3               	movwf	??_fround+1
  4718  154E  160A  158A  2000  160A  118A  	fcall	stringdir
  4719  1553  00C4               	movwf	??_fround+2
  4720  1554  160A  158A  2000  160A  118A  	fcall	stringdir
  4721  1559  00C5               	movwf	??_fround+3
  4722  155A  160A  158A  2000  160A  118A  	fcall	stringdir
  4723  155F  00C6               	movwf	??_fround+4
  4724  1560  0846               	movf	??_fround+4,w
  4725  1561  00AB               	movwf	___flmul@a+3
  4726  1562  0845               	movf	??_fround+3,w
  4727  1563  00AA               	movwf	___flmul@a+2
  4728  1564  0844               	movf	??_fround+2,w
  4729  1565  00A9               	movwf	___flmul@a+1
  4730  1566  0843               	movf	??_fround+1,w
  4731  1567  00A8               	movwf	___flmul@a
  4732  1568  120A  158A  249F  160A  118A  	fcall	___flmul
  4733  156D  1283               	bcf	3,5	;RP0=0, select bank0
  4734  156E  1303               	bcf	3,6	;RP1=0, select bank0
  4735  156F  0827               	movf	?___flmul+3,w
  4736  1570  00C1               	movwf	?_fround+3
  4737  1571  0826               	movf	?___flmul+2,w
  4738  1572  00C0               	movwf	?_fround+2
  4739  1573  0825               	movf	?___flmul+1,w
  4740  1574  00BF               	movwf	?_fround+1
  4741  1575  0824               	movf	?___flmul,w
  4742  1576  00BE               	movwf	?_fround
  4743  1577                     l180:
  4744  1577  0008               	return
  4745  1578                     __end_of_fround:
  4746                           
  4747                           	psect	text7
  4748  1DB8                     __ptext7:	
  4749 ;; *************** function ___lwmod *****************
  4750 ;; Defined at:
  4751 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\lwmod.c"
  4752 ;; Parameters:    Size  Location     Type
  4753 ;;  divisor         2    0[COMMON] unsigned int 
  4754 ;;  dividend        2    2[COMMON] unsigned int 
  4755 ;; Auto vars:     Size  Location     Type
  4756 ;;  counter         1    5[COMMON] unsigned char 
  4757 ;; Return value:  Size  Location     Type
  4758 ;;                  2    0[COMMON] unsigned int 
  4759 ;; Registers used:
  4760 ;;		wreg, status,2, status,0
  4761 ;; Tracked objects:
  4762 ;;		On entry : 0/0
  4763 ;;		On exit  : 0/0
  4764 ;;		Unchanged: 0/0
  4765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4766 ;;      Params:         4       0       0       0       0
  4767 ;;      Locals:         1       0       0       0       0
  4768 ;;      Temps:          1       0       0       0       0
  4769 ;;      Totals:         6       0       0       0       0
  4770 ;;Total ram usage:        6 bytes
  4771 ;; Hardware stack levels used: 1
  4772 ;; This function calls:
  4773 ;;		Nothing
  4774 ;; This function is called by:
  4775 ;;		_fround
  4776 ;; This function uses a non-reentrant model
  4777 ;;
  4778                           
  4779  1DB8                     ___lwmod:	
  4780                           ;psect for function ___lwmod
  4781                           
  4782  1DB8                     l2252:	
  4783                           ;incstack = 0
  4784                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4785                           
  4786  1DB8  0870               	movf	___lwmod@divisor,w
  4787  1DB9  0471               	iorwf	___lwmod@divisor+1,w
  4788  1DBA  1903               	btfsc	3,2
  4789  1DBB  2DBD               	goto	u3221
  4790  1DBC  2DBE               	goto	u3220
  4791  1DBD                     u3221:
  4792  1DBD  2DED               	goto	l2270
  4793  1DBE                     u3220:
  4794  1DBE                     l2254:
  4795  1DBE  01F5               	clrf	___lwmod@counter
  4796  1DBF  0AF5               	incf	___lwmod@counter,f
  4797  1DC0  2DCC               	goto	l2260
  4798  1DC1                     l2256:
  4799  1DC1  3001               	movlw	1
  4800  1DC2                     u3235:
  4801  1DC2  1003               	clrc
  4802  1DC3  0DF0               	rlf	___lwmod@divisor,f
  4803  1DC4  0DF1               	rlf	___lwmod@divisor+1,f
  4804  1DC5  3EFF               	addlw	-1
  4805  1DC6  1D03               	skipz
  4806  1DC7  2DC2               	goto	u3235
  4807  1DC8                     l2258:
  4808  1DC8  3001               	movlw	1
  4809  1DC9  00F4               	movwf	??___lwmod
  4810  1DCA  0874               	movf	??___lwmod,w
  4811  1DCB  07F5               	addwf	___lwmod@counter,f
  4812  1DCC                     l2260:
  4813  1DCC  1FF1               	btfss	___lwmod@divisor+1,7
  4814  1DCD  2DCF               	goto	u3241
  4815  1DCE  2DD0               	goto	u3240
  4816  1DCF                     u3241:
  4817  1DCF  2DC1               	goto	l2256
  4818  1DD0                     u3240:
  4819  1DD0                     l2262:
  4820  1DD0  0871               	movf	___lwmod@divisor+1,w
  4821  1DD1  0273               	subwf	___lwmod@dividend+1,w
  4822  1DD2  1D03               	skipz
  4823  1DD3  2DD6               	goto	u3255
  4824  1DD4  0870               	movf	___lwmod@divisor,w
  4825  1DD5  0272               	subwf	___lwmod@dividend,w
  4826  1DD6                     u3255:
  4827  1DD6  1C03               	skipc
  4828  1DD7  2DD9               	goto	u3251
  4829  1DD8  2DDA               	goto	u3250
  4830  1DD9                     u3251:
  4831  1DD9  2DE0               	goto	l2266
  4832  1DDA                     u3250:
  4833  1DDA                     l2264:
  4834  1DDA  0870               	movf	___lwmod@divisor,w
  4835  1DDB  02F2               	subwf	___lwmod@dividend,f
  4836  1DDC  0871               	movf	___lwmod@divisor+1,w
  4837  1DDD  1C03               	skipc
  4838  1DDE  03F3               	decf	___lwmod@dividend+1,f
  4839  1DDF  02F3               	subwf	___lwmod@dividend+1,f
  4840  1DE0                     l2266:
  4841  1DE0  3001               	movlw	1
  4842  1DE1                     u3265:
  4843  1DE1  1003               	clrc
  4844  1DE2  0CF1               	rrf	___lwmod@divisor+1,f
  4845  1DE3  0CF0               	rrf	___lwmod@divisor,f
  4846  1DE4  3EFF               	addlw	-1
  4847  1DE5  1D03               	skipz
  4848  1DE6  2DE1               	goto	u3265
  4849  1DE7                     l2268:
  4850  1DE7  3001               	movlw	1
  4851  1DE8  02F5               	subwf	___lwmod@counter,f
  4852  1DE9  1D03               	btfss	3,2
  4853  1DEA  2DEC               	goto	u3271
  4854  1DEB  2DED               	goto	u3270
  4855  1DEC                     u3271:
  4856  1DEC  2DD0               	goto	l2262
  4857  1DED                     u3270:
  4858  1DED                     l2270:
  4859  1DED  0873               	movf	___lwmod@dividend+1,w
  4860  1DEE  00F1               	movwf	?___lwmod+1
  4861  1DEF  0872               	movf	___lwmod@dividend,w
  4862  1DF0  00F0               	movwf	?___lwmod
  4863  1DF1                     l573:
  4864  1DF1  0008               	return
  4865  1DF2                     __end_of___lwmod:
  4866                           
  4867                           	psect	text8
  4868  1DF2                     __ptext8:	
  4869 ;; *************** function ___lwdiv *****************
  4870 ;; Defined at:
  4871 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\lwdiv.c"
  4872 ;; Parameters:    Size  Location     Type
  4873 ;;  divisor         2    6[COMMON] unsigned int 
  4874 ;;  dividend        2    8[COMMON] unsigned int 
  4875 ;; Auto vars:     Size  Location     Type
  4876 ;;  quotient        2   11[COMMON] unsigned int 
  4877 ;;  counter         1   13[COMMON] unsigned char 
  4878 ;; Return value:  Size  Location     Type
  4879 ;;                  2    6[COMMON] unsigned int 
  4880 ;; Registers used:
  4881 ;;		wreg, status,2, status,0
  4882 ;; Tracked objects:
  4883 ;;		On entry : 0/0
  4884 ;;		On exit  : 0/0
  4885 ;;		Unchanged: 0/0
  4886 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4887 ;;      Params:         4       0       0       0       0
  4888 ;;      Locals:         3       0       0       0       0
  4889 ;;      Temps:          1       0       0       0       0
  4890 ;;      Totals:         8       0       0       0       0
  4891 ;;Total ram usage:        8 bytes
  4892 ;; Hardware stack levels used: 1
  4893 ;; This function calls:
  4894 ;;		Nothing
  4895 ;; This function is called by:
  4896 ;;		_fround
  4897 ;; This function uses a non-reentrant model
  4898 ;;
  4899                           
  4900  1DF2                     ___lwdiv:	
  4901                           ;psect for function ___lwdiv
  4902                           
  4903  1DF2                     l2226:	
  4904                           ;incstack = 0
  4905                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4906                           
  4907  1DF2  01FB               	clrf	___lwdiv@quotient
  4908  1DF3  01FC               	clrf	___lwdiv@quotient+1
  4909  1DF4                     l2228:
  4910  1DF4  0876               	movf	___lwdiv@divisor,w
  4911  1DF5  0477               	iorwf	___lwdiv@divisor+1,w
  4912  1DF6  1903               	btfsc	3,2
  4913  1DF7  2DF9               	goto	u3151
  4914  1DF8  2DFA               	goto	u3150
  4915  1DF9                     u3151:
  4916  1DF9  2E31               	goto	l2248
  4917  1DFA                     u3150:
  4918  1DFA                     l2230:
  4919  1DFA  01FD               	clrf	___lwdiv@counter
  4920  1DFB  0AFD               	incf	___lwdiv@counter,f
  4921  1DFC  2E08               	goto	l2236
  4922  1DFD                     l2232:
  4923  1DFD  3001               	movlw	1
  4924  1DFE                     u3165:
  4925  1DFE  1003               	clrc
  4926  1DFF  0DF6               	rlf	___lwdiv@divisor,f
  4927  1E00  0DF7               	rlf	___lwdiv@divisor+1,f
  4928  1E01  3EFF               	addlw	-1
  4929  1E02  1D03               	skipz
  4930  1E03  2DFE               	goto	u3165
  4931  1E04                     l2234:
  4932  1E04  3001               	movlw	1
  4933  1E05  00FA               	movwf	??___lwdiv
  4934  1E06  087A               	movf	??___lwdiv,w
  4935  1E07  07FD               	addwf	___lwdiv@counter,f
  4936  1E08                     l2236:
  4937  1E08  1FF7               	btfss	___lwdiv@divisor+1,7
  4938  1E09  2E0B               	goto	u3171
  4939  1E0A  2E0C               	goto	u3170
  4940  1E0B                     u3171:
  4941  1E0B  2DFD               	goto	l2232
  4942  1E0C                     u3170:
  4943  1E0C                     l2238:
  4944  1E0C  3001               	movlw	1
  4945  1E0D                     u3185:
  4946  1E0D  1003               	clrc
  4947  1E0E  0DFB               	rlf	___lwdiv@quotient,f
  4948  1E0F  0DFC               	rlf	___lwdiv@quotient+1,f
  4949  1E10  3EFF               	addlw	-1
  4950  1E11  1D03               	skipz
  4951  1E12  2E0D               	goto	u3185
  4952  1E13  0877               	movf	___lwdiv@divisor+1,w
  4953  1E14  0279               	subwf	___lwdiv@dividend+1,w
  4954  1E15  1D03               	skipz
  4955  1E16  2E19               	goto	u3195
  4956  1E17  0876               	movf	___lwdiv@divisor,w
  4957  1E18  0278               	subwf	___lwdiv@dividend,w
  4958  1E19                     u3195:
  4959  1E19  1C03               	skipc
  4960  1E1A  2E1C               	goto	u3191
  4961  1E1B  2E1D               	goto	u3190
  4962  1E1C                     u3191:
  4963  1E1C  2E24               	goto	l2244
  4964  1E1D                     u3190:
  4965  1E1D                     l2240:
  4966  1E1D  0876               	movf	___lwdiv@divisor,w
  4967  1E1E  02F8               	subwf	___lwdiv@dividend,f
  4968  1E1F  0877               	movf	___lwdiv@divisor+1,w
  4969  1E20  1C03               	skipc
  4970  1E21  03F9               	decf	___lwdiv@dividend+1,f
  4971  1E22  02F9               	subwf	___lwdiv@dividend+1,f
  4972  1E23                     l2242:
  4973  1E23  147B               	bsf	___lwdiv@quotient,0
  4974  1E24                     l2244:
  4975  1E24  3001               	movlw	1
  4976  1E25                     u3205:
  4977  1E25  1003               	clrc
  4978  1E26  0CF7               	rrf	___lwdiv@divisor+1,f
  4979  1E27  0CF6               	rrf	___lwdiv@divisor,f
  4980  1E28  3EFF               	addlw	-1
  4981  1E29  1D03               	skipz
  4982  1E2A  2E25               	goto	u3205
  4983  1E2B                     l2246:
  4984  1E2B  3001               	movlw	1
  4985  1E2C  02FD               	subwf	___lwdiv@counter,f
  4986  1E2D  1D03               	btfss	3,2
  4987  1E2E  2E30               	goto	u3211
  4988  1E2F  2E31               	goto	u3210
  4989  1E30                     u3211:
  4990  1E30  2E0C               	goto	l2238
  4991  1E31                     u3210:
  4992  1E31                     l2248:
  4993  1E31  087C               	movf	___lwdiv@quotient+1,w
  4994  1E32  00F7               	movwf	?___lwdiv+1
  4995  1E33  087B               	movf	___lwdiv@quotient,w
  4996  1E34  00F6               	movwf	?___lwdiv
  4997  1E35                     l563:
  4998  1E35  0008               	return
  4999  1E36                     __end_of___lwdiv:
  5000                           
  5001                           	psect	text9
  5002  0C9F                     __ptext9:	
  5003 ;; *************** function ___flmul *****************
  5004 ;; Defined at:
  5005 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\sprcmul.c"
  5006 ;; Parameters:    Size  Location     Type
  5007 ;;  b               4    4[BANK0 ] unsigned int 
  5008 ;;  a               4    8[BANK0 ] unsigned int 
  5009 ;; Auto vars:     Size  Location     Type
  5010 ;;  prod            4   24[BANK0 ] struct .
  5011 ;;  grs             4   18[BANK0 ] unsigned long 
  5012 ;;  temp            2   28[BANK0 ] struct .
  5013 ;;  bexp            1   23[BANK0 ] unsigned char 
  5014 ;;  aexp            1   22[BANK0 ] unsigned char 
  5015 ;;  sign            1   17[BANK0 ] unsigned char 
  5016 ;; Return value:  Size  Location     Type
  5017 ;;                  4    4[BANK0 ] unsigned char 
  5018 ;; Registers used:
  5019 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5020 ;; Tracked objects:
  5021 ;;		On entry : 0/0
  5022 ;;		On exit  : 0/0
  5023 ;;		Unchanged: 0/0
  5024 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5025 ;;      Params:         0       8       0       0       0
  5026 ;;      Locals:         0      13       0       0       0
  5027 ;;      Temps:          0       5       0       0       0
  5028 ;;      Totals:         0      26       0       0       0
  5029 ;;Total ram usage:       26 bytes
  5030 ;; Hardware stack levels used: 1
  5031 ;; Hardware stack levels required when called: 1
  5032 ;; This function calls:
  5033 ;;		__Umul8_16
  5034 ;; This function is called by:
  5035 ;;		_main
  5036 ;;		_fround
  5037 ;;		_scale
  5038 ;;		_sprintf
  5039 ;; This function uses a non-reentrant model
  5040 ;;
  5041                           
  5042  0C9F                     ___flmul:	
  5043                           ;psect for function ___flmul
  5044                           
  5045  0C9F                     l2468:	
  5046                           ;incstack = 0
  5047                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5048                           
  5049  0C9F  1283               	bcf	3,5	;RP0=0, select bank0
  5050  0CA0  1303               	bcf	3,6	;RP1=0, select bank0
  5051  0CA1  0827               	movf	___flmul@b+3,w
  5052  0CA2  3980               	andlw	128
  5053  0CA3  00AC               	movwf	??___flmul
  5054  0CA4  082C               	movf	??___flmul,w
  5055  0CA5  00B1               	movwf	___flmul@sign
  5056  0CA6                     l2470:
  5057  0CA6  0827               	movf	___flmul@b+3,w
  5058  0CA7  00AC               	movwf	??___flmul
  5059  0CA8  072C               	addwf	??___flmul,w
  5060  0CA9  00AD               	movwf	??___flmul+1
  5061  0CAA  082D               	movf	??___flmul+1,w
  5062  0CAB  00B7               	movwf	___flmul@bexp
  5063  0CAC                     l2472:
  5064  0CAC  1FA6               	btfss	___flmul@b+2,7
  5065  0CAD  2CAF               	goto	u3741
  5066  0CAE  2CB0               	goto	u3740
  5067  0CAF                     u3741:
  5068  0CAF  2CB1               	goto	l2476
  5069  0CB0                     u3740:
  5070  0CB0                     l2474:
  5071  0CB0  1437               	bsf	___flmul@bexp,0
  5072  0CB1                     l2476:
  5073  0CB1  0837               	movf	___flmul@bexp,w
  5074  0CB2  1903               	btfsc	3,2
  5075  0CB3  2CB5               	goto	u3751
  5076  0CB4  2CB6               	goto	u3750
  5077  0CB5                     u3751:
  5078  0CB5  2CC5               	goto	l2484
  5079  0CB6                     u3750:
  5080  0CB6                     l2478:
  5081  0CB6  0A37               	incf	___flmul@bexp,w
  5082  0CB7  1D03               	btfss	3,2
  5083  0CB8  2CBA               	goto	u3761
  5084  0CB9  2CBB               	goto	u3760
  5085  0CBA                     u3761:
  5086  0CBA  2CC3               	goto	l2482
  5087  0CBB                     u3760:
  5088  0CBB                     l2480:
  5089  0CBB  3000               	movlw	0
  5090  0CBC  00A7               	movwf	___flmul@b+3
  5091  0CBD  3000               	movlw	0
  5092  0CBE  00A6               	movwf	___flmul@b+2
  5093  0CBF  3000               	movlw	0
  5094  0CC0  00A5               	movwf	___flmul@b+1
  5095  0CC1  3000               	movlw	0
  5096  0CC2  00A4               	movwf	___flmul@b
  5097  0CC3                     l2482:
  5098  0CC3  17A6               	bsf	___flmul@b+2,7
  5099  0CC4  2CCD               	goto	l2486
  5100  0CC5                     l2484:
  5101  0CC5  3000               	movlw	0
  5102  0CC6  00A7               	movwf	___flmul@b+3
  5103  0CC7  3000               	movlw	0
  5104  0CC8  00A6               	movwf	___flmul@b+2
  5105  0CC9  3000               	movlw	0
  5106  0CCA  00A5               	movwf	___flmul@b+1
  5107  0CCB  3000               	movlw	0
  5108  0CCC  00A4               	movwf	___flmul@b
  5109  0CCD                     l2486:
  5110  0CCD  082B               	movf	___flmul@a+3,w
  5111  0CCE  3980               	andlw	128
  5112  0CCF  00AC               	movwf	??___flmul
  5113  0CD0  082C               	movf	??___flmul,w
  5114  0CD1  06B1               	xorwf	___flmul@sign,f
  5115  0CD2                     l2488:
  5116  0CD2  082B               	movf	___flmul@a+3,w
  5117  0CD3  00AC               	movwf	??___flmul
  5118  0CD4  072C               	addwf	??___flmul,w
  5119  0CD5  00AD               	movwf	??___flmul+1
  5120  0CD6  082D               	movf	??___flmul+1,w
  5121  0CD7  00B6               	movwf	___flmul@aexp
  5122  0CD8                     l2490:
  5123  0CD8  1FAA               	btfss	___flmul@a+2,7
  5124  0CD9  2CDB               	goto	u3771
  5125  0CDA  2CDC               	goto	u3770
  5126  0CDB                     u3771:
  5127  0CDB  2CDD               	goto	l2494
  5128  0CDC                     u3770:
  5129  0CDC                     l2492:
  5130  0CDC  1436               	bsf	___flmul@aexp,0
  5131  0CDD                     l2494:
  5132  0CDD  0836               	movf	___flmul@aexp,w
  5133  0CDE  1903               	btfsc	3,2
  5134  0CDF  2CE1               	goto	u3781
  5135  0CE0  2CE2               	goto	u3780
  5136  0CE1                     u3781:
  5137  0CE1  2CF1               	goto	l2502
  5138  0CE2                     u3780:
  5139  0CE2                     l2496:
  5140  0CE2  0A36               	incf	___flmul@aexp,w
  5141  0CE3  1D03               	btfss	3,2
  5142  0CE4  2CE6               	goto	u3791
  5143  0CE5  2CE7               	goto	u3790
  5144  0CE6                     u3791:
  5145  0CE6  2CEF               	goto	l2500
  5146  0CE7                     u3790:
  5147  0CE7                     l2498:
  5148  0CE7  3000               	movlw	0
  5149  0CE8  00AB               	movwf	___flmul@a+3
  5150  0CE9  3000               	movlw	0
  5151  0CEA  00AA               	movwf	___flmul@a+2
  5152  0CEB  3000               	movlw	0
  5153  0CEC  00A9               	movwf	___flmul@a+1
  5154  0CED  3000               	movlw	0
  5155  0CEE  00A8               	movwf	___flmul@a
  5156  0CEF                     l2500:
  5157  0CEF  17AA               	bsf	___flmul@a+2,7
  5158  0CF0  2CF9               	goto	l2504
  5159  0CF1                     l2502:
  5160  0CF1  3000               	movlw	0
  5161  0CF2  00AB               	movwf	___flmul@a+3
  5162  0CF3  3000               	movlw	0
  5163  0CF4  00AA               	movwf	___flmul@a+2
  5164  0CF5  3000               	movlw	0
  5165  0CF6  00A9               	movwf	___flmul@a+1
  5166  0CF7  3000               	movlw	0
  5167  0CF8  00A8               	movwf	___flmul@a
  5168  0CF9                     l2504:
  5169  0CF9  0836               	movf	___flmul@aexp,w
  5170  0CFA  1903               	btfsc	3,2
  5171  0CFB  2CFD               	goto	u3801
  5172  0CFC  2CFE               	goto	u3800
  5173  0CFD                     u3801:
  5174  0CFD  2D03               	goto	l2508
  5175  0CFE                     u3800:
  5176  0CFE                     l2506:
  5177  0CFE  0837               	movf	___flmul@bexp,w
  5178  0CFF  1D03               	btfss	3,2
  5179  0D00  2D02               	goto	u3811
  5180  0D01  2D03               	goto	u3810
  5181  0D02                     u3811:
  5182  0D02  2D0C               	goto	l2512
  5183  0D03                     u3810:
  5184  0D03                     l2508:
  5185  0D03  3000               	movlw	0
  5186  0D04  00A7               	movwf	?___flmul+3
  5187  0D05  3000               	movlw	0
  5188  0D06  00A6               	movwf	?___flmul+2
  5189  0D07  3000               	movlw	0
  5190  0D08  00A5               	movwf	?___flmul+1
  5191  0D09  3000               	movlw	0
  5192  0D0A  00A4               	movwf	?___flmul
  5193  0D0B  2FFF               	goto	l680
  5194  0D0C                     l2512:
  5195  0D0C  0824               	movf	___flmul@b,w
  5196  0D0D  00AC               	movwf	??___flmul
  5197  0D0E  082C               	movf	??___flmul,w
  5198  0D0F  00F0               	movwf	__Umul8_16@multiplicand
  5199  0D10  082A               	movf	___flmul@a+2,w
  5200  0D11  160A  158A  2591  120A  158A  	fcall	__Umul8_16
  5201  0D16  0871               	movf	?__Umul8_16+1,w
  5202  0D17  1283               	bcf	3,5	;RP0=0, select bank0
  5203  0D18  1303               	bcf	3,6	;RP1=0, select bank0
  5204  0D19  00BD               	movwf	___flmul@temp+1
  5205  0D1A  0870               	movf	?__Umul8_16,w
  5206  0D1B  00BC               	movwf	___flmul@temp
  5207  0D1C                     l2514:
  5208  0D1C  083C               	movf	___flmul@temp,w
  5209  0D1D  00AC               	movwf	??___flmul
  5210  0D1E  01AD               	clrf	??___flmul+1
  5211  0D1F  01AE               	clrf	??___flmul+2
  5212  0D20  01AF               	clrf	??___flmul+3
  5213  0D21  082F               	movf	??___flmul+3,w
  5214  0D22  00B5               	movwf	___flmul@grs+3
  5215  0D23  082E               	movf	??___flmul+2,w
  5216  0D24  00B4               	movwf	___flmul@grs+2
  5217  0D25  082D               	movf	??___flmul+1,w
  5218  0D26  00B3               	movwf	___flmul@grs+1
  5219  0D27  082C               	movf	??___flmul,w
  5220  0D28  00B2               	movwf	___flmul@grs
  5221  0D29                     l2516:
  5222  0D29  083D               	movf	___flmul@temp+1,w
  5223  0D2A  00AC               	movwf	??___flmul
  5224  0D2B  01AD               	clrf	??___flmul+1
  5225  0D2C  01AE               	clrf	??___flmul+2
  5226  0D2D  01AF               	clrf	??___flmul+3
  5227  0D2E  082F               	movf	??___flmul+3,w
  5228  0D2F  00BB               	movwf	___flmul@prod+3
  5229  0D30  082E               	movf	??___flmul+2,w
  5230  0D31  00BA               	movwf	___flmul@prod+2
  5231  0D32  082D               	movf	??___flmul+1,w
  5232  0D33  00B9               	movwf	___flmul@prod+1
  5233  0D34  082C               	movf	??___flmul,w
  5234  0D35  00B8               	movwf	___flmul@prod
  5235  0D36  0825               	movf	___flmul@b+1,w
  5236  0D37  00AC               	movwf	??___flmul
  5237  0D38  082C               	movf	??___flmul,w
  5238  0D39  00F0               	movwf	__Umul8_16@multiplicand
  5239  0D3A  0829               	movf	___flmul@a+1,w
  5240  0D3B  160A  158A  2591  120A  158A  	fcall	__Umul8_16
  5241  0D40  0871               	movf	?__Umul8_16+1,w
  5242  0D41  1283               	bcf	3,5	;RP0=0, select bank0
  5243  0D42  1303               	bcf	3,6	;RP1=0, select bank0
  5244  0D43  00BD               	movwf	___flmul@temp+1
  5245  0D44  0870               	movf	?__Umul8_16,w
  5246  0D45  00BC               	movwf	___flmul@temp
  5247  0D46                     l2518:
  5248  0D46  083C               	movf	___flmul@temp,w
  5249  0D47  00AC               	movwf	??___flmul
  5250  0D48  01AD               	clrf	??___flmul+1
  5251  0D49  01AE               	clrf	??___flmul+2
  5252  0D4A  01AF               	clrf	??___flmul+3
  5253  0D4B  082C               	movf	??___flmul,w
  5254  0D4C  07B2               	addwf	___flmul@grs,f
  5255  0D4D  082D               	movf	??___flmul+1,w
  5256  0D4E  1103               	clrz
  5257  0D4F  1803               	skipnc
  5258  0D50  3E01               	addlw	1
  5259  0D51  1903               	skipnz
  5260  0D52  2D54               	goto	u3821
  5261  0D53  07B3               	addwf	___flmul@grs+1,f
  5262  0D54                     u3821:
  5263  0D54  082E               	movf	??___flmul+2,w
  5264  0D55  1103               	clrz
  5265  0D56  1803               	skipnc
  5266  0D57  3E01               	addlw	1
  5267  0D58  1903               	skipnz
  5268  0D59  2D5B               	goto	u3822
  5269  0D5A  07B4               	addwf	___flmul@grs+2,f
  5270  0D5B                     u3822:
  5271  0D5B  082F               	movf	??___flmul+3,w
  5272  0D5C  1103               	clrz
  5273  0D5D  1803               	skipnc
  5274  0D5E  3E01               	addlw	1
  5275  0D5F  1903               	skipnz
  5276  0D60  2D62               	goto	u3823
  5277  0D61  07B5               	addwf	___flmul@grs+3,f
  5278  0D62                     u3823:
  5279  0D62                     l2520:
  5280  0D62  083D               	movf	___flmul@temp+1,w
  5281  0D63  00AC               	movwf	??___flmul
  5282  0D64  01AD               	clrf	??___flmul+1
  5283  0D65  01AE               	clrf	??___flmul+2
  5284  0D66  01AF               	clrf	??___flmul+3
  5285  0D67  082C               	movf	??___flmul,w
  5286  0D68  07B8               	addwf	___flmul@prod,f
  5287  0D69  082D               	movf	??___flmul+1,w
  5288  0D6A  1103               	clrz
  5289  0D6B  1803               	skipnc
  5290  0D6C  3E01               	addlw	1
  5291  0D6D  1903               	skipnz
  5292  0D6E  2D70               	goto	u3831
  5293  0D6F  07B9               	addwf	___flmul@prod+1,f
  5294  0D70                     u3831:
  5295  0D70  082E               	movf	??___flmul+2,w
  5296  0D71  1103               	clrz
  5297  0D72  1803               	skipnc
  5298  0D73  3E01               	addlw	1
  5299  0D74  1903               	skipnz
  5300  0D75  2D77               	goto	u3832
  5301  0D76  07BA               	addwf	___flmul@prod+2,f
  5302  0D77                     u3832:
  5303  0D77  082F               	movf	??___flmul+3,w
  5304  0D78  1103               	clrz
  5305  0D79  1803               	skipnc
  5306  0D7A  3E01               	addlw	1
  5307  0D7B  1903               	skipnz
  5308  0D7C  2D7E               	goto	u3833
  5309  0D7D  07BB               	addwf	___flmul@prod+3,f
  5310  0D7E                     u3833:
  5311  0D7E  0826               	movf	___flmul@b+2,w
  5312  0D7F  00AC               	movwf	??___flmul
  5313  0D80  082C               	movf	??___flmul,w
  5314  0D81  00F0               	movwf	__Umul8_16@multiplicand
  5315  0D82  0828               	movf	___flmul@a,w
  5316  0D83  160A  158A  2591  120A  158A  	fcall	__Umul8_16
  5317  0D88  0871               	movf	?__Umul8_16+1,w
  5318  0D89  1283               	bcf	3,5	;RP0=0, select bank0
  5319  0D8A  1303               	bcf	3,6	;RP1=0, select bank0
  5320  0D8B  00BD               	movwf	___flmul@temp+1
  5321  0D8C  0870               	movf	?__Umul8_16,w
  5322  0D8D  00BC               	movwf	___flmul@temp
  5323  0D8E                     l2522:
  5324  0D8E  083C               	movf	___flmul@temp,w
  5325  0D8F  00AC               	movwf	??___flmul
  5326  0D90  01AD               	clrf	??___flmul+1
  5327  0D91  01AE               	clrf	??___flmul+2
  5328  0D92  01AF               	clrf	??___flmul+3
  5329  0D93  082C               	movf	??___flmul,w
  5330  0D94  07B2               	addwf	___flmul@grs,f
  5331  0D95  082D               	movf	??___flmul+1,w
  5332  0D96  1103               	clrz
  5333  0D97  1803               	skipnc
  5334  0D98  3E01               	addlw	1
  5335  0D99  1903               	skipnz
  5336  0D9A  2D9C               	goto	u3841
  5337  0D9B  07B3               	addwf	___flmul@grs+1,f
  5338  0D9C                     u3841:
  5339  0D9C  082E               	movf	??___flmul+2,w
  5340  0D9D  1103               	clrz
  5341  0D9E  1803               	skipnc
  5342  0D9F  3E01               	addlw	1
  5343  0DA0  1903               	skipnz
  5344  0DA1  2DA3               	goto	u3842
  5345  0DA2  07B4               	addwf	___flmul@grs+2,f
  5346  0DA3                     u3842:
  5347  0DA3  082F               	movf	??___flmul+3,w
  5348  0DA4  1103               	clrz
  5349  0DA5  1803               	skipnc
  5350  0DA6  3E01               	addlw	1
  5351  0DA7  1903               	skipnz
  5352  0DA8  2DAA               	goto	u3843
  5353  0DA9  07B5               	addwf	___flmul@grs+3,f
  5354  0DAA                     u3843:
  5355  0DAA                     l2524:
  5356  0DAA  083D               	movf	___flmul@temp+1,w
  5357  0DAB  00AC               	movwf	??___flmul
  5358  0DAC  01AD               	clrf	??___flmul+1
  5359  0DAD  01AE               	clrf	??___flmul+2
  5360  0DAE  01AF               	clrf	??___flmul+3
  5361  0DAF  082C               	movf	??___flmul,w
  5362  0DB0  07B8               	addwf	___flmul@prod,f
  5363  0DB1  082D               	movf	??___flmul+1,w
  5364  0DB2  1103               	clrz
  5365  0DB3  1803               	skipnc
  5366  0DB4  3E01               	addlw	1
  5367  0DB5  1903               	skipnz
  5368  0DB6  2DB8               	goto	u3851
  5369  0DB7  07B9               	addwf	___flmul@prod+1,f
  5370  0DB8                     u3851:
  5371  0DB8  082E               	movf	??___flmul+2,w
  5372  0DB9  1103               	clrz
  5373  0DBA  1803               	skipnc
  5374  0DBB  3E01               	addlw	1
  5375  0DBC  1903               	skipnz
  5376  0DBD  2DBF               	goto	u3852
  5377  0DBE  07BA               	addwf	___flmul@prod+2,f
  5378  0DBF                     u3852:
  5379  0DBF  082F               	movf	??___flmul+3,w
  5380  0DC0  1103               	clrz
  5381  0DC1  1803               	skipnc
  5382  0DC2  3E01               	addlw	1
  5383  0DC3  1903               	skipnz
  5384  0DC4  2DC6               	goto	u3853
  5385  0DC5  07BB               	addwf	___flmul@prod+3,f
  5386  0DC6                     u3853:
  5387  0DC6                     l2526:
  5388  0DC6  3008               	movlw	8
  5389  0DC7  00AC               	movwf	??___flmul
  5390  0DC8                     u3865:
  5391  0DC8  1003               	clrc
  5392  0DC9  0DB2               	rlf	___flmul@grs,f
  5393  0DCA  0DB3               	rlf	___flmul@grs+1,f
  5394  0DCB  0DB4               	rlf	___flmul@grs+2,f
  5395  0DCC  0DB5               	rlf	___flmul@grs+3,f
  5396  0DCD  0BAC               	decfsz	??___flmul,f
  5397  0DCE  2DC8               	goto	u3865
  5398  0DCF                     l2528:
  5399  0DCF  0825               	movf	___flmul@b+1,w
  5400  0DD0  00AC               	movwf	??___flmul
  5401  0DD1  082C               	movf	??___flmul,w
  5402  0DD2  00F0               	movwf	__Umul8_16@multiplicand
  5403  0DD3  0828               	movf	___flmul@a,w
  5404  0DD4  160A  158A  2591  120A  158A  	fcall	__Umul8_16
  5405  0DD9  0871               	movf	?__Umul8_16+1,w
  5406  0DDA  1283               	bcf	3,5	;RP0=0, select bank0
  5407  0DDB  1303               	bcf	3,6	;RP1=0, select bank0
  5408  0DDC  00BD               	movwf	___flmul@temp+1
  5409  0DDD  0870               	movf	?__Umul8_16,w
  5410  0DDE  00BC               	movwf	___flmul@temp
  5411  0DDF                     l2530:
  5412  0DDF  083C               	movf	___flmul@temp,w
  5413  0DE0  00AC               	movwf	??___flmul
  5414  0DE1  083D               	movf	___flmul@temp+1,w
  5415  0DE2  00AD               	movwf	??___flmul+1
  5416  0DE3  01AE               	clrf	??___flmul+2
  5417  0DE4  01AF               	clrf	??___flmul+3
  5418  0DE5  082C               	movf	??___flmul,w
  5419  0DE6  07B2               	addwf	___flmul@grs,f
  5420  0DE7  082D               	movf	??___flmul+1,w
  5421  0DE8  1103               	clrz
  5422  0DE9  1803               	skipnc
  5423  0DEA  3E01               	addlw	1
  5424  0DEB  1903               	skipnz
  5425  0DEC  2DEE               	goto	u3871
  5426  0DED  07B3               	addwf	___flmul@grs+1,f
  5427  0DEE                     u3871:
  5428  0DEE  082E               	movf	??___flmul+2,w
  5429  0DEF  1103               	clrz
  5430  0DF0  1803               	skipnc
  5431  0DF1  3E01               	addlw	1
  5432  0DF2  1903               	skipnz
  5433  0DF3  2DF5               	goto	u3872
  5434  0DF4  07B4               	addwf	___flmul@grs+2,f
  5435  0DF5                     u3872:
  5436  0DF5  082F               	movf	??___flmul+3,w
  5437  0DF6  1103               	clrz
  5438  0DF7  1803               	skipnc
  5439  0DF8  3E01               	addlw	1
  5440  0DF9  1903               	skipnz
  5441  0DFA  2DFC               	goto	u3873
  5442  0DFB  07B5               	addwf	___flmul@grs+3,f
  5443  0DFC                     u3873:
  5444  0DFC                     l2532:
  5445  0DFC  0824               	movf	___flmul@b,w
  5446  0DFD  00AC               	movwf	??___flmul
  5447  0DFE  082C               	movf	??___flmul,w
  5448  0DFF  00F0               	movwf	__Umul8_16@multiplicand
  5449  0E00  0829               	movf	___flmul@a+1,w
  5450  0E01  160A  158A  2591  120A  158A  	fcall	__Umul8_16
  5451  0E06  0871               	movf	?__Umul8_16+1,w
  5452  0E07  1283               	bcf	3,5	;RP0=0, select bank0
  5453  0E08  1303               	bcf	3,6	;RP1=0, select bank0
  5454  0E09  00BD               	movwf	___flmul@temp+1
  5455  0E0A  0870               	movf	?__Umul8_16,w
  5456  0E0B  00BC               	movwf	___flmul@temp
  5457  0E0C                     l2534:
  5458  0E0C  083C               	movf	___flmul@temp,w
  5459  0E0D  00AC               	movwf	??___flmul
  5460  0E0E  083D               	movf	___flmul@temp+1,w
  5461  0E0F  00AD               	movwf	??___flmul+1
  5462  0E10  01AE               	clrf	??___flmul+2
  5463  0E11  01AF               	clrf	??___flmul+3
  5464  0E12  082C               	movf	??___flmul,w
  5465  0E13  07B2               	addwf	___flmul@grs,f
  5466  0E14  082D               	movf	??___flmul+1,w
  5467  0E15  1103               	clrz
  5468  0E16  1803               	skipnc
  5469  0E17  3E01               	addlw	1
  5470  0E18  1903               	skipnz
  5471  0E19  2E1B               	goto	u3881
  5472  0E1A  07B3               	addwf	___flmul@grs+1,f
  5473  0E1B                     u3881:
  5474  0E1B  082E               	movf	??___flmul+2,w
  5475  0E1C  1103               	clrz
  5476  0E1D  1803               	skipnc
  5477  0E1E  3E01               	addlw	1
  5478  0E1F  1903               	skipnz
  5479  0E20  2E22               	goto	u3882
  5480  0E21  07B4               	addwf	___flmul@grs+2,f
  5481  0E22                     u3882:
  5482  0E22  082F               	movf	??___flmul+3,w
  5483  0E23  1103               	clrz
  5484  0E24  1803               	skipnc
  5485  0E25  3E01               	addlw	1
  5486  0E26  1903               	skipnz
  5487  0E27  2E29               	goto	u3883
  5488  0E28  07B5               	addwf	___flmul@grs+3,f
  5489  0E29                     u3883:
  5490  0E29                     l2536:
  5491  0E29  3008               	movlw	8
  5492  0E2A  00AC               	movwf	??___flmul
  5493  0E2B                     u3895:
  5494  0E2B  1003               	clrc
  5495  0E2C  0DB2               	rlf	___flmul@grs,f
  5496  0E2D  0DB3               	rlf	___flmul@grs+1,f
  5497  0E2E  0DB4               	rlf	___flmul@grs+2,f
  5498  0E2F  0DB5               	rlf	___flmul@grs+3,f
  5499  0E30  0BAC               	decfsz	??___flmul,f
  5500  0E31  2E2B               	goto	u3895
  5501  0E32  0824               	movf	___flmul@b,w
  5502  0E33  00AC               	movwf	??___flmul
  5503  0E34  082C               	movf	??___flmul,w
  5504  0E35  00F0               	movwf	__Umul8_16@multiplicand
  5505  0E36  0828               	movf	___flmul@a,w
  5506  0E37  160A  158A  2591  120A  158A  	fcall	__Umul8_16
  5507  0E3C  0871               	movf	?__Umul8_16+1,w
  5508  0E3D  1283               	bcf	3,5	;RP0=0, select bank0
  5509  0E3E  1303               	bcf	3,6	;RP1=0, select bank0
  5510  0E3F  00BD               	movwf	___flmul@temp+1
  5511  0E40  0870               	movf	?__Umul8_16,w
  5512  0E41  00BC               	movwf	___flmul@temp
  5513  0E42                     l2538:
  5514  0E42  083C               	movf	___flmul@temp,w
  5515  0E43  00AC               	movwf	??___flmul
  5516  0E44  083D               	movf	___flmul@temp+1,w
  5517  0E45  00AD               	movwf	??___flmul+1
  5518  0E46  01AE               	clrf	??___flmul+2
  5519  0E47  01AF               	clrf	??___flmul+3
  5520  0E48  082C               	movf	??___flmul,w
  5521  0E49  07B2               	addwf	___flmul@grs,f
  5522  0E4A  082D               	movf	??___flmul+1,w
  5523  0E4B  1103               	clrz
  5524  0E4C  1803               	skipnc
  5525  0E4D  3E01               	addlw	1
  5526  0E4E  1903               	skipnz
  5527  0E4F  2E51               	goto	u3901
  5528  0E50  07B3               	addwf	___flmul@grs+1,f
  5529  0E51                     u3901:
  5530  0E51  082E               	movf	??___flmul+2,w
  5531  0E52  1103               	clrz
  5532  0E53  1803               	skipnc
  5533  0E54  3E01               	addlw	1
  5534  0E55  1903               	skipnz
  5535  0E56  2E58               	goto	u3902
  5536  0E57  07B4               	addwf	___flmul@grs+2,f
  5537  0E58                     u3902:
  5538  0E58  082F               	movf	??___flmul+3,w
  5539  0E59  1103               	clrz
  5540  0E5A  1803               	skipnc
  5541  0E5B  3E01               	addlw	1
  5542  0E5C  1903               	skipnz
  5543  0E5D  2E5F               	goto	u3903
  5544  0E5E  07B5               	addwf	___flmul@grs+3,f
  5545  0E5F                     u3903:
  5546  0E5F                     l2540:
  5547  0E5F  0825               	movf	___flmul@b+1,w
  5548  0E60  00AC               	movwf	??___flmul
  5549  0E61  082C               	movf	??___flmul,w
  5550  0E62  00F0               	movwf	__Umul8_16@multiplicand
  5551  0E63  082A               	movf	___flmul@a+2,w
  5552  0E64  160A  158A  2591  120A  158A  	fcall	__Umul8_16
  5553  0E69  0871               	movf	?__Umul8_16+1,w
  5554  0E6A  1283               	bcf	3,5	;RP0=0, select bank0
  5555  0E6B  1303               	bcf	3,6	;RP1=0, select bank0
  5556  0E6C  00BD               	movwf	___flmul@temp+1
  5557  0E6D  0870               	movf	?__Umul8_16,w
  5558  0E6E  00BC               	movwf	___flmul@temp
  5559  0E6F  083C               	movf	___flmul@temp,w
  5560  0E70  00AC               	movwf	??___flmul
  5561  0E71  083D               	movf	___flmul@temp+1,w
  5562  0E72  00AD               	movwf	??___flmul+1
  5563  0E73  01AE               	clrf	??___flmul+2
  5564  0E74  01AF               	clrf	??___flmul+3
  5565  0E75  082C               	movf	??___flmul,w
  5566  0E76  07B8               	addwf	___flmul@prod,f
  5567  0E77  082D               	movf	??___flmul+1,w
  5568  0E78  1103               	clrz
  5569  0E79  1803               	skipnc
  5570  0E7A  3E01               	addlw	1
  5571  0E7B  1903               	skipnz
  5572  0E7C  2E7E               	goto	u3911
  5573  0E7D  07B9               	addwf	___flmul@prod+1,f
  5574  0E7E                     u3911:
  5575  0E7E  082E               	movf	??___flmul+2,w
  5576  0E7F  1103               	clrz
  5577  0E80  1803               	skipnc
  5578  0E81  3E01               	addlw	1
  5579  0E82  1903               	skipnz
  5580  0E83  2E85               	goto	u3912
  5581  0E84  07BA               	addwf	___flmul@prod+2,f
  5582  0E85                     u3912:
  5583  0E85  082F               	movf	??___flmul+3,w
  5584  0E86  1103               	clrz
  5585  0E87  1803               	skipnc
  5586  0E88  3E01               	addlw	1
  5587  0E89  1903               	skipnz
  5588  0E8A  2E8C               	goto	u3913
  5589  0E8B  07BB               	addwf	___flmul@prod+3,f
  5590  0E8C                     u3913:
  5591  0E8C                     l2542:
  5592  0E8C  0826               	movf	___flmul@b+2,w
  5593  0E8D  00AC               	movwf	??___flmul
  5594  0E8E  082C               	movf	??___flmul,w
  5595  0E8F  00F0               	movwf	__Umul8_16@multiplicand
  5596  0E90  0829               	movf	___flmul@a+1,w
  5597  0E91  160A  158A  2591  120A  158A  	fcall	__Umul8_16
  5598  0E96  0871               	movf	?__Umul8_16+1,w
  5599  0E97  1283               	bcf	3,5	;RP0=0, select bank0
  5600  0E98  1303               	bcf	3,6	;RP1=0, select bank0
  5601  0E99  00BD               	movwf	___flmul@temp+1
  5602  0E9A  0870               	movf	?__Umul8_16,w
  5603  0E9B  00BC               	movwf	___flmul@temp
  5604  0E9C                     l2544:
  5605  0E9C  083C               	movf	___flmul@temp,w
  5606  0E9D  00AC               	movwf	??___flmul
  5607  0E9E  083D               	movf	___flmul@temp+1,w
  5608  0E9F  00AD               	movwf	??___flmul+1
  5609  0EA0  01AE               	clrf	??___flmul+2
  5610  0EA1  01AF               	clrf	??___flmul+3
  5611  0EA2  082C               	movf	??___flmul,w
  5612  0EA3  07B8               	addwf	___flmul@prod,f
  5613  0EA4  082D               	movf	??___flmul+1,w
  5614  0EA5  1103               	clrz
  5615  0EA6  1803               	skipnc
  5616  0EA7  3E01               	addlw	1
  5617  0EA8  1903               	skipnz
  5618  0EA9  2EAB               	goto	u3921
  5619  0EAA  07B9               	addwf	___flmul@prod+1,f
  5620  0EAB                     u3921:
  5621  0EAB  082E               	movf	??___flmul+2,w
  5622  0EAC  1103               	clrz
  5623  0EAD  1803               	skipnc
  5624  0EAE  3E01               	addlw	1
  5625  0EAF  1903               	skipnz
  5626  0EB0  2EB2               	goto	u3922
  5627  0EB1  07BA               	addwf	___flmul@prod+2,f
  5628  0EB2                     u3922:
  5629  0EB2  082F               	movf	??___flmul+3,w
  5630  0EB3  1103               	clrz
  5631  0EB4  1803               	skipnc
  5632  0EB5  3E01               	addlw	1
  5633  0EB6  1903               	skipnz
  5634  0EB7  2EB9               	goto	u3923
  5635  0EB8  07BB               	addwf	___flmul@prod+3,f
  5636  0EB9                     u3923:
  5637  0EB9  0826               	movf	___flmul@b+2,w
  5638  0EBA  00AC               	movwf	??___flmul
  5639  0EBB  082C               	movf	??___flmul,w
  5640  0EBC  00F0               	movwf	__Umul8_16@multiplicand
  5641  0EBD  082A               	movf	___flmul@a+2,w
  5642  0EBE  160A  158A  2591  120A  158A  	fcall	__Umul8_16
  5643  0EC3  0871               	movf	?__Umul8_16+1,w
  5644  0EC4  1283               	bcf	3,5	;RP0=0, select bank0
  5645  0EC5  1303               	bcf	3,6	;RP1=0, select bank0
  5646  0EC6  00BD               	movwf	___flmul@temp+1
  5647  0EC7  0870               	movf	?__Umul8_16,w
  5648  0EC8  00BC               	movwf	___flmul@temp
  5649  0EC9                     l2546:
  5650  0EC9  083C               	movf	___flmul@temp,w
  5651  0ECA  00AC               	movwf	??___flmul
  5652  0ECB  083D               	movf	___flmul@temp+1,w
  5653  0ECC  00AD               	movwf	??___flmul+1
  5654  0ECD  01AE               	clrf	??___flmul+2
  5655  0ECE  01AF               	clrf	??___flmul+3
  5656  0ECF  3008               	movlw	8
  5657  0ED0                     u3935:
  5658  0ED0  1003               	clrc
  5659  0ED1  0DAC               	rlf	??___flmul,f
  5660  0ED2  0DAD               	rlf	??___flmul+1,f
  5661  0ED3  0DAE               	rlf	??___flmul+2,f
  5662  0ED4  0DAF               	rlf	??___flmul+3,f
  5663  0ED5                     u3930:
  5664  0ED5  3EFF               	addlw	-1
  5665  0ED6  1D03               	skipz
  5666  0ED7  2ED0               	goto	u3935
  5667  0ED8  082C               	movf	??___flmul,w
  5668  0ED9  07B8               	addwf	___flmul@prod,f
  5669  0EDA  082D               	movf	??___flmul+1,w
  5670  0EDB  1103               	clrz
  5671  0EDC  1803               	skipnc
  5672  0EDD  3E01               	addlw	1
  5673  0EDE  1903               	skipnz
  5674  0EDF  2EE1               	goto	u3941
  5675  0EE0  07B9               	addwf	___flmul@prod+1,f
  5676  0EE1                     u3941:
  5677  0EE1  082E               	movf	??___flmul+2,w
  5678  0EE2  1103               	clrz
  5679  0EE3  1803               	skipnc
  5680  0EE4  3E01               	addlw	1
  5681  0EE5  1903               	skipnz
  5682  0EE6  2EE8               	goto	u3942
  5683  0EE7  07BA               	addwf	___flmul@prod+2,f
  5684  0EE8                     u3942:
  5685  0EE8  082F               	movf	??___flmul+3,w
  5686  0EE9  1103               	clrz
  5687  0EEA  1803               	skipnc
  5688  0EEB  3E01               	addlw	1
  5689  0EEC  1903               	skipnz
  5690  0EED  2EEF               	goto	u3943
  5691  0EEE  07BB               	addwf	___flmul@prod+3,f
  5692  0EEF                     u3943:
  5693  0EEF                     l2548:
  5694  0EEF  0832               	movf	___flmul@grs,w
  5695  0EF0  00AC               	movwf	??___flmul
  5696  0EF1  0833               	movf	___flmul@grs+1,w
  5697  0EF2  00AD               	movwf	??___flmul+1
  5698  0EF3  0834               	movf	___flmul@grs+2,w
  5699  0EF4  00AE               	movwf	??___flmul+2
  5700  0EF5  0835               	movf	___flmul@grs+3,w
  5701  0EF6  00AF               	movwf	??___flmul+3
  5702  0EF7  3018               	movlw	24
  5703  0EF8                     u3955:
  5704  0EF8  1003               	clrc
  5705  0EF9  0CAF               	rrf	??___flmul+3,f
  5706  0EFA  0CAE               	rrf	??___flmul+2,f
  5707  0EFB  0CAD               	rrf	??___flmul+1,f
  5708  0EFC  0CAC               	rrf	??___flmul,f
  5709  0EFD                     u3950:
  5710  0EFD  3EFF               	addlw	-1
  5711  0EFE  1D03               	skipz
  5712  0EFF  2EF8               	goto	u3955
  5713  0F00  082C               	movf	??___flmul,w
  5714  0F01  07B8               	addwf	___flmul@prod,f
  5715  0F02  082D               	movf	??___flmul+1,w
  5716  0F03  1103               	clrz
  5717  0F04  1803               	skipnc
  5718  0F05  3E01               	addlw	1
  5719  0F06  1903               	skipnz
  5720  0F07  2F09               	goto	u3961
  5721  0F08  07B9               	addwf	___flmul@prod+1,f
  5722  0F09                     u3961:
  5723  0F09  082E               	movf	??___flmul+2,w
  5724  0F0A  1103               	clrz
  5725  0F0B  1803               	skipnc
  5726  0F0C  3E01               	addlw	1
  5727  0F0D  1903               	skipnz
  5728  0F0E  2F10               	goto	u3962
  5729  0F0F  07BA               	addwf	___flmul@prod+2,f
  5730  0F10                     u3962:
  5731  0F10  082F               	movf	??___flmul+3,w
  5732  0F11  1103               	clrz
  5733  0F12  1803               	skipnc
  5734  0F13  3E01               	addlw	1
  5735  0F14  1903               	skipnz
  5736  0F15  2F17               	goto	u3963
  5737  0F16  07BB               	addwf	___flmul@prod+3,f
  5738  0F17                     u3963:
  5739  0F17                     l2550:
  5740  0F17  3008               	movlw	8
  5741  0F18  00AC               	movwf	??___flmul
  5742  0F19                     u3975:
  5743  0F19  1003               	clrc
  5744  0F1A  0DB2               	rlf	___flmul@grs,f
  5745  0F1B  0DB3               	rlf	___flmul@grs+1,f
  5746  0F1C  0DB4               	rlf	___flmul@grs+2,f
  5747  0F1D  0DB5               	rlf	___flmul@grs+3,f
  5748  0F1E  0BAC               	decfsz	??___flmul,f
  5749  0F1F  2F19               	goto	u3975
  5750  0F20                     l2552:
  5751  0F20  0837               	movf	___flmul@bexp,w
  5752  0F21  0736               	addwf	___flmul@aexp,w
  5753  0F22  00AC               	movwf	??___flmul
  5754  0F23  01AD               	clrf	??___flmul+1
  5755  0F24  0DAD               	rlf	??___flmul+1,f
  5756  0F25  082C               	movf	??___flmul,w
  5757  0F26  3E82               	addlw	130
  5758  0F27  00BC               	movwf	___flmul@temp
  5759  0F28  082D               	movf	??___flmul+1,w
  5760  0F29  1803               	skipnc
  5761  0F2A  3E01               	addlw	1
  5762  0F2B  3EFF               	addlw	255
  5763  0F2C  00BD               	movwf	___flmul@temp+1
  5764  0F2D  2F4B               	goto	l2564
  5765  0F2E                     l2554:
  5766  0F2E  3001               	movlw	1
  5767  0F2F  00AC               	movwf	??___flmul
  5768  0F30                     u3985:
  5769  0F30  1003               	clrc
  5770  0F31  0DB8               	rlf	___flmul@prod,f
  5771  0F32  0DB9               	rlf	___flmul@prod+1,f
  5772  0F33  0DBA               	rlf	___flmul@prod+2,f
  5773  0F34  0DBB               	rlf	___flmul@prod+3,f
  5774  0F35  0BAC               	decfsz	??___flmul,f
  5775  0F36  2F30               	goto	u3985
  5776  0F37                     l2556:
  5777  0F37  1FB5               	btfss	___flmul@grs+3,7
  5778  0F38  2F3A               	goto	u3991
  5779  0F39  2F3B               	goto	u3990
  5780  0F3A                     u3991:
  5781  0F3A  2F3C               	goto	l2560
  5782  0F3B                     u3990:
  5783  0F3B                     l2558:
  5784  0F3B  1438               	bsf	___flmul@prod,0
  5785  0F3C                     l2560:
  5786  0F3C  3001               	movlw	1
  5787  0F3D  00AC               	movwf	??___flmul
  5788  0F3E                     u4005:
  5789  0F3E  1003               	clrc
  5790  0F3F  0DB2               	rlf	___flmul@grs,f
  5791  0F40  0DB3               	rlf	___flmul@grs+1,f
  5792  0F41  0DB4               	rlf	___flmul@grs+2,f
  5793  0F42  0DB5               	rlf	___flmul@grs+3,f
  5794  0F43  0BAC               	decfsz	??___flmul,f
  5795  0F44  2F3E               	goto	u4005
  5796  0F45                     l2562:
  5797  0F45  30FF               	movlw	255
  5798  0F46  07BC               	addwf	___flmul@temp,f
  5799  0F47  1803               	skipnc
  5800  0F48  0ABD               	incf	___flmul@temp+1,f
  5801  0F49  30FF               	movlw	255
  5802  0F4A  07BD               	addwf	___flmul@temp+1,f
  5803  0F4B                     l2564:
  5804  0F4B  1FBA               	btfss	___flmul@prod+2,7
  5805  0F4C  2F4E               	goto	u4011
  5806  0F4D  2F4F               	goto	u4010
  5807  0F4E                     u4011:
  5808  0F4E  2F2E               	goto	l2554
  5809  0F4F                     u4010:
  5810  0F4F                     l2566:
  5811  0F4F  01B6               	clrf	___flmul@aexp
  5812  0F50                     l2568:
  5813  0F50  1FB5               	btfss	___flmul@grs+3,7
  5814  0F51  2F53               	goto	u4021
  5815  0F52  2F54               	goto	u4020
  5816  0F53                     u4021:
  5817  0F53  2F70               	goto	l2576
  5818  0F54                     u4020:
  5819  0F54                     l2570:
  5820  0F54  30FF               	movlw	255
  5821  0F55  0532               	andwf	___flmul@grs,w
  5822  0F56  00AC               	movwf	??___flmul
  5823  0F57  30FF               	movlw	255
  5824  0F58  0533               	andwf	___flmul@grs+1,w
  5825  0F59  00AD               	movwf	??___flmul+1
  5826  0F5A  30FF               	movlw	255
  5827  0F5B  0534               	andwf	___flmul@grs+2,w
  5828  0F5C  00AE               	movwf	??___flmul+2
  5829  0F5D  307F               	movlw	127
  5830  0F5E  0535               	andwf	___flmul@grs+3,w
  5831  0F5F  00AF               	movwf	??___flmul+3
  5832  0F60  082F               	movf	??___flmul+3,w
  5833  0F61  042E               	iorwf	??___flmul+2,w
  5834  0F62  042D               	iorwf	??___flmul+1,w
  5835  0F63  042C               	iorwf	??___flmul,w
  5836  0F64  1903               	skipnz
  5837  0F65  2F67               	goto	u4031
  5838  0F66  2F68               	goto	u4030
  5839  0F67                     u4031:
  5840  0F67  2F6B               	goto	l686
  5841  0F68                     u4030:
  5842  0F68                     l2572:
  5843  0F68  01B6               	clrf	___flmul@aexp
  5844  0F69  0AB6               	incf	___flmul@aexp,f
  5845  0F6A  2F70               	goto	l2576
  5846  0F6B                     l686:
  5847  0F6B  1C38               	btfss	___flmul@prod,0
  5848  0F6C  2F6E               	goto	u4041
  5849  0F6D  2F6F               	goto	u4040
  5850  0F6E                     u4041:
  5851  0F6E  2F70               	goto	l2576
  5852  0F6F                     u4040:
  5853  0F6F  2F68               	goto	l2572
  5854  0F70                     l2576:
  5855  0F70  0836               	movf	___flmul@aexp,w
  5856  0F71  1903               	btfsc	3,2
  5857  0F72  2F74               	goto	u4051
  5858  0F73  2F75               	goto	u4050
  5859  0F74                     u4051:
  5860  0F74  2FA6               	goto	l2586
  5861  0F75                     u4050:
  5862  0F75                     l2578:
  5863  0F75  3001               	movlw	1
  5864  0F76  07B8               	addwf	___flmul@prod,f
  5865  0F77  3000               	movlw	0
  5866  0F78  1803               	skipnc
  5867  0F79  3001               	movlw	1
  5868  0F7A  07B9               	addwf	___flmul@prod+1,f
  5869  0F7B  3000               	movlw	0
  5870  0F7C  1803               	skipnc
  5871  0F7D  3001               	movlw	1
  5872  0F7E  07BA               	addwf	___flmul@prod+2,f
  5873  0F7F  3000               	movlw	0
  5874  0F80  1803               	skipnc
  5875  0F81  3001               	movlw	1
  5876  0F82  07BB               	addwf	___flmul@prod+3,f
  5877  0F83                     l2580:
  5878  0F83  1C3B               	btfss	___flmul@prod+3,0
  5879  0F84  2F86               	goto	u4061
  5880  0F85  2F87               	goto	u4060
  5881  0F86                     u4061:
  5882  0F86  2FA6               	goto	l2586
  5883  0F87                     u4060:
  5884  0F87                     l2582:
  5885  0F87  0838               	movf	___flmul@prod,w
  5886  0F88  00AC               	movwf	??___flmul
  5887  0F89  0839               	movf	___flmul@prod+1,w
  5888  0F8A  00AD               	movwf	??___flmul+1
  5889  0F8B  083A               	movf	___flmul@prod+2,w
  5890  0F8C  00AE               	movwf	??___flmul+2
  5891  0F8D  083B               	movf	___flmul@prod+3,w
  5892  0F8E  00AF               	movwf	??___flmul+3
  5893  0F8F  3001               	movlw	1
  5894  0F90  00B0               	movwf	??___flmul+4
  5895  0F91                     u4075:
  5896  0F91  0D2F               	rlf	??___flmul+3,w
  5897  0F92  0CAF               	rrf	??___flmul+3,f
  5898  0F93  0CAE               	rrf	??___flmul+2,f
  5899  0F94  0CAD               	rrf	??___flmul+1,f
  5900  0F95  0CAC               	rrf	??___flmul,f
  5901  0F96                     u4070:
  5902  0F96  0BB0               	decfsz	??___flmul+4,f
  5903  0F97  2F91               	goto	u4075
  5904  0F98  082F               	movf	??___flmul+3,w
  5905  0F99  00BB               	movwf	___flmul@prod+3
  5906  0F9A  082E               	movf	??___flmul+2,w
  5907  0F9B  00BA               	movwf	___flmul@prod+2
  5908  0F9C  082D               	movf	??___flmul+1,w
  5909  0F9D  00B9               	movwf	___flmul@prod+1
  5910  0F9E  082C               	movf	??___flmul,w
  5911  0F9F  00B8               	movwf	___flmul@prod
  5912  0FA0                     l2584:
  5913  0FA0  3001               	movlw	1
  5914  0FA1  07BC               	addwf	___flmul@temp,f
  5915  0FA2  1803               	skipnc
  5916  0FA3  0ABD               	incf	___flmul@temp+1,f
  5917  0FA4  3000               	movlw	0
  5918  0FA5  07BD               	addwf	___flmul@temp+1,f
  5919  0FA6                     l2586:
  5920  0FA6  083D               	movf	___flmul@temp+1,w
  5921  0FA7  3A80               	xorlw	128
  5922  0FA8  00FF               	movwf	btemp+1
  5923  0FA9  3080               	movlw	128
  5924  0FAA  027F               	subwf	btemp+1,w
  5925  0FAB  1D03               	skipz
  5926  0FAC  2FAF               	goto	u4085
  5927  0FAD  30FF               	movlw	255
  5928  0FAE  023C               	subwf	___flmul@temp,w
  5929  0FAF                     u4085:
  5930  0FAF  1C03               	skipc
  5931  0FB0  2FB2               	goto	u4081
  5932  0FB1  2FB3               	goto	u4080
  5933  0FB2                     u4081:
  5934  0FB2  2FBE               	goto	l2590
  5935  0FB3                     u4080:
  5936  0FB3                     l2588:
  5937  0FB3  307F               	movlw	127
  5938  0FB4  1283               	bcf	3,5	;RP0=0, select bank0
  5939  0FB5  1303               	bcf	3,6	;RP1=0, select bank0
  5940  0FB6  00BB               	movwf	___flmul@prod+3
  5941  0FB7  3080               	movlw	128
  5942  0FB8  00BA               	movwf	___flmul@prod+2
  5943  0FB9  3000               	movlw	0
  5944  0FBA  00B9               	movwf	___flmul@prod+1
  5945  0FBB  3000               	movlw	0
  5946  0FBC  00B8               	movwf	___flmul@prod
  5947  0FBD  2FF3               	goto	l692
  5948  0FBE                     l2590:
  5949  0FBE  1283               	bcf	3,5	;RP0=0, select bank0
  5950  0FBF  1303               	bcf	3,6	;RP1=0, select bank0
  5951  0FC0  083D               	movf	___flmul@temp+1,w
  5952  0FC1  3A80               	xorlw	128
  5953  0FC2  00FF               	movwf	btemp+1
  5954  0FC3  3080               	movlw	128
  5955  0FC4  027F               	subwf	btemp+1,w
  5956  0FC5  1D03               	skipz
  5957  0FC6  2FC9               	goto	u4095
  5958  0FC7  3001               	movlw	1
  5959  0FC8  023C               	subwf	___flmul@temp,w
  5960  0FC9                     u4095:
  5961  0FC9  1803               	skipnc
  5962  0FCA  2FCC               	goto	u4091
  5963  0FCB  2FCD               	goto	u4090
  5964  0FCC                     u4091:
  5965  0FCC  2FD9               	goto	l2596
  5966  0FCD                     u4090:
  5967  0FCD                     l2592:
  5968  0FCD  3000               	movlw	0
  5969  0FCE  1283               	bcf	3,5	;RP0=0, select bank0
  5970  0FCF  1303               	bcf	3,6	;RP1=0, select bank0
  5971  0FD0  00BB               	movwf	___flmul@prod+3
  5972  0FD1  3000               	movlw	0
  5973  0FD2  00BA               	movwf	___flmul@prod+2
  5974  0FD3  3000               	movlw	0
  5975  0FD4  00B9               	movwf	___flmul@prod+1
  5976  0FD5  3000               	movlw	0
  5977  0FD6  00B8               	movwf	___flmul@prod
  5978  0FD7                     l2594:
  5979  0FD7  01B1               	clrf	___flmul@sign
  5980  0FD8  2FF3               	goto	l692
  5981  0FD9                     l2596:
  5982  0FD9  1283               	bcf	3,5	;RP0=0, select bank0
  5983  0FDA  1303               	bcf	3,6	;RP1=0, select bank0
  5984  0FDB  083C               	movf	___flmul@temp,w
  5985  0FDC  00AC               	movwf	??___flmul
  5986  0FDD  082C               	movf	??___flmul,w
  5987  0FDE  00B7               	movwf	___flmul@bexp
  5988  0FDF  30FF               	movlw	255
  5989  0FE0  05B8               	andwf	___flmul@prod,f
  5990  0FE1  30FF               	movlw	255
  5991  0FE2  05B9               	andwf	___flmul@prod+1,f
  5992  0FE3  307F               	movlw	127
  5993  0FE4  05BA               	andwf	___flmul@prod+2,f
  5994  0FE5  3000               	movlw	0
  5995  0FE6  05BB               	andwf	___flmul@prod+3,f
  5996  0FE7                     l2598:
  5997  0FE7  1C37               	btfss	___flmul@bexp,0
  5998  0FE8  2FEA               	goto	u4101
  5999  0FE9  2FEB               	goto	u4100
  6000  0FEA                     u4101:
  6001  0FEA  2FEC               	goto	l2602
  6002  0FEB                     u4100:
  6003  0FEB                     l2600:
  6004  0FEB  17BA               	bsf	___flmul@prod+2,7
  6005  0FEC                     l2602:
  6006  0FEC  0837               	movf	___flmul@bexp,w
  6007  0FED  00AC               	movwf	??___flmul
  6008  0FEE  1003               	clrc
  6009  0FEF  0C2C               	rrf	??___flmul,w
  6010  0FF0  00AD               	movwf	??___flmul+1
  6011  0FF1  082D               	movf	??___flmul+1,w
  6012  0FF2  00BB               	movwf	___flmul@prod+3
  6013  0FF3                     l692:
  6014  0FF3  0831               	movf	___flmul@sign,w
  6015  0FF4  00AC               	movwf	??___flmul
  6016  0FF5  082C               	movf	??___flmul,w
  6017  0FF6  04BB               	iorwf	___flmul@prod+3,f
  6018  0FF7                     l2604:
  6019  0FF7  083B               	movf	___flmul@prod+3,w
  6020  0FF8  00A7               	movwf	?___flmul+3
  6021  0FF9  083A               	movf	___flmul@prod+2,w
  6022  0FFA  00A6               	movwf	?___flmul+2
  6023  0FFB  0839               	movf	___flmul@prod+1,w
  6024  0FFC  00A5               	movwf	?___flmul+1
  6025  0FFD  0838               	movf	___flmul@prod,w
  6026  0FFE  00A4               	movwf	?___flmul
  6027  0FFF                     l680:
  6028  0FFF  0008               	return
  6029  1000                     __end_of___flmul:
  6030                           
  6031                           	psect	text10
  6032  1D91                     __ptext10:	
  6033 ;; *************** function __Umul8_16 *****************
  6034 ;; Defined at:
  6035 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\Umul8_16.c"
  6036 ;; Parameters:    Size  Location     Type
  6037 ;;  multiplier      1    wreg     unsigned char 
  6038 ;;  multiplicand    1    0[COMMON] unsigned char 
  6039 ;; Auto vars:     Size  Location     Type
  6040 ;;  multiplier      1    8[COMMON] unsigned char 
  6041 ;;  word_mpld       2    6[COMMON] unsigned int 
  6042 ;;  product         2    4[COMMON] unsigned int 
  6043 ;; Return value:  Size  Location     Type
  6044 ;;                  2    0[COMMON] unsigned int 
  6045 ;; Registers used:
  6046 ;;		wreg, status,2, status,0
  6047 ;; Tracked objects:
  6048 ;;		On entry : 0/0
  6049 ;;		On exit  : 0/0
  6050 ;;		Unchanged: 0/0
  6051 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6052 ;;      Params:         2       0       0       0       0
  6053 ;;      Locals:         5       0       0       0       0
  6054 ;;      Temps:          2       0       0       0       0
  6055 ;;      Totals:         9       0       0       0       0
  6056 ;;Total ram usage:        9 bytes
  6057 ;; Hardware stack levels used: 1
  6058 ;; This function calls:
  6059 ;;		Nothing
  6060 ;; This function is called by:
  6061 ;;		___flmul
  6062 ;; This function uses a non-reentrant model
  6063 ;;
  6064                           
  6065  1D91                     __Umul8_16:	
  6066                           ;psect for function __Umul8_16
  6067                           
  6068                           
  6069                           ;incstack = 0
  6070                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  6071                           ;__Umul8_16@multiplier stored from wreg
  6072  1D91  00F8               	movwf	__Umul8_16@multiplier
  6073  1D92                     l2130:
  6074  1D92  01F4               	clrf	__Umul8_16@product
  6075  1D93  01F5               	clrf	__Umul8_16@product+1
  6076  1D94                     l2132:
  6077  1D94  0870               	movf	__Umul8_16@multiplicand,w
  6078  1D95  00F2               	movwf	??__Umul8_16
  6079  1D96  01F3               	clrf	??__Umul8_16+1
  6080  1D97  0872               	movf	??__Umul8_16,w
  6081  1D98  00F6               	movwf	__Umul8_16@word_mpld
  6082  1D99  0873               	movf	??__Umul8_16+1,w
  6083  1D9A  00F7               	movwf	__Umul8_16@word_mpld+1
  6084  1D9B                     l2134:
  6085  1D9B  1C78               	btfss	__Umul8_16@multiplier,0
  6086  1D9C  2D9E               	goto	u2931
  6087  1D9D  2D9F               	goto	u2930
  6088  1D9E                     u2931:
  6089  1D9E  2DA5               	goto	l699
  6090  1D9F                     u2930:
  6091  1D9F                     l2136:
  6092  1D9F  0876               	movf	__Umul8_16@word_mpld,w
  6093  1DA0  07F4               	addwf	__Umul8_16@product,f
  6094  1DA1  1803               	skipnc
  6095  1DA2  0AF5               	incf	__Umul8_16@product+1,f
  6096  1DA3  0877               	movf	__Umul8_16@word_mpld+1,w
  6097  1DA4  07F5               	addwf	__Umul8_16@product+1,f
  6098  1DA5                     l699:
  6099  1DA5  3001               	movlw	1
  6100  1DA6                     u2945:
  6101  1DA6  1003               	clrc
  6102  1DA7  0DF6               	rlf	__Umul8_16@word_mpld,f
  6103  1DA8  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  6104  1DA9  3EFF               	addlw	-1
  6105  1DAA  1D03               	skipz
  6106  1DAB  2DA6               	goto	u2945
  6107  1DAC  1003               	clrc
  6108  1DAD  0CF8               	rrf	__Umul8_16@multiplier,f
  6109  1DAE                     l2138:
  6110  1DAE  0878               	movf	__Umul8_16@multiplier,w
  6111  1DAF  1D03               	btfss	3,2
  6112  1DB0  2DB2               	goto	u2951
  6113  1DB1  2DB3               	goto	u2950
  6114  1DB2                     u2951:
  6115  1DB2  2D9B               	goto	l2134
  6116  1DB3                     u2950:
  6117  1DB3                     l2140:
  6118  1DB3  0875               	movf	__Umul8_16@product+1,w
  6119  1DB4  00F1               	movwf	?__Umul8_16+1
  6120  1DB5  0874               	movf	__Umul8_16@product,w
  6121  1DB6  00F0               	movwf	?__Umul8_16
  6122  1DB7                     l701:
  6123  1DB7  0008               	return
  6124  1DB8                     __end_of__Umul8_16:
  6125                           
  6126                           	psect	text11
  6127  0883                     __ptext11:	
  6128 ;; *************** function __tdiv_to_l_ *****************
  6129 ;; Defined at:
  6130 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\ftdivl.c"
  6131 ;; Parameters:    Size  Location     Type
  6132 ;;  f1              4    0[COMMON] float 
  6133 ;;  f2              4    4[COMMON] float 
  6134 ;; Auto vars:     Size  Location     Type
  6135 ;;  quot            4    0[BANK0 ] unsigned long 
  6136 ;;  exp1            1    5[BANK0 ] unsigned char 
  6137 ;;  cntr            1    4[BANK0 ] unsigned char 
  6138 ;; Return value:  Size  Location     Type
  6139 ;;                  4    0[COMMON] unsigned long 
  6140 ;; Registers used:
  6141 ;;		wreg, status,2, status,0
  6142 ;; Tracked objects:
  6143 ;;		On entry : 0/0
  6144 ;;		On exit  : 0/0
  6145 ;;		Unchanged: 0/0
  6146 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6147 ;;      Params:         8       0       0       0       0
  6148 ;;      Locals:         0       6       0       0       0
  6149 ;;      Temps:          4       0       0       0       0
  6150 ;;      Totals:        12       6       0       0       0
  6151 ;;Total ram usage:       18 bytes
  6152 ;; Hardware stack levels used: 1
  6153 ;; This function calls:
  6154 ;;		Nothing
  6155 ;; This function is called by:
  6156 ;;		_sprintf
  6157 ;; This function uses a non-reentrant model
  6158 ;;
  6159                           
  6160  0883                     __tdiv_to_l_:	
  6161                           ;psect for function __tdiv_to_l_
  6162                           
  6163  0883                     l2682:	
  6164                           ;incstack = 0
  6165                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  6166                           
  6167  0883  0870               	movf	__tdiv_to_l_@f1,w
  6168  0884  00F8               	movwf	??__tdiv_to_l_
  6169  0885  0871               	movf	__tdiv_to_l_@f1+1,w
  6170  0886  00F9               	movwf	??__tdiv_to_l_+1
  6171  0887  0872               	movf	__tdiv_to_l_@f1+2,w
  6172  0888  00FA               	movwf	??__tdiv_to_l_+2
  6173  0889  1003               	clrc
  6174  088A  0D79               	rlf	??__tdiv_to_l_+1,w
  6175  088B  0D7A               	rlf	??__tdiv_to_l_+2,w
  6176  088C  00FB               	movwf	??__tdiv_to_l_+3
  6177  088D  087B               	movf	??__tdiv_to_l_+3,w
  6178  088E  1283               	bcf	3,5	;RP0=0, select bank0
  6179  088F  1303               	bcf	3,6	;RP1=0, select bank0
  6180  0890  00A5               	movwf	__tdiv_to_l_@exp1
  6181  0891  0825               	movf	__tdiv_to_l_@exp1,w
  6182  0892  1D03               	btfss	3,2
  6183  0893  2895               	goto	u4391
  6184  0894  2896               	goto	u4390
  6185  0895                     u4391:
  6186  0895  289F               	goto	l2688
  6187  0896                     u4390:
  6188  0896                     l2684:
  6189  0896  3000               	movlw	0
  6190  0897  00F3               	movwf	?__tdiv_to_l_+3
  6191  0898  3000               	movlw	0
  6192  0899  00F2               	movwf	?__tdiv_to_l_+2
  6193  089A  3000               	movlw	0
  6194  089B  00F1               	movwf	?__tdiv_to_l_+1
  6195  089C  3000               	movlw	0
  6196  089D  00F0               	movwf	?__tdiv_to_l_
  6197  089E  293F               	goto	l474
  6198  089F                     l2688:
  6199  089F  0874               	movf	__tdiv_to_l_@f2,w
  6200  08A0  00F8               	movwf	??__tdiv_to_l_
  6201  08A1  0875               	movf	__tdiv_to_l_@f2+1,w
  6202  08A2  00F9               	movwf	??__tdiv_to_l_+1
  6203  08A3  0876               	movf	__tdiv_to_l_@f2+2,w
  6204  08A4  00FA               	movwf	??__tdiv_to_l_+2
  6205  08A5  1003               	clrc
  6206  08A6  0D79               	rlf	??__tdiv_to_l_+1,w
  6207  08A7  0D7A               	rlf	??__tdiv_to_l_+2,w
  6208  08A8  00FB               	movwf	??__tdiv_to_l_+3
  6209  08A9  087B               	movf	??__tdiv_to_l_+3,w
  6210  08AA  00A4               	movwf	__tdiv_to_l_@cntr
  6211  08AB  0824               	movf	__tdiv_to_l_@cntr,w
  6212  08AC  1D03               	btfss	3,2
  6213  08AD  28AF               	goto	u4401
  6214  08AE  28B0               	goto	u4400
  6215  08AF                     u4401:
  6216  08AF  28B1               	goto	l475
  6217  08B0                     u4400:
  6218  08B0  2896               	goto	l2684
  6219  08B1                     l475:
  6220  08B1  17F1               	bsf	__tdiv_to_l_@f1+1,7
  6221  08B2                     l2694:
  6222  08B2  30FF               	movlw	255
  6223  08B3  05F0               	andwf	__tdiv_to_l_@f1,f
  6224  08B4  30FF               	movlw	255
  6225  08B5  05F1               	andwf	__tdiv_to_l_@f1+1,f
  6226  08B6  3000               	movlw	0
  6227  08B7  05F2               	andwf	__tdiv_to_l_@f1+2,f
  6228  08B8                     l2696:
  6229  08B8  17F5               	bsf	__tdiv_to_l_@f2+1,7
  6230  08B9  30FF               	movlw	255
  6231  08BA  05F4               	andwf	__tdiv_to_l_@f2,f
  6232  08BB  30FF               	movlw	255
  6233  08BC  05F5               	andwf	__tdiv_to_l_@f2+1,f
  6234  08BD  3000               	movlw	0
  6235  08BE  05F6               	andwf	__tdiv_to_l_@f2+2,f
  6236  08BF  3000               	movlw	0
  6237  08C0  00A3               	movwf	__tdiv_to_l_@quot+3
  6238  08C1  3000               	movlw	0
  6239  08C2  00A2               	movwf	__tdiv_to_l_@quot+2
  6240  08C3  3000               	movlw	0
  6241  08C4  00A1               	movwf	__tdiv_to_l_@quot+1
  6242  08C5  3000               	movlw	0
  6243  08C6  00A0               	movwf	__tdiv_to_l_@quot
  6244  08C7                     l2698:
  6245  08C7  307F               	movlw	127
  6246  08C8  02A5               	subwf	__tdiv_to_l_@exp1,f
  6247  08C9                     l2700:
  6248  08C9  3098               	movlw	152
  6249  08CA  0724               	addwf	__tdiv_to_l_@cntr,w
  6250  08CB  00F8               	movwf	??__tdiv_to_l_
  6251  08CC  0878               	movf	??__tdiv_to_l_,w
  6252  08CD  02A5               	subwf	__tdiv_to_l_@exp1,f
  6253  08CE  3018               	movlw	24
  6254  08CF  00F8               	movwf	??__tdiv_to_l_
  6255  08D0  0878               	movf	??__tdiv_to_l_,w
  6256  08D1  00A4               	movwf	__tdiv_to_l_@cntr
  6257  08D2                     l2702:
  6258  08D2  3001               	movlw	1
  6259  08D3  00F8               	movwf	??__tdiv_to_l_
  6260  08D4                     u4415:
  6261  08D4  1003               	clrc
  6262  08D5  0DA0               	rlf	__tdiv_to_l_@quot,f
  6263  08D6  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  6264  08D7  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  6265  08D8  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  6266  08D9  0BF8               	decfsz	??__tdiv_to_l_,f
  6267  08DA  28D4               	goto	u4415
  6268  08DB                     l2704:
  6269  08DB  0876               	movf	__tdiv_to_l_@f2+2,w
  6270  08DC  0272               	subwf	__tdiv_to_l_@f1+2,w
  6271  08DD  1D03               	skipz
  6272  08DE  28E5               	goto	u4425
  6273  08DF  0875               	movf	__tdiv_to_l_@f2+1,w
  6274  08E0  0271               	subwf	__tdiv_to_l_@f1+1,w
  6275  08E1  1D03               	skipz
  6276  08E2  28E5               	goto	u4425
  6277  08E3  0874               	movf	__tdiv_to_l_@f2,w
  6278  08E4  0270               	subwf	__tdiv_to_l_@f1,w
  6279  08E5                     u4425:
  6280  08E5  1C03               	skipc
  6281  08E6  28E8               	goto	u4421
  6282  08E7  28E9               	goto	u4420
  6283  08E8                     u4421:
  6284  08E8  28F4               	goto	l2710
  6285  08E9                     u4420:
  6286  08E9                     l2706:
  6287  08E9  0874               	movf	__tdiv_to_l_@f2,w
  6288  08EA  02F0               	subwf	__tdiv_to_l_@f1,f
  6289  08EB  0875               	movf	__tdiv_to_l_@f2+1,w
  6290  08EC  1C03               	skipc
  6291  08ED  0F75               	incfsz	__tdiv_to_l_@f2+1,w
  6292  08EE  02F1               	subwf	__tdiv_to_l_@f1+1,f
  6293  08EF  0876               	movf	__tdiv_to_l_@f2+2,w
  6294  08F0  1C03               	skipc
  6295  08F1  0A76               	incf	__tdiv_to_l_@f2+2,w
  6296  08F2  02F2               	subwf	__tdiv_to_l_@f1+2,f
  6297  08F3                     l2708:
  6298  08F3  1420               	bsf	__tdiv_to_l_@quot,0
  6299  08F4                     l2710:
  6300  08F4  3001               	movlw	1
  6301  08F5                     u4435:
  6302  08F5  1003               	clrc
  6303  08F6  0DF0               	rlf	__tdiv_to_l_@f1,f
  6304  08F7  0DF1               	rlf	__tdiv_to_l_@f1+1,f
  6305  08F8  0DF2               	rlf	__tdiv_to_l_@f1+2,f
  6306  08F9  3EFF               	addlw	-1
  6307  08FA  1D03               	skipz
  6308  08FB  28F5               	goto	u4435
  6309  08FC                     l2712:
  6310  08FC  3001               	movlw	1
  6311  08FD  02A4               	subwf	__tdiv_to_l_@cntr,f
  6312  08FE  1D03               	btfss	3,2
  6313  08FF  2901               	goto	u4441
  6314  0900  2902               	goto	u4440
  6315  0901                     u4441:
  6316  0901  28D2               	goto	l2702
  6317  0902                     u4440:
  6318  0902                     l478:
  6319  0902  1FA5               	btfss	__tdiv_to_l_@exp1,7
  6320  0903  2905               	goto	u4451
  6321  0904  2906               	goto	u4450
  6322  0905                     u4451:
  6323  0905  2920               	goto	l2722
  6324  0906                     u4450:
  6325  0906                     l2714:
  6326  0906  0825               	movf	__tdiv_to_l_@exp1,w
  6327  0907  3A80               	xorlw	128
  6328  0908  3E97               	addlw	151
  6329  0909  1803               	skipnc
  6330  090A  290C               	goto	u4461
  6331  090B  290D               	goto	u4460
  6332  090C                     u4461:
  6333  090C  290E               	goto	l2720
  6334  090D                     u4460:
  6335  090D  2896               	goto	l2684
  6336  090E                     l2720:
  6337  090E  3001               	movlw	1
  6338  090F                     u4475:
  6339  090F  1003               	clrc
  6340  0910  0CA3               	rrf	__tdiv_to_l_@quot+3,f
  6341  0911  0CA2               	rrf	__tdiv_to_l_@quot+2,f
  6342  0912  0CA1               	rrf	__tdiv_to_l_@quot+1,f
  6343  0913  0CA0               	rrf	__tdiv_to_l_@quot,f
  6344  0914  3EFF               	addlw	-1
  6345  0915  1D03               	skipz
  6346  0916  290F               	goto	u4475
  6347  0917  3001               	movlw	1
  6348  0918  00F8               	movwf	??__tdiv_to_l_
  6349  0919  0878               	movf	??__tdiv_to_l_,w
  6350  091A  07A5               	addwf	__tdiv_to_l_@exp1,f
  6351  091B  1D03               	btfss	3,2
  6352  091C  291E               	goto	u4481
  6353  091D  291F               	goto	u4480
  6354  091E                     u4481:
  6355  091E  290E               	goto	l2720
  6356  091F                     u4480:
  6357  091F  2937               	goto	l2730
  6358  0920                     l2722:
  6359  0920  3018               	movlw	24
  6360  0921  0225               	subwf	__tdiv_to_l_@exp1,w
  6361  0922  1C03               	skipc
  6362  0923  2925               	goto	u4491
  6363  0924  2926               	goto	u4490
  6364  0925                     u4491:
  6365  0925  2932               	goto	l485
  6366  0926                     u4490:
  6367  0926  2896               	goto	l2684
  6368  0927                     l2728:
  6369  0927  3001               	movlw	1
  6370  0928  00F8               	movwf	??__tdiv_to_l_
  6371  0929                     u4505:
  6372  0929  1003               	clrc
  6373  092A  0DA0               	rlf	__tdiv_to_l_@quot,f
  6374  092B  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  6375  092C  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  6376  092D  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  6377  092E  0BF8               	decfsz	??__tdiv_to_l_,f
  6378  092F  2929               	goto	u4505
  6379  0930  3001               	movlw	1
  6380  0931  02A5               	subwf	__tdiv_to_l_@exp1,f
  6381  0932                     l485:
  6382  0932  0825               	movf	__tdiv_to_l_@exp1,w
  6383  0933  1D03               	btfss	3,2
  6384  0934  2936               	goto	u4511
  6385  0935  2937               	goto	u4510
  6386  0936                     u4511:
  6387  0936  2927               	goto	l2728
  6388  0937                     u4510:
  6389  0937                     l2730:
  6390  0937  0823               	movf	__tdiv_to_l_@quot+3,w
  6391  0938  00F3               	movwf	?__tdiv_to_l_+3
  6392  0939  0822               	movf	__tdiv_to_l_@quot+2,w
  6393  093A  00F2               	movwf	?__tdiv_to_l_+2
  6394  093B  0821               	movf	__tdiv_to_l_@quot+1,w
  6395  093C  00F1               	movwf	?__tdiv_to_l_+1
  6396  093D  0820               	movf	__tdiv_to_l_@quot,w
  6397  093E  00F0               	movwf	?__tdiv_to_l_
  6398  093F                     l474:
  6399  093F  0008               	return
  6400  0940                     __end_of__tdiv_to_l_:
  6401                           
  6402                           	psect	text12
  6403  00B2                     __ptext12:	
  6404 ;; *************** function __div_to_l_ *****************
  6405 ;; Defined at:
  6406 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\fldivl.c"
  6407 ;; Parameters:    Size  Location     Type
  6408 ;;  f1              4    0[COMMON] unsigned long 
  6409 ;;  f2              4    4[COMMON] unsigned long 
  6410 ;; Auto vars:     Size  Location     Type
  6411 ;;  quot            4    0[BANK0 ] unsigned long 
  6412 ;;  exp1            1    5[BANK0 ] unsigned char 
  6413 ;;  cntr            1    4[BANK0 ] unsigned char 
  6414 ;; Return value:  Size  Location     Type
  6415 ;;                  4    0[COMMON] unsigned long 
  6416 ;; Registers used:
  6417 ;;		wreg, status,2, status,0
  6418 ;; Tracked objects:
  6419 ;;		On entry : 0/0
  6420 ;;		On exit  : 0/0
  6421 ;;		Unchanged: 0/0
  6422 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6423 ;;      Params:         8       0       0       0       0
  6424 ;;      Locals:         0       6       0       0       0
  6425 ;;      Temps:          1       0       0       0       0
  6426 ;;      Totals:         9       6       0       0       0
  6427 ;;Total ram usage:       15 bytes
  6428 ;; Hardware stack levels used: 1
  6429 ;; This function calls:
  6430 ;;		Nothing
  6431 ;; This function is called by:
  6432 ;;		_sprintf
  6433 ;; This function uses a non-reentrant model
  6434 ;;
  6435                           
  6436  00B2                     __div_to_l_:	
  6437                           ;psect for function __div_to_l_
  6438                           
  6439  00B2                     l2734:	
  6440                           ;incstack = 0
  6441                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
  6442                           
  6443  00B2  1003               	clrc
  6444  00B3  0D72               	rlf	__div_to_l_@f1+2,w
  6445  00B4  0D73               	rlf	__div_to_l_@f1+3,w
  6446  00B5  00F8               	movwf	??__div_to_l_
  6447  00B6  0878               	movf	??__div_to_l_,w
  6448  00B7  1283               	bcf	3,5	;RP0=0, select bank0
  6449  00B8  1303               	bcf	3,6	;RP1=0, select bank0
  6450  00B9  00A5               	movwf	__div_to_l_@exp1
  6451  00BA  0825               	movf	__div_to_l_@exp1,w
  6452  00BB  1D03               	btfss	3,2
  6453  00BC  28BE               	goto	u4521
  6454  00BD  28BF               	goto	u4520
  6455  00BE                     u4521:
  6456  00BE  28C8               	goto	l2740
  6457  00BF                     u4520:
  6458  00BF                     l2736:
  6459  00BF  3000               	movlw	0
  6460  00C0  00F3               	movwf	?__div_to_l_+3
  6461  00C1  3000               	movlw	0
  6462  00C2  00F2               	movwf	?__div_to_l_+2
  6463  00C3  3000               	movlw	0
  6464  00C4  00F1               	movwf	?__div_to_l_+1
  6465  00C5  3000               	movlw	0
  6466  00C6  00F0               	movwf	?__div_to_l_
  6467  00C7  296F               	goto	l427
  6468  00C8                     l2740:
  6469  00C8  1003               	clrc
  6470  00C9  0D76               	rlf	__div_to_l_@f2+2,w
  6471  00CA  0D77               	rlf	__div_to_l_@f2+3,w
  6472  00CB  00F8               	movwf	??__div_to_l_
  6473  00CC  0878               	movf	??__div_to_l_,w
  6474  00CD  00A4               	movwf	__div_to_l_@cntr
  6475  00CE  0824               	movf	__div_to_l_@cntr,w
  6476  00CF  1D03               	btfss	3,2
  6477  00D0  28D2               	goto	u4531
  6478  00D1  28D3               	goto	u4530
  6479  00D2                     u4531:
  6480  00D2  28D4               	goto	l428
  6481  00D3                     u4530:
  6482  00D3  28BF               	goto	l2736
  6483  00D4                     l428:
  6484  00D4  17F2               	bsf	__div_to_l_@f1+2,7
  6485  00D5                     l2746:
  6486  00D5  30FF               	movlw	255
  6487  00D6  05F0               	andwf	__div_to_l_@f1,f
  6488  00D7  30FF               	movlw	255
  6489  00D8  05F1               	andwf	__div_to_l_@f1+1,f
  6490  00D9  30FF               	movlw	255
  6491  00DA  05F2               	andwf	__div_to_l_@f1+2,f
  6492  00DB  3000               	movlw	0
  6493  00DC  05F3               	andwf	__div_to_l_@f1+3,f
  6494  00DD                     l2748:
  6495  00DD  17F6               	bsf	__div_to_l_@f2+2,7
  6496  00DE  30FF               	movlw	255
  6497  00DF  05F4               	andwf	__div_to_l_@f2,f
  6498  00E0  30FF               	movlw	255
  6499  00E1  05F5               	andwf	__div_to_l_@f2+1,f
  6500  00E2  30FF               	movlw	255
  6501  00E3  05F6               	andwf	__div_to_l_@f2+2,f
  6502  00E4  3000               	movlw	0
  6503  00E5  05F7               	andwf	__div_to_l_@f2+3,f
  6504  00E6  3000               	movlw	0
  6505  00E7  00A3               	movwf	__div_to_l_@quot+3
  6506  00E8  3000               	movlw	0
  6507  00E9  00A2               	movwf	__div_to_l_@quot+2
  6508  00EA  3000               	movlw	0
  6509  00EB  00A1               	movwf	__div_to_l_@quot+1
  6510  00EC  3000               	movlw	0
  6511  00ED  00A0               	movwf	__div_to_l_@quot
  6512  00EE                     l2750:
  6513  00EE  307F               	movlw	127
  6514  00EF  02A5               	subwf	__div_to_l_@exp1,f
  6515  00F0                     l2752:
  6516  00F0  30A0               	movlw	160
  6517  00F1  0724               	addwf	__div_to_l_@cntr,w
  6518  00F2  00F8               	movwf	??__div_to_l_
  6519  00F3  0878               	movf	??__div_to_l_,w
  6520  00F4  02A5               	subwf	__div_to_l_@exp1,f
  6521  00F5  3020               	movlw	32
  6522  00F6  00F8               	movwf	??__div_to_l_
  6523  00F7  0878               	movf	??__div_to_l_,w
  6524  00F8  00A4               	movwf	__div_to_l_@cntr
  6525  00F9                     l2754:
  6526  00F9  3001               	movlw	1
  6527  00FA  00F8               	movwf	??__div_to_l_
  6528  00FB                     u4545:
  6529  00FB  1003               	clrc
  6530  00FC  0DA0               	rlf	__div_to_l_@quot,f
  6531  00FD  0DA1               	rlf	__div_to_l_@quot+1,f
  6532  00FE  0DA2               	rlf	__div_to_l_@quot+2,f
  6533  00FF  0DA3               	rlf	__div_to_l_@quot+3,f
  6534  0100  0BF8               	decfsz	??__div_to_l_,f
  6535  0101  28FB               	goto	u4545
  6536  0102                     l2756:
  6537  0102  0877               	movf	__div_to_l_@f2+3,w
  6538  0103  0273               	subwf	__div_to_l_@f1+3,w
  6539  0104  1D03               	skipz
  6540  0105  2910               	goto	u4555
  6541  0106  0876               	movf	__div_to_l_@f2+2,w
  6542  0107  0272               	subwf	__div_to_l_@f1+2,w
  6543  0108  1D03               	skipz
  6544  0109  2910               	goto	u4555
  6545  010A  0875               	movf	__div_to_l_@f2+1,w
  6546  010B  0271               	subwf	__div_to_l_@f1+1,w
  6547  010C  1D03               	skipz
  6548  010D  2910               	goto	u4555
  6549  010E  0874               	movf	__div_to_l_@f2,w
  6550  010F  0270               	subwf	__div_to_l_@f1,w
  6551  0110                     u4555:
  6552  0110  1C03               	skipc
  6553  0111  2913               	goto	u4551
  6554  0112  2914               	goto	u4550
  6555  0113                     u4551:
  6556  0113  2923               	goto	l2762
  6557  0114                     u4550:
  6558  0114                     l2758:
  6559  0114  0874               	movf	__div_to_l_@f2,w
  6560  0115  02F0               	subwf	__div_to_l_@f1,f
  6561  0116  0875               	movf	__div_to_l_@f2+1,w
  6562  0117  1C03               	skipc
  6563  0118  0F75               	incfsz	__div_to_l_@f2+1,w
  6564  0119  02F1               	subwf	__div_to_l_@f1+1,f
  6565  011A  0876               	movf	__div_to_l_@f2+2,w
  6566  011B  1C03               	skipc
  6567  011C  0F76               	incfsz	__div_to_l_@f2+2,w
  6568  011D  02F2               	subwf	__div_to_l_@f1+2,f
  6569  011E  0877               	movf	__div_to_l_@f2+3,w
  6570  011F  1C03               	skipc
  6571  0120  0F77               	incfsz	__div_to_l_@f2+3,w
  6572  0121  02F3               	subwf	__div_to_l_@f1+3,f
  6573  0122                     l2760:
  6574  0122  1420               	bsf	__div_to_l_@quot,0
  6575  0123                     l2762:
  6576  0123  3001               	movlw	1
  6577  0124  00F8               	movwf	??__div_to_l_
  6578  0125                     u4565:
  6579  0125  1003               	clrc
  6580  0126  0DF0               	rlf	__div_to_l_@f1,f
  6581  0127  0DF1               	rlf	__div_to_l_@f1+1,f
  6582  0128  0DF2               	rlf	__div_to_l_@f1+2,f
  6583  0129  0DF3               	rlf	__div_to_l_@f1+3,f
  6584  012A  0BF8               	decfsz	??__div_to_l_,f
  6585  012B  2925               	goto	u4565
  6586  012C                     l2764:
  6587  012C  3001               	movlw	1
  6588  012D  02A4               	subwf	__div_to_l_@cntr,f
  6589  012E  1D03               	btfss	3,2
  6590  012F  2931               	goto	u4571
  6591  0130  2932               	goto	u4570
  6592  0131                     u4571:
  6593  0131  28F9               	goto	l2754
  6594  0132                     u4570:
  6595  0132                     l431:
  6596  0132  1FA5               	btfss	__div_to_l_@exp1,7
  6597  0133  2935               	goto	u4581
  6598  0134  2936               	goto	u4580
  6599  0135                     u4581:
  6600  0135  2950               	goto	l2774
  6601  0136                     u4580:
  6602  0136                     l2766:
  6603  0136  0825               	movf	__div_to_l_@exp1,w
  6604  0137  3A80               	xorlw	128
  6605  0138  3E9F               	addlw	159
  6606  0139  1803               	skipnc
  6607  013A  293C               	goto	u4591
  6608  013B  293D               	goto	u4590
  6609  013C                     u4591:
  6610  013C  293E               	goto	l2772
  6611  013D                     u4590:
  6612  013D  28BF               	goto	l2736
  6613  013E                     l2772:
  6614  013E  3001               	movlw	1
  6615  013F                     u4605:
  6616  013F  1003               	clrc
  6617  0140  0CA3               	rrf	__div_to_l_@quot+3,f
  6618  0141  0CA2               	rrf	__div_to_l_@quot+2,f
  6619  0142  0CA1               	rrf	__div_to_l_@quot+1,f
  6620  0143  0CA0               	rrf	__div_to_l_@quot,f
  6621  0144  3EFF               	addlw	-1
  6622  0145  1D03               	skipz
  6623  0146  293F               	goto	u4605
  6624  0147  3001               	movlw	1
  6625  0148  00F8               	movwf	??__div_to_l_
  6626  0149  0878               	movf	??__div_to_l_,w
  6627  014A  07A5               	addwf	__div_to_l_@exp1,f
  6628  014B  1D03               	btfss	3,2
  6629  014C  294E               	goto	u4611
  6630  014D  294F               	goto	u4610
  6631  014E                     u4611:
  6632  014E  293E               	goto	l2772
  6633  014F                     u4610:
  6634  014F  2967               	goto	l2782
  6635  0150                     l2774:
  6636  0150  3020               	movlw	32
  6637  0151  0225               	subwf	__div_to_l_@exp1,w
  6638  0152  1C03               	skipc
  6639  0153  2955               	goto	u4621
  6640  0154  2956               	goto	u4620
  6641  0155                     u4621:
  6642  0155  2962               	goto	l438
  6643  0156                     u4620:
  6644  0156  28BF               	goto	l2736
  6645  0157                     l2780:
  6646  0157  3001               	movlw	1
  6647  0158  00F8               	movwf	??__div_to_l_
  6648  0159                     u4635:
  6649  0159  1003               	clrc
  6650  015A  0DA0               	rlf	__div_to_l_@quot,f
  6651  015B  0DA1               	rlf	__div_to_l_@quot+1,f
  6652  015C  0DA2               	rlf	__div_to_l_@quot+2,f
  6653  015D  0DA3               	rlf	__div_to_l_@quot+3,f
  6654  015E  0BF8               	decfsz	??__div_to_l_,f
  6655  015F  2959               	goto	u4635
  6656  0160  3001               	movlw	1
  6657  0161  02A5               	subwf	__div_to_l_@exp1,f
  6658  0162                     l438:
  6659  0162  0825               	movf	__div_to_l_@exp1,w
  6660  0163  1D03               	btfss	3,2
  6661  0164  2966               	goto	u4641
  6662  0165  2967               	goto	u4640
  6663  0166                     u4641:
  6664  0166  2957               	goto	l2780
  6665  0167                     u4640:
  6666  0167                     l2782:
  6667  0167  0823               	movf	__div_to_l_@quot+3,w
  6668  0168  00F3               	movwf	?__div_to_l_+3
  6669  0169  0822               	movf	__div_to_l_@quot+2,w
  6670  016A  00F2               	movwf	?__div_to_l_+2
  6671  016B  0821               	movf	__div_to_l_@quot+1,w
  6672  016C  00F1               	movwf	?__div_to_l_+1
  6673  016D  0820               	movf	__div_to_l_@quot,w
  6674  016E  00F0               	movwf	?__div_to_l_
  6675  016F                     l427:
  6676  016F  0008               	return
  6677  0170                     __end_of__div_to_l_:
  6678                           
  6679                           	psect	text13
  6680  10D6                     __ptext13:	
  6681 ;; *************** function ___xxtofl *****************
  6682 ;; Defined at:
  6683 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\xxtofl.c"
  6684 ;; Parameters:    Size  Location     Type
  6685 ;;  sign            1    wreg     unsigned char 
  6686 ;;  val             4    0[COMMON] long 
  6687 ;; Auto vars:     Size  Location     Type
  6688 ;;  sign            1    8[COMMON] unsigned char 
  6689 ;;  arg             4   10[COMMON] unsigned long 
  6690 ;;  exp             1    9[COMMON] unsigned char 
  6691 ;; Return value:  Size  Location     Type
  6692 ;;                  4    0[COMMON] unsigned char 
  6693 ;; Registers used:
  6694 ;;		wreg, status,2, status,0
  6695 ;; Tracked objects:
  6696 ;;		On entry : 0/0
  6697 ;;		On exit  : 0/0
  6698 ;;		Unchanged: 0/0
  6699 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6700 ;;      Params:         4       0       0       0       0
  6701 ;;      Locals:         6       0       0       0       0
  6702 ;;      Temps:          4       0       0       0       0
  6703 ;;      Totals:        14       0       0       0       0
  6704 ;;Total ram usage:       14 bytes
  6705 ;; Hardware stack levels used: 1
  6706 ;; This function calls:
  6707 ;;		Nothing
  6708 ;; This function is called by:
  6709 ;;		_main
  6710 ;;		_sprintf
  6711 ;; This function uses a non-reentrant model
  6712 ;;
  6713                           
  6714  10D6                     ___xxtofl:	
  6715                           ;psect for function ___xxtofl
  6716                           
  6717                           
  6718                           ;incstack = 0
  6719                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  6720                           ;___xxtofl@sign stored from wreg
  6721  10D6  00F8               	movwf	___xxtofl@sign
  6722  10D7                     l2926:
  6723  10D7  0878               	movf	___xxtofl@sign,w
  6724  10D8  1903               	btfsc	3,2
  6725  10D9  28DB               	goto	u5031
  6726  10DA  28DC               	goto	u5030
  6727  10DB                     u5031:
  6728  10DB  28F0               	goto	l2932
  6729  10DC                     u5030:
  6730  10DC                     l2928:
  6731  10DC  1FF3               	btfss	___xxtofl@val+3,7
  6732  10DD  28DF               	goto	u5041
  6733  10DE  28E0               	goto	u5040
  6734  10DF                     u5041:
  6735  10DF  28F0               	goto	l2932
  6736  10E0                     u5040:
  6737  10E0                     l2930:
  6738  10E0  0970               	comf	___xxtofl@val,w
  6739  10E1  00FA               	movwf	___xxtofl@arg
  6740  10E2  0971               	comf	___xxtofl@val+1,w
  6741  10E3  00FB               	movwf	___xxtofl@arg+1
  6742  10E4  0972               	comf	___xxtofl@val+2,w
  6743  10E5  00FC               	movwf	___xxtofl@arg+2
  6744  10E6  0973               	comf	___xxtofl@val+3,w
  6745  10E7  00FD               	movwf	___xxtofl@arg+3
  6746  10E8  0AFA               	incf	___xxtofl@arg,f
  6747  10E9  1903               	skipnz
  6748  10EA  0AFB               	incf	___xxtofl@arg+1,f
  6749  10EB  1903               	skipnz
  6750  10EC  0AFC               	incf	___xxtofl@arg+2,f
  6751  10ED  1903               	skipnz
  6752  10EE  0AFD               	incf	___xxtofl@arg+3,f
  6753  10EF  28F8               	goto	l724
  6754  10F0                     l2932:
  6755  10F0  0873               	movf	___xxtofl@val+3,w
  6756  10F1  00FD               	movwf	___xxtofl@arg+3
  6757  10F2  0872               	movf	___xxtofl@val+2,w
  6758  10F3  00FC               	movwf	___xxtofl@arg+2
  6759  10F4  0871               	movf	___xxtofl@val+1,w
  6760  10F5  00FB               	movwf	___xxtofl@arg+1
  6761  10F6  0870               	movf	___xxtofl@val,w
  6762  10F7  00FA               	movwf	___xxtofl@arg
  6763  10F8                     l724:
  6764  10F8  0873               	movf	___xxtofl@val+3,w
  6765  10F9  0472               	iorwf	___xxtofl@val+2,w
  6766  10FA  0471               	iorwf	___xxtofl@val+1,w
  6767  10FB  0470               	iorwf	___xxtofl@val,w
  6768  10FC  1D03               	skipz
  6769  10FD  28FF               	goto	u5051
  6770  10FE  2900               	goto	u5050
  6771  10FF                     u5051:
  6772  10FF  2909               	goto	l2938
  6773  1100                     u5050:
  6774  1100                     l2934:
  6775  1100  3000               	movlw	0
  6776  1101  00F3               	movwf	?___xxtofl+3
  6777  1102  3000               	movlw	0
  6778  1103  00F2               	movwf	?___xxtofl+2
  6779  1104  3000               	movlw	0
  6780  1105  00F1               	movwf	?___xxtofl+1
  6781  1106  3000               	movlw	0
  6782  1107  00F0               	movwf	?___xxtofl
  6783  1108  298F               	goto	l726
  6784  1109                     l2938:
  6785  1109  3096               	movlw	150
  6786  110A  00F4               	movwf	??___xxtofl
  6787  110B  0874               	movf	??___xxtofl,w
  6788  110C  00F9               	movwf	___xxtofl@exp
  6789  110D  291B               	goto	l2942
  6790  110E                     l2940:
  6791  110E  3001               	movlw	1
  6792  110F  00F4               	movwf	??___xxtofl
  6793  1110  0874               	movf	??___xxtofl,w
  6794  1111  07F9               	addwf	___xxtofl@exp,f
  6795  1112  3001               	movlw	1
  6796  1113                     u5065:
  6797  1113  1003               	clrc
  6798  1114  0CFD               	rrf	___xxtofl@arg+3,f
  6799  1115  0CFC               	rrf	___xxtofl@arg+2,f
  6800  1116  0CFB               	rrf	___xxtofl@arg+1,f
  6801  1117  0CFA               	rrf	___xxtofl@arg,f
  6802  1118  3EFF               	addlw	-1
  6803  1119  1D03               	skipz
  6804  111A  2913               	goto	u5065
  6805  111B                     l2942:
  6806  111B  30FE               	movlw	254
  6807  111C  057D               	andwf	___xxtofl@arg+3,w
  6808  111D  1D03               	btfss	3,2
  6809  111E  2920               	goto	u5071
  6810  111F  2921               	goto	u5070
  6811  1120                     u5071:
  6812  1120  290E               	goto	l2940
  6813  1121                     u5070:
  6814  1121  293D               	goto	l730
  6815  1122                     l2944:
  6816  1122  3001               	movlw	1
  6817  1123  00F4               	movwf	??___xxtofl
  6818  1124  0874               	movf	??___xxtofl,w
  6819  1125  07F9               	addwf	___xxtofl@exp,f
  6820  1126                     l2946:
  6821  1126  3001               	movlw	1
  6822  1127  07FA               	addwf	___xxtofl@arg,f
  6823  1128  3000               	movlw	0
  6824  1129  1803               	skipnc
  6825  112A  3001               	movlw	1
  6826  112B  07FB               	addwf	___xxtofl@arg+1,f
  6827  112C  3000               	movlw	0
  6828  112D  1803               	skipnc
  6829  112E  3001               	movlw	1
  6830  112F  07FC               	addwf	___xxtofl@arg+2,f
  6831  1130  3000               	movlw	0
  6832  1131  1803               	skipnc
  6833  1132  3001               	movlw	1
  6834  1133  07FD               	addwf	___xxtofl@arg+3,f
  6835  1134                     l2948:
  6836  1134  3001               	movlw	1
  6837  1135                     u5085:
  6838  1135  1003               	clrc
  6839  1136  0CFD               	rrf	___xxtofl@arg+3,f
  6840  1137  0CFC               	rrf	___xxtofl@arg+2,f
  6841  1138  0CFB               	rrf	___xxtofl@arg+1,f
  6842  1139  0CFA               	rrf	___xxtofl@arg,f
  6843  113A  3EFF               	addlw	-1
  6844  113B  1D03               	skipz
  6845  113C  2935               	goto	u5085
  6846  113D                     l730:
  6847  113D  30FF               	movlw	255
  6848  113E  057D               	andwf	___xxtofl@arg+3,w
  6849  113F  1D03               	btfss	3,2
  6850  1140  2942               	goto	u5091
  6851  1141  2943               	goto	u5090
  6852  1142                     u5091:
  6853  1142  2922               	goto	l2944
  6854  1143                     u5090:
  6855  1143  294F               	goto	l2952
  6856  1144                     l2950:
  6857  1144  3001               	movlw	1
  6858  1145  02F9               	subwf	___xxtofl@exp,f
  6859  1146  3001               	movlw	1
  6860  1147  00F4               	movwf	??___xxtofl
  6861  1148                     u5105:
  6862  1148  1003               	clrc
  6863  1149  0DFA               	rlf	___xxtofl@arg,f
  6864  114A  0DFB               	rlf	___xxtofl@arg+1,f
  6865  114B  0DFC               	rlf	___xxtofl@arg+2,f
  6866  114C  0DFD               	rlf	___xxtofl@arg+3,f
  6867  114D  0BF4               	decfsz	??___xxtofl,f
  6868  114E  2948               	goto	u5105
  6869  114F                     l2952:
  6870  114F  1BFC               	btfsc	___xxtofl@arg+2,7
  6871  1150  2952               	goto	u5111
  6872  1151  2953               	goto	u5110
  6873  1152                     u5111:
  6874  1152  2959               	goto	l737
  6875  1153                     u5110:
  6876  1153                     l2954:
  6877  1153  3002               	movlw	2
  6878  1154  0279               	subwf	___xxtofl@exp,w
  6879  1155  1803               	skipnc
  6880  1156  2958               	goto	u5121
  6881  1157  2959               	goto	u5120
  6882  1158                     u5121:
  6883  1158  2944               	goto	l2950
  6884  1159                     u5120:
  6885  1159                     l737:
  6886  1159  1879               	btfsc	___xxtofl@exp,0
  6887  115A  295C               	goto	u5131
  6888  115B  295D               	goto	u5130
  6889  115C                     u5131:
  6890  115C  2965               	goto	l738
  6891  115D                     u5130:
  6892  115D                     l2956:
  6893  115D  30FF               	movlw	255
  6894  115E  05FA               	andwf	___xxtofl@arg,f
  6895  115F  30FF               	movlw	255
  6896  1160  05FB               	andwf	___xxtofl@arg+1,f
  6897  1161  307F               	movlw	127
  6898  1162  05FC               	andwf	___xxtofl@arg+2,f
  6899  1163  30FF               	movlw	255
  6900  1164  05FD               	andwf	___xxtofl@arg+3,f
  6901  1165                     l738:
  6902  1165  1003               	clrc
  6903  1166  0CF9               	rrf	___xxtofl@exp,f
  6904  1167                     l2958:
  6905  1167  0879               	movf	___xxtofl@exp,w
  6906  1168  00F4               	movwf	??___xxtofl
  6907  1169  01F5               	clrf	??___xxtofl+1
  6908  116A  01F6               	clrf	??___xxtofl+2
  6909  116B  01F7               	clrf	??___xxtofl+3
  6910  116C  3018               	movlw	24
  6911  116D                     u5145:
  6912  116D  1003               	clrc
  6913  116E  0DF4               	rlf	??___xxtofl,f
  6914  116F  0DF5               	rlf	??___xxtofl+1,f
  6915  1170  0DF6               	rlf	??___xxtofl+2,f
  6916  1171  0DF7               	rlf	??___xxtofl+3,f
  6917  1172                     u5140:
  6918  1172  3EFF               	addlw	-1
  6919  1173  1D03               	skipz
  6920  1174  296D               	goto	u5145
  6921  1175  0874               	movf	??___xxtofl,w
  6922  1176  04FA               	iorwf	___xxtofl@arg,f
  6923  1177  0875               	movf	??___xxtofl+1,w
  6924  1178  04FB               	iorwf	___xxtofl@arg+1,f
  6925  1179  0876               	movf	??___xxtofl+2,w
  6926  117A  04FC               	iorwf	___xxtofl@arg+2,f
  6927  117B  0877               	movf	??___xxtofl+3,w
  6928  117C  04FD               	iorwf	___xxtofl@arg+3,f
  6929  117D                     l2960:
  6930  117D  0878               	movf	___xxtofl@sign,w
  6931  117E  1903               	btfsc	3,2
  6932  117F  2981               	goto	u5151
  6933  1180  2982               	goto	u5150
  6934  1181                     u5151:
  6935  1181  2987               	goto	l2966
  6936  1182                     u5150:
  6937  1182                     l2962:
  6938  1182  1FF3               	btfss	___xxtofl@val+3,7
  6939  1183  2985               	goto	u5161
  6940  1184  2986               	goto	u5160
  6941  1185                     u5161:
  6942  1185  2987               	goto	l2966
  6943  1186                     u5160:
  6944  1186                     l2964:
  6945  1186  17FD               	bsf	___xxtofl@arg+3,7
  6946  1187                     l2966:
  6947  1187  087D               	movf	___xxtofl@arg+3,w
  6948  1188  00F3               	movwf	?___xxtofl+3
  6949  1189  087C               	movf	___xxtofl@arg+2,w
  6950  118A  00F2               	movwf	?___xxtofl+2
  6951  118B  087B               	movf	___xxtofl@arg+1,w
  6952  118C  00F1               	movwf	?___xxtofl+1
  6953  118D  087A               	movf	___xxtofl@arg,w
  6954  118E  00F0               	movwf	?___xxtofl
  6955  118F                     l726:
  6956  118F  0008               	return
  6957  1190                     __end_of___xxtofl:
  6958                           
  6959                           	psect	text14
  6960  1D6C                     __ptext14:	
  6961 ;; *************** function ___wmul *****************
  6962 ;; Defined at:
  6963 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\Umul16.c"
  6964 ;; Parameters:    Size  Location     Type
  6965 ;;  multiplier      2    0[COMMON] unsigned int 
  6966 ;;  multiplicand    2    2[COMMON] unsigned int 
  6967 ;; Auto vars:     Size  Location     Type
  6968 ;;  product         2    4[COMMON] unsigned int 
  6969 ;; Return value:  Size  Location     Type
  6970 ;;                  2    0[COMMON] unsigned int 
  6971 ;; Registers used:
  6972 ;;		wreg, status,2, status,0
  6973 ;; Tracked objects:
  6974 ;;		On entry : 0/0
  6975 ;;		On exit  : 0/0
  6976 ;;		Unchanged: 0/0
  6977 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6978 ;;      Params:         4       0       0       0       0
  6979 ;;      Locals:         2       0       0       0       0
  6980 ;;      Temps:          0       0       0       0       0
  6981 ;;      Totals:         6       0       0       0       0
  6982 ;;Total ram usage:        6 bytes
  6983 ;; Hardware stack levels used: 1
  6984 ;; This function calls:
  6985 ;;		Nothing
  6986 ;; This function is called by:
  6987 ;;		_sprintf
  6988 ;; This function uses a non-reentrant model
  6989 ;;
  6990                           
  6991  1D6C                     ___wmul:	
  6992                           ;psect for function ___wmul
  6993                           
  6994  1D6C                     l2786:	
  6995                           ;incstack = 0
  6996                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  6997                           
  6998  1D6C  01F4               	clrf	___wmul@product
  6999  1D6D  01F5               	clrf	___wmul@product+1
  7000  1D6E                     l2788:
  7001  1D6E  1C70               	btfss	___wmul@multiplier,0
  7002  1D6F  2D71               	goto	u4651
  7003  1D70  2D72               	goto	u4650
  7004  1D71                     u4651:
  7005  1D71  2D78               	goto	l257
  7006  1D72                     u4650:
  7007  1D72                     l2790:
  7008  1D72  0872               	movf	___wmul@multiplicand,w
  7009  1D73  07F4               	addwf	___wmul@product,f
  7010  1D74  1803               	skipnc
  7011  1D75  0AF5               	incf	___wmul@product+1,f
  7012  1D76  0873               	movf	___wmul@multiplicand+1,w
  7013  1D77  07F5               	addwf	___wmul@product+1,f
  7014  1D78                     l257:
  7015  1D78  3001               	movlw	1
  7016  1D79                     u4665:
  7017  1D79  1003               	clrc
  7018  1D7A  0DF2               	rlf	___wmul@multiplicand,f
  7019  1D7B  0DF3               	rlf	___wmul@multiplicand+1,f
  7020  1D7C  3EFF               	addlw	-1
  7021  1D7D  1D03               	skipz
  7022  1D7E  2D79               	goto	u4665
  7023  1D7F                     l2792:
  7024  1D7F  3001               	movlw	1
  7025  1D80                     u4675:
  7026  1D80  1003               	clrc
  7027  1D81  0CF1               	rrf	___wmul@multiplier+1,f
  7028  1D82  0CF0               	rrf	___wmul@multiplier,f
  7029  1D83  3EFF               	addlw	-1
  7030  1D84  1D03               	skipz
  7031  1D85  2D80               	goto	u4675
  7032  1D86                     l2794:
  7033  1D86  0870               	movf	___wmul@multiplier,w
  7034  1D87  0471               	iorwf	___wmul@multiplier+1,w
  7035  1D88  1D03               	btfss	3,2
  7036  1D89  2D8B               	goto	u4681
  7037  1D8A  2D8C               	goto	u4680
  7038  1D8B                     u4681:
  7039  1D8B  2D6E               	goto	l2788
  7040  1D8C                     u4680:
  7041  1D8C                     l2796:
  7042  1D8C  0875               	movf	___wmul@product+1,w
  7043  1D8D  00F1               	movwf	?___wmul+1
  7044  1D8E  0874               	movf	___wmul@product,w
  7045  1D8F  00F0               	movwf	?___wmul
  7046  1D90                     l259:
  7047  1D90  0008               	return
  7048  1D91                     __end_of___wmul:
  7049                           
  7050                           	psect	text15
  7051  1E84                     __ptext15:	
  7052 ;; *************** function ___llmod *****************
  7053 ;; Defined at:
  7054 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\llmod.c"
  7055 ;; Parameters:    Size  Location     Type
  7056 ;;  divisor         4    0[COMMON] unsigned long 
  7057 ;;  dividend        4    4[COMMON] unsigned long 
  7058 ;; Auto vars:     Size  Location     Type
  7059 ;;  counter         1    9[COMMON] unsigned char 
  7060 ;; Return value:  Size  Location     Type
  7061 ;;                  4    0[COMMON] unsigned long 
  7062 ;; Registers used:
  7063 ;;		wreg, status,2, status,0
  7064 ;; Tracked objects:
  7065 ;;		On entry : 0/0
  7066 ;;		On exit  : 0/0
  7067 ;;		Unchanged: 0/0
  7068 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7069 ;;      Params:         8       0       0       0       0
  7070 ;;      Locals:         1       0       0       0       0
  7071 ;;      Temps:          1       0       0       0       0
  7072 ;;      Totals:        10       0       0       0       0
  7073 ;;Total ram usage:       10 bytes
  7074 ;; Hardware stack levels used: 1
  7075 ;; This function calls:
  7076 ;;		Nothing
  7077 ;; This function is called by:
  7078 ;;		_sprintf
  7079 ;; This function uses a non-reentrant model
  7080 ;;
  7081                           
  7082  1E84                     ___llmod:	
  7083                           ;psect for function ___llmod
  7084                           
  7085  1E84                     l2900:	
  7086                           ;incstack = 0
  7087                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  7088                           
  7089  1E84  0873               	movf	___llmod@divisor+3,w
  7090  1E85  0472               	iorwf	___llmod@divisor+2,w
  7091  1E86  0471               	iorwf	___llmod@divisor+1,w
  7092  1E87  0470               	iorwf	___llmod@divisor,w
  7093  1E88  1903               	skipnz
  7094  1E89  2E8B               	goto	u4971
  7095  1E8A  2E8C               	goto	u4970
  7096  1E8B                     u4971:
  7097  1E8B  2ECF               	goto	l2916
  7098  1E8C                     u4970:
  7099  1E8C                     l2902:
  7100  1E8C  01F9               	clrf	___llmod@counter
  7101  1E8D  0AF9               	incf	___llmod@counter,f
  7102  1E8E  2E9C               	goto	l2906
  7103  1E8F                     l2904:
  7104  1E8F  3001               	movlw	1
  7105  1E90  00F8               	movwf	??___llmod
  7106  1E91                     u4985:
  7107  1E91  1003               	clrc
  7108  1E92  0DF0               	rlf	___llmod@divisor,f
  7109  1E93  0DF1               	rlf	___llmod@divisor+1,f
  7110  1E94  0DF2               	rlf	___llmod@divisor+2,f
  7111  1E95  0DF3               	rlf	___llmod@divisor+3,f
  7112  1E96  0BF8               	decfsz	??___llmod,f
  7113  1E97  2E91               	goto	u4985
  7114  1E98  3001               	movlw	1
  7115  1E99  00F8               	movwf	??___llmod
  7116  1E9A  0878               	movf	??___llmod,w
  7117  1E9B  07F9               	addwf	___llmod@counter,f
  7118  1E9C                     l2906:
  7119  1E9C  1FF3               	btfss	___llmod@divisor+3,7
  7120  1E9D  2E9F               	goto	u4991
  7121  1E9E  2EA0               	goto	u4990
  7122  1E9F                     u4991:
  7123  1E9F  2E8F               	goto	l2904
  7124  1EA0                     u4990:
  7125  1EA0                     l2908:
  7126  1EA0  0873               	movf	___llmod@divisor+3,w
  7127  1EA1  0277               	subwf	___llmod@dividend+3,w
  7128  1EA2  1D03               	skipz
  7129  1EA3  2EAE               	goto	u5005
  7130  1EA4  0872               	movf	___llmod@divisor+2,w
  7131  1EA5  0276               	subwf	___llmod@dividend+2,w
  7132  1EA6  1D03               	skipz
  7133  1EA7  2EAE               	goto	u5005
  7134  1EA8  0871               	movf	___llmod@divisor+1,w
  7135  1EA9  0275               	subwf	___llmod@dividend+1,w
  7136  1EAA  1D03               	skipz
  7137  1EAB  2EAE               	goto	u5005
  7138  1EAC  0870               	movf	___llmod@divisor,w
  7139  1EAD  0274               	subwf	___llmod@dividend,w
  7140  1EAE                     u5005:
  7141  1EAE  1C03               	skipc
  7142  1EAF  2EB1               	goto	u5001
  7143  1EB0  2EB2               	goto	u5000
  7144  1EB1                     u5001:
  7145  1EB1  2EC0               	goto	l2912
  7146  1EB2                     u5000:
  7147  1EB2                     l2910:
  7148  1EB2  0870               	movf	___llmod@divisor,w
  7149  1EB3  02F4               	subwf	___llmod@dividend,f
  7150  1EB4  0871               	movf	___llmod@divisor+1,w
  7151  1EB5  1C03               	skipc
  7152  1EB6  0F71               	incfsz	___llmod@divisor+1,w
  7153  1EB7  02F5               	subwf	___llmod@dividend+1,f
  7154  1EB8  0872               	movf	___llmod@divisor+2,w
  7155  1EB9  1C03               	skipc
  7156  1EBA  0F72               	incfsz	___llmod@divisor+2,w
  7157  1EBB  02F6               	subwf	___llmod@dividend+2,f
  7158  1EBC  0873               	movf	___llmod@divisor+3,w
  7159  1EBD  1C03               	skipc
  7160  1EBE  0F73               	incfsz	___llmod@divisor+3,w
  7161  1EBF  02F7               	subwf	___llmod@dividend+3,f
  7162  1EC0                     l2912:
  7163  1EC0  3001               	movlw	1
  7164  1EC1                     u5015:
  7165  1EC1  1003               	clrc
  7166  1EC2  0CF3               	rrf	___llmod@divisor+3,f
  7167  1EC3  0CF2               	rrf	___llmod@divisor+2,f
  7168  1EC4  0CF1               	rrf	___llmod@divisor+1,f
  7169  1EC5  0CF0               	rrf	___llmod@divisor,f
  7170  1EC6  3EFF               	addlw	-1
  7171  1EC7  1D03               	skipz
  7172  1EC8  2EC1               	goto	u5015
  7173  1EC9                     l2914:
  7174  1EC9  3001               	movlw	1
  7175  1ECA  02F9               	subwf	___llmod@counter,f
  7176  1ECB  1D03               	btfss	3,2
  7177  1ECC  2ECE               	goto	u5021
  7178  1ECD  2ECF               	goto	u5020
  7179  1ECE                     u5021:
  7180  1ECE  2EA0               	goto	l2908
  7181  1ECF                     u5020:
  7182  1ECF                     l2916:
  7183  1ECF  0877               	movf	___llmod@dividend+3,w
  7184  1ED0  00F3               	movwf	?___llmod+3
  7185  1ED1  0876               	movf	___llmod@dividend+2,w
  7186  1ED2  00F2               	movwf	?___llmod+2
  7187  1ED3  0875               	movf	___llmod@dividend+1,w
  7188  1ED4  00F1               	movwf	?___llmod+1
  7189  1ED5  0874               	movf	___llmod@dividend,w
  7190  1ED6  00F0               	movwf	?___llmod
  7191  1ED7                     l513:
  7192  1ED7  0008               	return
  7193  1ED8                     __end_of___llmod:
  7194                           
  7195                           	psect	text16
  7196  1F31                     __ptext16:	
  7197 ;; *************** function ___lldiv *****************
  7198 ;; Defined at:
  7199 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\__lldiv.c"
  7200 ;; Parameters:    Size  Location     Type
  7201 ;;  divisor         4    0[COMMON] unsigned long 
  7202 ;;  dividend        4    4[COMMON] unsigned long 
  7203 ;; Auto vars:     Size  Location     Type
  7204 ;;  quotient        4    9[COMMON] unsigned long 
  7205 ;;  counter         1   13[COMMON] unsigned char 
  7206 ;; Return value:  Size  Location     Type
  7207 ;;                  4    0[COMMON] unsigned long 
  7208 ;; Registers used:
  7209 ;;		wreg, status,2, status,0
  7210 ;; Tracked objects:
  7211 ;;		On entry : 0/0
  7212 ;;		On exit  : 0/0
  7213 ;;		Unchanged: 0/0
  7214 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7215 ;;      Params:         8       0       0       0       0
  7216 ;;      Locals:         5       0       0       0       0
  7217 ;;      Temps:          1       0       0       0       0
  7218 ;;      Totals:        14       0       0       0       0
  7219 ;;Total ram usage:       14 bytes
  7220 ;; Hardware stack levels used: 1
  7221 ;; This function calls:
  7222 ;;		Nothing
  7223 ;; This function is called by:
  7224 ;;		_sprintf
  7225 ;; This function uses a non-reentrant model
  7226 ;;
  7227                           
  7228  1F31                     ___lldiv:	
  7229                           ;psect for function ___lldiv
  7230                           
  7231  1F31                     l2800:	
  7232                           ;incstack = 0
  7233                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  7234                           
  7235  1F31  3000               	movlw	0
  7236  1F32  00FC               	movwf	___lldiv@quotient+3
  7237  1F33  3000               	movlw	0
  7238  1F34  00FB               	movwf	___lldiv@quotient+2
  7239  1F35  3000               	movlw	0
  7240  1F36  00FA               	movwf	___lldiv@quotient+1
  7241  1F37  3000               	movlw	0
  7242  1F38  00F9               	movwf	___lldiv@quotient
  7243  1F39  0873               	movf	___lldiv@divisor+3,w
  7244  1F3A  0472               	iorwf	___lldiv@divisor+2,w
  7245  1F3B  0471               	iorwf	___lldiv@divisor+1,w
  7246  1F3C  0470               	iorwf	___lldiv@divisor,w
  7247  1F3D  1903               	skipnz
  7248  1F3E  2F40               	goto	u4691
  7249  1F3F  2F41               	goto	u4690
  7250  1F40                     u4691:
  7251  1F40  2F8E               	goto	l2820
  7252  1F41                     u4690:
  7253  1F41                     l2802:
  7254  1F41  01FD               	clrf	___lldiv@counter
  7255  1F42  0AFD               	incf	___lldiv@counter,f
  7256  1F43  2F51               	goto	l2806
  7257  1F44                     l2804:
  7258  1F44  3001               	movlw	1
  7259  1F45  00F8               	movwf	??___lldiv
  7260  1F46                     u4705:
  7261  1F46  1003               	clrc
  7262  1F47  0DF0               	rlf	___lldiv@divisor,f
  7263  1F48  0DF1               	rlf	___lldiv@divisor+1,f
  7264  1F49  0DF2               	rlf	___lldiv@divisor+2,f
  7265  1F4A  0DF3               	rlf	___lldiv@divisor+3,f
  7266  1F4B  0BF8               	decfsz	??___lldiv,f
  7267  1F4C  2F46               	goto	u4705
  7268  1F4D  3001               	movlw	1
  7269  1F4E  00F8               	movwf	??___lldiv
  7270  1F4F  0878               	movf	??___lldiv,w
  7271  1F50  07FD               	addwf	___lldiv@counter,f
  7272  1F51                     l2806:
  7273  1F51  1FF3               	btfss	___lldiv@divisor+3,7
  7274  1F52  2F54               	goto	u4711
  7275  1F53  2F55               	goto	u4710
  7276  1F54                     u4711:
  7277  1F54  2F44               	goto	l2804
  7278  1F55                     u4710:
  7279  1F55                     l2808:
  7280  1F55  3001               	movlw	1
  7281  1F56  00F8               	movwf	??___lldiv
  7282  1F57                     u4725:
  7283  1F57  1003               	clrc
  7284  1F58  0DF9               	rlf	___lldiv@quotient,f
  7285  1F59  0DFA               	rlf	___lldiv@quotient+1,f
  7286  1F5A  0DFB               	rlf	___lldiv@quotient+2,f
  7287  1F5B  0DFC               	rlf	___lldiv@quotient+3,f
  7288  1F5C  0BF8               	decfsz	??___lldiv,f
  7289  1F5D  2F57               	goto	u4725
  7290  1F5E                     l2810:
  7291  1F5E  0873               	movf	___lldiv@divisor+3,w
  7292  1F5F  0277               	subwf	___lldiv@dividend+3,w
  7293  1F60  1D03               	skipz
  7294  1F61  2F6C               	goto	u4735
  7295  1F62  0872               	movf	___lldiv@divisor+2,w
  7296  1F63  0276               	subwf	___lldiv@dividend+2,w
  7297  1F64  1D03               	skipz
  7298  1F65  2F6C               	goto	u4735
  7299  1F66  0871               	movf	___lldiv@divisor+1,w
  7300  1F67  0275               	subwf	___lldiv@dividend+1,w
  7301  1F68  1D03               	skipz
  7302  1F69  2F6C               	goto	u4735
  7303  1F6A  0870               	movf	___lldiv@divisor,w
  7304  1F6B  0274               	subwf	___lldiv@dividend,w
  7305  1F6C                     u4735:
  7306  1F6C  1C03               	skipc
  7307  1F6D  2F6F               	goto	u4731
  7308  1F6E  2F70               	goto	u4730
  7309  1F6F                     u4731:
  7310  1F6F  2F7F               	goto	l2816
  7311  1F70                     u4730:
  7312  1F70                     l2812:
  7313  1F70  0870               	movf	___lldiv@divisor,w
  7314  1F71  02F4               	subwf	___lldiv@dividend,f
  7315  1F72  0871               	movf	___lldiv@divisor+1,w
  7316  1F73  1C03               	skipc
  7317  1F74  0F71               	incfsz	___lldiv@divisor+1,w
  7318  1F75  02F5               	subwf	___lldiv@dividend+1,f
  7319  1F76  0872               	movf	___lldiv@divisor+2,w
  7320  1F77  1C03               	skipc
  7321  1F78  0F72               	incfsz	___lldiv@divisor+2,w
  7322  1F79  02F6               	subwf	___lldiv@dividend+2,f
  7323  1F7A  0873               	movf	___lldiv@divisor+3,w
  7324  1F7B  1C03               	skipc
  7325  1F7C  0F73               	incfsz	___lldiv@divisor+3,w
  7326  1F7D  02F7               	subwf	___lldiv@dividend+3,f
  7327  1F7E                     l2814:
  7328  1F7E  1479               	bsf	___lldiv@quotient,0
  7329  1F7F                     l2816:
  7330  1F7F  3001               	movlw	1
  7331  1F80                     u4745:
  7332  1F80  1003               	clrc
  7333  1F81  0CF3               	rrf	___lldiv@divisor+3,f
  7334  1F82  0CF2               	rrf	___lldiv@divisor+2,f
  7335  1F83  0CF1               	rrf	___lldiv@divisor+1,f
  7336  1F84  0CF0               	rrf	___lldiv@divisor,f
  7337  1F85  3EFF               	addlw	-1
  7338  1F86  1D03               	skipz
  7339  1F87  2F80               	goto	u4745
  7340  1F88                     l2818:
  7341  1F88  3001               	movlw	1
  7342  1F89  02FD               	subwf	___lldiv@counter,f
  7343  1F8A  1D03               	btfss	3,2
  7344  1F8B  2F8D               	goto	u4751
  7345  1F8C  2F8E               	goto	u4750
  7346  1F8D                     u4751:
  7347  1F8D  2F55               	goto	l2808
  7348  1F8E                     u4750:
  7349  1F8E                     l2820:
  7350  1F8E  087C               	movf	___lldiv@quotient+3,w
  7351  1F8F  00F3               	movwf	?___lldiv+3
  7352  1F90  087B               	movf	___lldiv@quotient+2,w
  7353  1F91  00F2               	movwf	?___lldiv+2
  7354  1F92  087A               	movf	___lldiv@quotient+1,w
  7355  1F93  00F1               	movwf	?___lldiv+1
  7356  1F94  0879               	movf	___lldiv@quotient,w
  7357  1F95  00F0               	movwf	?___lldiv
  7358  1F96                     l293:
  7359  1F96  0008               	return
  7360  1F97                     __end_of___lldiv:
  7361                           
  7362                           	psect	text17
  7363  0807                     __ptext17:	
  7364 ;; *************** function ___fltol *****************
  7365 ;; Defined at:
  7366 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\fltol.c"
  7367 ;; Parameters:    Size  Location     Type
  7368 ;;  f1              4   49[BANK0 ] unsigned long 
  7369 ;; Auto vars:     Size  Location     Type
  7370 ;;  exp1            1   59[BANK0 ] unsigned char 
  7371 ;;  sign1           1   58[BANK0 ] unsigned char 
  7372 ;; Return value:  Size  Location     Type
  7373 ;;                  4   49[BANK0 ] long 
  7374 ;; Registers used:
  7375 ;;		wreg, status,2, status,0
  7376 ;; Tracked objects:
  7377 ;;		On entry : 0/0
  7378 ;;		On exit  : 0/0
  7379 ;;		Unchanged: 0/0
  7380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7381 ;;      Params:         0       4       0       0       0
  7382 ;;      Locals:         0       2       0       0       0
  7383 ;;      Temps:          0       5       0       0       0
  7384 ;;      Totals:         0      11       0       0       0
  7385 ;;Total ram usage:       11 bytes
  7386 ;; Hardware stack levels used: 1
  7387 ;; This function calls:
  7388 ;;		Nothing
  7389 ;; This function is called by:
  7390 ;;		_sprintf
  7391 ;; This function uses a non-reentrant model
  7392 ;;
  7393                           
  7394  0807                     ___fltol:	
  7395                           ;psect for function ___fltol
  7396                           
  7397  0807                     l2864:	
  7398                           ;incstack = 0
  7399                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  7400                           
  7401  0807  1003               	clrc
  7402  0808  1283               	bcf	3,5	;RP0=0, select bank0
  7403  0809  1303               	bcf	3,6	;RP1=0, select bank0
  7404  080A  0D53               	rlf	___fltol@f1+2,w
  7405  080B  0D54               	rlf	___fltol@f1+3,w
  7406  080C  00D5               	movwf	??___fltol
  7407  080D  0855               	movf	??___fltol,w
  7408  080E  00DB               	movwf	___fltol@exp1
  7409  080F  085B               	movf	___fltol@exp1,w
  7410  0810  1D03               	btfss	3,2
  7411  0811  2813               	goto	u4871
  7412  0812  2814               	goto	u4870
  7413  0813                     u4871:
  7414  0813  281D               	goto	l2870
  7415  0814                     u4870:
  7416  0814                     l2866:
  7417  0814  3000               	movlw	0
  7418  0815  00D4               	movwf	?___fltol+3
  7419  0816  3000               	movlw	0
  7420  0817  00D3               	movwf	?___fltol+2
  7421  0818  3000               	movlw	0
  7422  0819  00D2               	movwf	?___fltol+1
  7423  081A  3000               	movlw	0
  7424  081B  00D1               	movwf	?___fltol
  7425  081C  2882               	goto	l460
  7426  081D                     l2870:
  7427  081D  0851               	movf	___fltol@f1,w
  7428  081E  00D5               	movwf	??___fltol
  7429  081F  0852               	movf	___fltol@f1+1,w
  7430  0820  00D6               	movwf	??___fltol+1
  7431  0821  0853               	movf	___fltol@f1+2,w
  7432  0822  00D7               	movwf	??___fltol+2
  7433  0823  0854               	movf	___fltol@f1+3,w
  7434  0824  00D8               	movwf	??___fltol+3
  7435  0825  301F               	movlw	31
  7436  0826                     u4885:
  7437  0826  1003               	clrc
  7438  0827  0CD8               	rrf	??___fltol+3,f
  7439  0828  0CD7               	rrf	??___fltol+2,f
  7440  0829  0CD6               	rrf	??___fltol+1,f
  7441  082A  0CD5               	rrf	??___fltol,f
  7442  082B                     u4880:
  7443  082B  3EFF               	addlw	-1
  7444  082C  1D03               	skipz
  7445  082D  2826               	goto	u4885
  7446  082E  0855               	movf	??___fltol,w
  7447  082F  00D9               	movwf	??___fltol+4
  7448  0830  0859               	movf	??___fltol+4,w
  7449  0831  00DA               	movwf	___fltol@sign1
  7450  0832                     l2872:
  7451  0832  17D3               	bsf	___fltol@f1+2,7
  7452  0833                     l2874:
  7453  0833  30FF               	movlw	255
  7454  0834  05D1               	andwf	___fltol@f1,f
  7455  0835  30FF               	movlw	255
  7456  0836  05D2               	andwf	___fltol@f1+1,f
  7457  0837  30FF               	movlw	255
  7458  0838  05D3               	andwf	___fltol@f1+2,f
  7459  0839  3000               	movlw	0
  7460  083A  05D4               	andwf	___fltol@f1+3,f
  7461  083B                     l2876:
  7462  083B  3096               	movlw	150
  7463  083C  02DB               	subwf	___fltol@exp1,f
  7464  083D                     l2878:
  7465  083D  1FDB               	btfss	___fltol@exp1,7
  7466  083E  2840               	goto	u4891
  7467  083F  2841               	goto	u4890
  7468  0840                     u4891:
  7469  0840  285B               	goto	l2888
  7470  0841                     u4890:
  7471  0841                     l2880:
  7472  0841  085B               	movf	___fltol@exp1,w
  7473  0842  3A80               	xorlw	128
  7474  0843  3E97               	addlw	151
  7475  0844  1803               	skipnc
  7476  0845  2847               	goto	u4901
  7477  0846  2848               	goto	u4900
  7478  0847                     u4901:
  7479  0847  2849               	goto	l2886
  7480  0848                     u4900:
  7481  0848  2814               	goto	l2866
  7482  0849                     l2886:
  7483  0849  3001               	movlw	1
  7484  084A                     u4915:
  7485  084A  1003               	clrc
  7486  084B  0CD4               	rrf	___fltol@f1+3,f
  7487  084C  0CD3               	rrf	___fltol@f1+2,f
  7488  084D  0CD2               	rrf	___fltol@f1+1,f
  7489  084E  0CD1               	rrf	___fltol@f1,f
  7490  084F  3EFF               	addlw	-1
  7491  0850  1D03               	skipz
  7492  0851  284A               	goto	u4915
  7493  0852  3001               	movlw	1
  7494  0853  00D5               	movwf	??___fltol
  7495  0854  0855               	movf	??___fltol,w
  7496  0855  07DB               	addwf	___fltol@exp1,f
  7497  0856  1D03               	btfss	3,2
  7498  0857  2859               	goto	u4921
  7499  0858  285A               	goto	u4920
  7500  0859                     u4921:
  7501  0859  2849               	goto	l2886
  7502  085A                     u4920:
  7503  085A  2872               	goto	l2896
  7504  085B                     l2888:
  7505  085B  3020               	movlw	32
  7506  085C  025B               	subwf	___fltol@exp1,w
  7507  085D  1C03               	skipc
  7508  085E  2860               	goto	u4931
  7509  085F  2861               	goto	u4930
  7510  0860                     u4931:
  7511  0860  286D               	goto	l467
  7512  0861                     u4930:
  7513  0861  2814               	goto	l2866
  7514  0862                     l2894:
  7515  0862  3001               	movlw	1
  7516  0863  00D5               	movwf	??___fltol
  7517  0864                     u4945:
  7518  0864  1003               	clrc
  7519  0865  0DD1               	rlf	___fltol@f1,f
  7520  0866  0DD2               	rlf	___fltol@f1+1,f
  7521  0867  0DD3               	rlf	___fltol@f1+2,f
  7522  0868  0DD4               	rlf	___fltol@f1+3,f
  7523  0869  0BD5               	decfsz	??___fltol,f
  7524  086A  2864               	goto	u4945
  7525  086B  3001               	movlw	1
  7526  086C  02DB               	subwf	___fltol@exp1,f
  7527  086D                     l467:
  7528  086D  085B               	movf	___fltol@exp1,w
  7529  086E  1D03               	btfss	3,2
  7530  086F  2871               	goto	u4951
  7531  0870  2872               	goto	u4950
  7532  0871                     u4951:
  7533  0871  2862               	goto	l2894
  7534  0872                     u4950:
  7535  0872                     l2896:
  7536  0872  085A               	movf	___fltol@sign1,w
  7537  0873  1903               	btfsc	3,2
  7538  0874  2876               	goto	u4961
  7539  0875  2877               	goto	u4960
  7540  0876                     u4961:
  7541  0876  2882               	goto	l470
  7542  0877                     u4960:
  7543  0877                     l2898:
  7544  0877  09D1               	comf	___fltol@f1,f
  7545  0878  09D2               	comf	___fltol@f1+1,f
  7546  0879  09D3               	comf	___fltol@f1+2,f
  7547  087A  09D4               	comf	___fltol@f1+3,f
  7548  087B  0AD1               	incf	___fltol@f1,f
  7549  087C  1903               	skipnz
  7550  087D  0AD2               	incf	___fltol@f1+1,f
  7551  087E  1903               	skipnz
  7552  087F  0AD3               	incf	___fltol@f1+2,f
  7553  0880  1903               	skipnz
  7554  0881  0AD4               	incf	___fltol@f1+3,f
  7555  0882                     l470:
  7556  0882                     l460:
  7557  0882  0008               	return
  7558  0883                     __end_of___fltol:
  7559                           
  7560                           	psect	text18
  7561  1D48                     __ptext18:	
  7562 ;; *************** function ___flsub *****************
  7563 ;; Defined at:
  7564 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\sprcadd.c"
  7565 ;; Parameters:    Size  Location     Type
  7566 ;;  a               4   70[BANK0 ] long 
  7567 ;;  b               4   74[BANK0 ] long 
  7568 ;; Auto vars:     Size  Location     Type
  7569 ;;		None
  7570 ;; Return value:  Size  Location     Type
  7571 ;;                  4   70[BANK0 ] long 
  7572 ;; Registers used:
  7573 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7574 ;; Tracked objects:
  7575 ;;		On entry : 0/0
  7576 ;;		On exit  : 0/0
  7577 ;;		Unchanged: 0/0
  7578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7579 ;;      Params:         0       8       0       0       0
  7580 ;;      Locals:         0       0       0       0       0
  7581 ;;      Temps:          0       0       0       0       0
  7582 ;;      Totals:         0       8       0       0       0
  7583 ;;Total ram usage:        8 bytes
  7584 ;; Hardware stack levels used: 1
  7585 ;; Hardware stack levels required when called: 1
  7586 ;; This function calls:
  7587 ;;		___fladd
  7588 ;; This function is called by:
  7589 ;;		_sprintf
  7590 ;; This function uses a non-reentrant model
  7591 ;;
  7592                           
  7593  1D48                     ___flsub:	
  7594                           ;psect for function ___flsub
  7595                           
  7596  1D48                     l2920:	
  7597                           ;incstack = 0
  7598                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7599                           
  7600  1D48  3080               	movlw	128
  7601  1D49  1283               	bcf	3,5	;RP0=0, select bank0
  7602  1D4A  1303               	bcf	3,6	;RP1=0, select bank0
  7603  1D4B  06E9               	xorwf	___flsub@a+3,f
  7604  1D4C                     l2922:
  7605  1D4C  086D               	movf	___flsub@b+3,w
  7606  1D4D  00D5               	movwf	___fladd@b+3
  7607  1D4E  086C               	movf	___flsub@b+2,w
  7608  1D4F  00D4               	movwf	___fladd@b+2
  7609  1D50  086B               	movf	___flsub@b+1,w
  7610  1D51  00D3               	movwf	___fladd@b+1
  7611  1D52  086A               	movf	___flsub@b,w
  7612  1D53  00D2               	movwf	___fladd@b
  7613  1D54  0869               	movf	___flsub@a+3,w
  7614  1D55  00D9               	movwf	___fladd@a+3
  7615  1D56  0868               	movf	___flsub@a+2,w
  7616  1D57  00D8               	movwf	___fladd@a+2
  7617  1D58  0867               	movf	___flsub@a+1,w
  7618  1D59  00D7               	movwf	___fladd@a+1
  7619  1D5A  0866               	movf	___flsub@a,w
  7620  1D5B  00D6               	movwf	___fladd@a
  7621  1D5C  160A  118A  2578  160A  158A  	fcall	___fladd
  7622  1D61  1283               	bcf	3,5	;RP0=0, select bank0
  7623  1D62  1303               	bcf	3,6	;RP1=0, select bank0
  7624  1D63  0855               	movf	?___fladd+3,w
  7625  1D64  00E9               	movwf	?___flsub+3
  7626  1D65  0854               	movf	?___fladd+2,w
  7627  1D66  00E8               	movwf	?___flsub+2
  7628  1D67  0853               	movf	?___fladd+1,w
  7629  1D68  00E7               	movwf	?___flsub+1
  7630  1D69  0852               	movf	?___fladd,w
  7631  1D6A  00E6               	movwf	?___flsub
  7632  1D6B                     l630:
  7633  1D6B  0008               	return
  7634  1D6C                     __end_of___flsub:
  7635                           
  7636                           	psect	text19
  7637  1578                     __ptext19:	
  7638 ;; *************** function ___fladd *****************
  7639 ;; Defined at:
  7640 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\sprcadd.c"
  7641 ;; Parameters:    Size  Location     Type
  7642 ;;  b               4   50[BANK0 ] long 
  7643 ;;  a               4   54[BANK0 ] long 
  7644 ;; Auto vars:     Size  Location     Type
  7645 ;;  grs             1   69[BANK0 ] unsigned char 
  7646 ;;  bexp            1   68[BANK0 ] unsigned char 
  7647 ;;  aexp            1   67[BANK0 ] unsigned char 
  7648 ;;  signs           1   66[BANK0 ] unsigned char 
  7649 ;; Return value:  Size  Location     Type
  7650 ;;                  4   50[BANK0 ] unsigned char 
  7651 ;; Registers used:
  7652 ;;		wreg, status,2, status,0, btemp+1
  7653 ;; Tracked objects:
  7654 ;;		On entry : 0/0
  7655 ;;		On exit  : 0/0
  7656 ;;		Unchanged: 0/0
  7657 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7658 ;;      Params:         0       8       0       0       0
  7659 ;;      Locals:         0       4       0       0       0
  7660 ;;      Temps:          0       8       0       0       0
  7661 ;;      Totals:         0      20       0       0       0
  7662 ;;Total ram usage:       20 bytes
  7663 ;; Hardware stack levels used: 1
  7664 ;; This function calls:
  7665 ;;		Nothing
  7666 ;; This function is called by:
  7667 ;;		_sprintf
  7668 ;;		___flsub
  7669 ;; This function uses a non-reentrant model
  7670 ;;
  7671                           
  7672  1578                     ___fladd:	
  7673                           ;psect for function ___fladd
  7674                           
  7675  1578                     l2274:	
  7676                           ;incstack = 0
  7677                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  7678                           
  7679  1578  1283               	bcf	3,5	;RP0=0, select bank0
  7680  1579  1303               	bcf	3,6	;RP1=0, select bank0
  7681  157A  0855               	movf	___fladd@b+3,w
  7682  157B  3980               	andlw	128
  7683  157C  00DA               	movwf	??___fladd
  7684  157D  085A               	movf	??___fladd,w
  7685  157E  00E2               	movwf	___fladd@signs
  7686  157F                     l2276:
  7687  157F  0855               	movf	___fladd@b+3,w
  7688  1580  00DA               	movwf	??___fladd
  7689  1581  075A               	addwf	??___fladd,w
  7690  1582  00DB               	movwf	??___fladd+1
  7691  1583  085B               	movf	??___fladd+1,w
  7692  1584  00E4               	movwf	___fladd@bexp
  7693  1585                     l2278:
  7694  1585  1FD4               	btfss	___fladd@b+2,7
  7695  1586  2D88               	goto	u3281
  7696  1587  2D89               	goto	u3280
  7697  1588                     u3281:
  7698  1588  2D8A               	goto	l2282
  7699  1589                     u3280:
  7700  1589                     l2280:
  7701  1589  1464               	bsf	___fladd@bexp,0
  7702  158A                     l2282:
  7703  158A  0864               	movf	___fladd@bexp,w
  7704  158B  1903               	btfsc	3,2
  7705  158C  2D8E               	goto	u3291
  7706  158D  2D8F               	goto	u3290
  7707  158E                     u3291:
  7708  158E  2D9F               	goto	l2292
  7709  158F                     u3290:
  7710  158F                     l2284:
  7711  158F  0A64               	incf	___fladd@bexp,w
  7712  1590  1D03               	btfss	3,2
  7713  1591  2D93               	goto	u3301
  7714  1592  2D94               	goto	u3300
  7715  1593                     u3301:
  7716  1593  2D9C               	goto	l2288
  7717  1594                     u3300:
  7718  1594                     l2286:
  7719  1594  3000               	movlw	0
  7720  1595  00D5               	movwf	___fladd@b+3
  7721  1596  3000               	movlw	0
  7722  1597  00D4               	movwf	___fladd@b+2
  7723  1598  3000               	movlw	0
  7724  1599  00D3               	movwf	___fladd@b+1
  7725  159A  3000               	movlw	0
  7726  159B  00D2               	movwf	___fladd@b
  7727  159C                     l2288:
  7728  159C  17D4               	bsf	___fladd@b+2,7
  7729  159D                     l2290:
  7730  159D  01D5               	clrf	___fladd@b+3
  7731  159E  2DA7               	goto	l2294
  7732  159F                     l2292:
  7733  159F  3000               	movlw	0
  7734  15A0  00D5               	movwf	___fladd@b+3
  7735  15A1  3000               	movlw	0
  7736  15A2  00D4               	movwf	___fladd@b+2
  7737  15A3  3000               	movlw	0
  7738  15A4  00D3               	movwf	___fladd@b+1
  7739  15A5  3000               	movlw	0
  7740  15A6  00D2               	movwf	___fladd@b
  7741  15A7                     l2294:
  7742  15A7  0859               	movf	___fladd@a+3,w
  7743  15A8  3980               	andlw	128
  7744  15A9  00DA               	movwf	??___fladd
  7745  15AA  085A               	movf	??___fladd,w
  7746  15AB  00E3               	movwf	___fladd@aexp
  7747  15AC                     l2296:
  7748  15AC  0863               	movf	___fladd@aexp,w
  7749  15AD  0662               	xorwf	___fladd@signs,w
  7750  15AE  1903               	skipnz
  7751  15AF  2DB1               	goto	u3311
  7752  15B0  2DB2               	goto	u3310
  7753  15B1                     u3311:
  7754  15B1  2DB3               	goto	l2300
  7755  15B2                     u3310:
  7756  15B2                     l2298:
  7757  15B2  1762               	bsf	___fladd@signs,6
  7758  15B3                     l2300:
  7759  15B3  0859               	movf	___fladd@a+3,w
  7760  15B4  00DA               	movwf	??___fladd
  7761  15B5  075A               	addwf	??___fladd,w
  7762  15B6  00DB               	movwf	??___fladd+1
  7763  15B7  085B               	movf	??___fladd+1,w
  7764  15B8  00E3               	movwf	___fladd@aexp
  7765  15B9                     l2302:
  7766  15B9  1FD8               	btfss	___fladd@a+2,7
  7767  15BA  2DBC               	goto	u3321
  7768  15BB  2DBD               	goto	u3320
  7769  15BC                     u3321:
  7770  15BC  2DBE               	goto	l2306
  7771  15BD                     u3320:
  7772  15BD                     l2304:
  7773  15BD  1463               	bsf	___fladd@aexp,0
  7774  15BE                     l2306:
  7775  15BE  0863               	movf	___fladd@aexp,w
  7776  15BF  1903               	btfsc	3,2
  7777  15C0  2DC2               	goto	u3331
  7778  15C1  2DC3               	goto	u3330
  7779  15C2                     u3331:
  7780  15C2  2DD3               	goto	l2316
  7781  15C3                     u3330:
  7782  15C3                     l2308:
  7783  15C3  0A63               	incf	___fladd@aexp,w
  7784  15C4  1D03               	btfss	3,2
  7785  15C5  2DC7               	goto	u3341
  7786  15C6  2DC8               	goto	u3340
  7787  15C7                     u3341:
  7788  15C7  2DD0               	goto	l2312
  7789  15C8                     u3340:
  7790  15C8                     l2310:
  7791  15C8  3000               	movlw	0
  7792  15C9  00D9               	movwf	___fladd@a+3
  7793  15CA  3000               	movlw	0
  7794  15CB  00D8               	movwf	___fladd@a+2
  7795  15CC  3000               	movlw	0
  7796  15CD  00D7               	movwf	___fladd@a+1
  7797  15CE  3000               	movlw	0
  7798  15CF  00D6               	movwf	___fladd@a
  7799  15D0                     l2312:
  7800  15D0  17D8               	bsf	___fladd@a+2,7
  7801  15D1                     l2314:
  7802  15D1  01D9               	clrf	___fladd@a+3
  7803  15D2  2DDB               	goto	l584
  7804  15D3                     l2316:
  7805  15D3  3000               	movlw	0
  7806  15D4  00D9               	movwf	___fladd@a+3
  7807  15D5  3000               	movlw	0
  7808  15D6  00D8               	movwf	___fladd@a+2
  7809  15D7  3000               	movlw	0
  7810  15D8  00D7               	movwf	___fladd@a+1
  7811  15D9  3000               	movlw	0
  7812  15DA  00D6               	movwf	___fladd@a
  7813  15DB                     l584:
  7814  15DB  0864               	movf	___fladd@bexp,w
  7815  15DC  0263               	subwf	___fladd@aexp,w
  7816  15DD  1803               	skipnc
  7817  15DE  2DE0               	goto	u3351
  7818  15DF  2DE1               	goto	u3350
  7819  15E0                     u3351:
  7820  15E0  2E25               	goto	l2352
  7821  15E1                     u3350:
  7822  15E1                     l2318:
  7823  15E1  1F62               	btfss	___fladd@signs,6
  7824  15E2  2DE4               	goto	u3361
  7825  15E3  2DE5               	goto	u3360
  7826  15E4                     u3361:
  7827  15E4  2DE9               	goto	l2322
  7828  15E5                     u3360:
  7829  15E5                     l2320:
  7830  15E5  3080               	movlw	128
  7831  15E6  00DA               	movwf	??___fladd
  7832  15E7  085A               	movf	??___fladd,w
  7833  15E8  06E2               	xorwf	___fladd@signs,f
  7834  15E9                     l2322:
  7835  15E9  0864               	movf	___fladd@bexp,w
  7836  15EA  00DA               	movwf	??___fladd
  7837  15EB  085A               	movf	??___fladd,w
  7838  15EC  00E5               	movwf	___fladd@grs
  7839  15ED                     l2324:
  7840  15ED  0863               	movf	___fladd@aexp,w
  7841  15EE  00DA               	movwf	??___fladd
  7842  15EF  085A               	movf	??___fladd,w
  7843  15F0  00E4               	movwf	___fladd@bexp
  7844  15F1                     l2326:
  7845  15F1  0865               	movf	___fladd@grs,w
  7846  15F2  00DA               	movwf	??___fladd
  7847  15F3  085A               	movf	??___fladd,w
  7848  15F4  00E3               	movwf	___fladd@aexp
  7849  15F5                     l2328:
  7850  15F5  0852               	movf	___fladd@b,w
  7851  15F6  00DA               	movwf	??___fladd
  7852  15F7  085A               	movf	??___fladd,w
  7853  15F8  00E5               	movwf	___fladd@grs
  7854  15F9                     l2330:
  7855  15F9  0856               	movf	___fladd@a,w
  7856  15FA  00DA               	movwf	??___fladd
  7857  15FB  085A               	movf	??___fladd,w
  7858  15FC  00D2               	movwf	___fladd@b
  7859  15FD                     l2332:
  7860  15FD  0865               	movf	___fladd@grs,w
  7861  15FE  00DA               	movwf	??___fladd
  7862  15FF  085A               	movf	??___fladd,w
  7863  1600  00D6               	movwf	___fladd@a
  7864  1601                     l2334:
  7865  1601  0853               	movf	___fladd@b+1,w
  7866  1602  00DA               	movwf	??___fladd
  7867  1603  085A               	movf	??___fladd,w
  7868  1604  00E5               	movwf	___fladd@grs
  7869  1605                     l2336:
  7870  1605  0857               	movf	___fladd@a+1,w
  7871  1606  00DA               	movwf	??___fladd
  7872  1607  085A               	movf	??___fladd,w
  7873  1608  00D3               	movwf	___fladd@b+1
  7874  1609                     l2338:
  7875  1609  0865               	movf	___fladd@grs,w
  7876  160A  00DA               	movwf	??___fladd
  7877  160B  085A               	movf	??___fladd,w
  7878  160C  00D7               	movwf	___fladd@a+1
  7879  160D                     l2340:
  7880  160D  0854               	movf	___fladd@b+2,w
  7881  160E  00DA               	movwf	??___fladd
  7882  160F  085A               	movf	??___fladd,w
  7883  1610  00E5               	movwf	___fladd@grs
  7884  1611                     l2342:
  7885  1611  0858               	movf	___fladd@a+2,w
  7886  1612  00DA               	movwf	??___fladd
  7887  1613  085A               	movf	??___fladd,w
  7888  1614  00D4               	movwf	___fladd@b+2
  7889  1615                     l2344:
  7890  1615  0865               	movf	___fladd@grs,w
  7891  1616  00DA               	movwf	??___fladd
  7892  1617  085A               	movf	??___fladd,w
  7893  1618  00D8               	movwf	___fladd@a+2
  7894  1619                     l2346:
  7895  1619  0855               	movf	___fladd@b+3,w
  7896  161A  00DA               	movwf	??___fladd
  7897  161B  085A               	movf	??___fladd,w
  7898  161C  00E5               	movwf	___fladd@grs
  7899  161D                     l2348:
  7900  161D  0859               	movf	___fladd@a+3,w
  7901  161E  00DA               	movwf	??___fladd
  7902  161F  085A               	movf	??___fladd,w
  7903  1620  00D5               	movwf	___fladd@b+3
  7904  1621                     l2350:
  7905  1621  0865               	movf	___fladd@grs,w
  7906  1622  00DA               	movwf	??___fladd
  7907  1623  085A               	movf	??___fladd,w
  7908  1624  00D9               	movwf	___fladd@a+3
  7909  1625                     l2352:
  7910  1625  01E5               	clrf	___fladd@grs
  7911  1626                     l2354:
  7912  1626  0863               	movf	___fladd@aexp,w
  7913  1627  00DA               	movwf	??___fladd
  7914  1628  01DB               	clrf	??___fladd+1
  7915  1629  085B               	movf	??___fladd+1,w
  7916  162A  00DD               	movwf	??___fladd+3
  7917  162B  0864               	movf	___fladd@bexp,w
  7918  162C  025A               	subwf	??___fladd,w
  7919  162D  00DC               	movwf	??___fladd+2
  7920  162E  1C03               	skipc
  7921  162F  03DD               	decf	??___fladd+3,f
  7922  1630  085D               	movf	??___fladd+3,w
  7923  1631  3A80               	xorlw	128
  7924  1632  00FF               	movwf	btemp+1
  7925  1633  3080               	movlw	128
  7926  1634  027F               	subwf	btemp+1,w
  7927  1635  1D03               	skipz
  7928  1636  2E39               	goto	u3375
  7929  1637  301A               	movlw	26
  7930  1638  025C               	subwf	??___fladd+2,w
  7931  1639                     u3375:
  7932  1639  1C03               	skipc
  7933  163A  2E3C               	goto	u3371
  7934  163B  2E3D               	goto	u3370
  7935  163C                     u3371:
  7936  163C  2E7A               	goto	l2370
  7937  163D                     u3370:
  7938  163D                     l2356:
  7939  163D  1283               	bcf	3,5	;RP0=0, select bank0
  7940  163E  1303               	bcf	3,6	;RP1=0, select bank0
  7941  163F  0855               	movf	___fladd@b+3,w
  7942  1640  0454               	iorwf	___fladd@b+2,w
  7943  1641  0453               	iorwf	___fladd@b+1,w
  7944  1642  0452               	iorwf	___fladd@b,w
  7945  1643  1D03               	skipz
  7946  1644  2E46               	goto	u3381
  7947  1645  2E48               	goto	u3380
  7948  1646                     u3381:
  7949  1646  3001               	movlw	1
  7950  1647  2E49               	goto	u3390
  7951  1648                     u3380:
  7952  1648  3000               	movlw	0
  7953  1649                     u3390:
  7954  1649  00DA               	movwf	??___fladd
  7955  164A  085A               	movf	??___fladd,w
  7956  164B  00E5               	movwf	___fladd@grs
  7957  164C  3000               	movlw	0
  7958  164D  00D5               	movwf	___fladd@b+3
  7959  164E  3000               	movlw	0
  7960  164F  00D4               	movwf	___fladd@b+2
  7961  1650  3000               	movlw	0
  7962  1651  00D3               	movwf	___fladd@b+1
  7963  1652  3000               	movlw	0
  7964  1653  00D2               	movwf	___fladd@b
  7965  1654  0863               	movf	___fladd@aexp,w
  7966  1655  00DA               	movwf	??___fladd
  7967  1656  085A               	movf	??___fladd,w
  7968  1657  00E4               	movwf	___fladd@bexp
  7969  1658  2E82               	goto	l588
  7970  1659                     l590:
  7971  1659  1C65               	btfss	___fladd@grs,0
  7972  165A  2E5C               	goto	u3401
  7973  165B  2E5D               	goto	u3400
  7974  165C                     u3401:
  7975  165C  2E66               	goto	l2360
  7976  165D                     u3400:
  7977  165D                     l2358:
  7978  165D  0865               	movf	___fladd@grs,w
  7979  165E  00DA               	movwf	??___fladd
  7980  165F  1003               	clrc
  7981  1660  0C5A               	rrf	??___fladd,w
  7982  1661  3801               	iorlw	1
  7983  1662  00DB               	movwf	??___fladd+1
  7984  1663  085B               	movf	??___fladd+1,w
  7985  1664  00E5               	movwf	___fladd@grs
  7986  1665  2E68               	goto	l2362
  7987  1666                     l2360:
  7988  1666  1003               	clrc
  7989  1667  0CE5               	rrf	___fladd@grs,f
  7990  1668                     l2362:
  7991  1668  1C52               	btfss	___fladd@b,0
  7992  1669  2E6B               	goto	u3411
  7993  166A  2E6C               	goto	u3410
  7994  166B                     u3411:
  7995  166B  2E6D               	goto	l2366
  7996  166C                     u3410:
  7997  166C                     l2364:
  7998  166C  17E5               	bsf	___fladd@grs,7
  7999  166D                     l2366:
  8000  166D  3001               	movlw	1
  8001  166E  00DA               	movwf	??___fladd
  8002  166F                     u3425:
  8003  166F  0D55               	rlf	___fladd@b+3,w
  8004  1670  0CD5               	rrf	___fladd@b+3,f
  8005  1671  0CD4               	rrf	___fladd@b+2,f
  8006  1672  0CD3               	rrf	___fladd@b+1,f
  8007  1673  0CD2               	rrf	___fladd@b,f
  8008  1674  0BDA               	decfsz	??___fladd& (0+127),f
  8009  1675  2E6F               	goto	u3425
  8010  1676                     l2368:
  8011  1676  3001               	movlw	1
  8012  1677  00DA               	movwf	??___fladd
  8013  1678  085A               	movf	??___fladd,w
  8014  1679  07E4               	addwf	___fladd@bexp,f
  8015  167A                     l2370:
  8016  167A  1283               	bcf	3,5	;RP0=0, select bank0
  8017  167B  1303               	bcf	3,6	;RP1=0, select bank0
  8018  167C  0863               	movf	___fladd@aexp,w
  8019  167D  0264               	subwf	___fladd@bexp,w
  8020  167E  1C03               	skipc
  8021  167F  2E81               	goto	u3431
  8022  1680  2E82               	goto	u3430
  8023  1681                     u3431:
  8024  1681  2E59               	goto	l590
  8025  1682                     u3430:
  8026  1682                     l588:
  8027  1682  1B62               	btfsc	___fladd@signs,6
  8028  1683  2E85               	goto	u3441
  8029  1684  2E86               	goto	u3440
  8030  1685                     u3441:
  8031  1685  2ED1               	goto	l2396
  8032  1686                     u3440:
  8033  1686                     l2372:
  8034  1686  0864               	movf	___fladd@bexp,w
  8035  1687  1D03               	btfss	3,2
  8036  1688  2E8A               	goto	u3451
  8037  1689  2E8B               	goto	u3450
  8038  168A                     u3451:
  8039  168A  2E94               	goto	l2378
  8040  168B                     u3450:
  8041  168B                     l2374:
  8042  168B  3000               	movlw	0
  8043  168C  00D5               	movwf	?___fladd+3
  8044  168D  3000               	movlw	0
  8045  168E  00D4               	movwf	?___fladd+2
  8046  168F  3000               	movlw	0
  8047  1690  00D3               	movwf	?___fladd+1
  8048  1691  3000               	movlw	0
  8049  1692  00D2               	movwf	?___fladd
  8050  1693  2FFF               	goto	l597
  8051  1694                     l2378:
  8052  1694  0856               	movf	___fladd@a,w
  8053  1695  07D2               	addwf	___fladd@b,f
  8054  1696  0857               	movf	___fladd@a+1,w
  8055  1697  1103               	clrz
  8056  1698  1803               	skipnc
  8057  1699  3E01               	addlw	1
  8058  169A  1903               	skipnz
  8059  169B  2E9D               	goto	u3461
  8060  169C  07D3               	addwf	___fladd@b+1,f
  8061  169D                     u3461:
  8062  169D  0858               	movf	___fladd@a+2,w
  8063  169E  1103               	clrz
  8064  169F  1803               	skipnc
  8065  16A0  3E01               	addlw	1
  8066  16A1  1903               	skipnz
  8067  16A2  2EA4               	goto	u3462
  8068  16A3  07D4               	addwf	___fladd@b+2,f
  8069  16A4                     u3462:
  8070  16A4  0859               	movf	___fladd@a+3,w
  8071  16A5  1103               	clrz
  8072  16A6  1803               	skipnc
  8073  16A7  3E01               	addlw	1
  8074  16A8  1903               	skipnz
  8075  16A9  2EAB               	goto	u3463
  8076  16AA  07D5               	addwf	___fladd@b+3,f
  8077  16AB                     u3463:
  8078  16AB                     l2380:
  8079  16AB  1C55               	btfss	___fladd@b+3,0
  8080  16AC  2EAE               	goto	u3471
  8081  16AD  2EAF               	goto	u3470
  8082  16AE                     u3471:
  8083  16AE  2F85               	goto	l2430
  8084  16AF                     u3470:
  8085  16AF                     l2382:
  8086  16AF  1C65               	btfss	___fladd@grs,0
  8087  16B0  2EB2               	goto	u3481
  8088  16B1  2EB3               	goto	u3480
  8089  16B2                     u3481:
  8090  16B2  2EBC               	goto	l2386
  8091  16B3                     u3480:
  8092  16B3                     l2384:
  8093  16B3  0865               	movf	___fladd@grs,w
  8094  16B4  00DA               	movwf	??___fladd
  8095  16B5  1003               	clrc
  8096  16B6  0C5A               	rrf	??___fladd,w
  8097  16B7  3801               	iorlw	1
  8098  16B8  00DB               	movwf	??___fladd+1
  8099  16B9  085B               	movf	??___fladd+1,w
  8100  16BA  00E5               	movwf	___fladd@grs
  8101  16BB  2EBE               	goto	l2388
  8102  16BC                     l2386:
  8103  16BC  1003               	clrc
  8104  16BD  0CE5               	rrf	___fladd@grs,f
  8105  16BE                     l2388:
  8106  16BE  1C52               	btfss	___fladd@b,0
  8107  16BF  2EC1               	goto	u3491
  8108  16C0  2EC2               	goto	u3490
  8109  16C1                     u3491:
  8110  16C1  2EC3               	goto	l2392
  8111  16C2                     u3490:
  8112  16C2                     l2390:
  8113  16C2  17E5               	bsf	___fladd@grs,7
  8114  16C3                     l2392:
  8115  16C3  3001               	movlw	1
  8116  16C4  00DA               	movwf	??___fladd
  8117  16C5                     u3505:
  8118  16C5  0D55               	rlf	___fladd@b+3,w
  8119  16C6  0CD5               	rrf	___fladd@b+3,f
  8120  16C7  0CD4               	rrf	___fladd@b+2,f
  8121  16C8  0CD3               	rrf	___fladd@b+1,f
  8122  16C9  0CD2               	rrf	___fladd@b,f
  8123  16CA  0BDA               	decfsz	??___fladd& (0+127),f
  8124  16CB  2EC5               	goto	u3505
  8125  16CC                     l2394:
  8126  16CC  3001               	movlw	1
  8127  16CD  00DA               	movwf	??___fladd
  8128  16CE  085A               	movf	??___fladd,w
  8129  16CF  07E4               	addwf	___fladd@bexp,f
  8130  16D0  2F85               	goto	l2430
  8131  16D1                     l2396:
  8132  16D1  0855               	movf	___fladd@b+3,w
  8133  16D2  3A80               	xorlw	128
  8134  16D3  00FF               	movwf	btemp+1
  8135  16D4  0859               	movf	___fladd@a+3,w
  8136  16D5  3A80               	xorlw	128
  8137  16D6  027F               	subwf	btemp+1,w
  8138  16D7  1D03               	skipz
  8139  16D8  2EE3               	goto	u3513
  8140  16D9  0858               	movf	___fladd@a+2,w
  8141  16DA  0254               	subwf	___fladd@b+2,w
  8142  16DB  1D03               	skipz
  8143  16DC  2EE3               	goto	u3513
  8144  16DD  0857               	movf	___fladd@a+1,w
  8145  16DE  0253               	subwf	___fladd@b+1,w
  8146  16DF  1D03               	skipz
  8147  16E0  2EE3               	goto	u3513
  8148  16E1  0856               	movf	___fladd@a,w
  8149  16E2  0252               	subwf	___fladd@b,w
  8150  16E3                     u3513:
  8151  16E3  1803               	skipnc
  8152  16E4  2EE6               	goto	u3511
  8153  16E5  2EE7               	goto	u3510
  8154  16E6                     u3511:
  8155  16E6  2F3F               	goto	l2406
  8156  16E7                     u3510:
  8157  16E7                     l2398:
  8158  16E7  30FF               	movlw	255
  8159  16E8  00DA               	movwf	??___fladd
  8160  16E9  30FF               	movlw	255
  8161  16EA  00DB               	movwf	??___fladd+1
  8162  16EB  30FF               	movlw	255
  8163  16EC  00DC               	movwf	??___fladd+2
  8164  16ED  30FF               	movlw	255
  8165  16EE  00DD               	movwf	??___fladd+3
  8166  16EF  0856               	movf	___fladd@a,w
  8167  16F0  00DE               	movwf	??___fladd+4
  8168  16F1  0857               	movf	___fladd@a+1,w
  8169  16F2  00DF               	movwf	??___fladd+5
  8170  16F3  0858               	movf	___fladd@a+2,w
  8171  16F4  00E0               	movwf	??___fladd+6
  8172  16F5  0859               	movf	___fladd@a+3,w
  8173  16F6  00E1               	movwf	??___fladd+7
  8174  16F7  0852               	movf	___fladd@b,w
  8175  16F8  02DE               	subwf	??___fladd+4,f
  8176  16F9  0853               	movf	___fladd@b+1,w
  8177  16FA  1C03               	skipc
  8178  16FB  0F53               	incfsz	___fladd@b+1,w
  8179  16FC  2EFE               	goto	u3521
  8180  16FD  2EFF               	goto	u3522
  8181  16FE                     u3521:
  8182  16FE  02DF               	subwf	??___fladd+5,f
  8183  16FF                     u3522:
  8184  16FF  0854               	movf	___fladd@b+2,w
  8185  1700  1C03               	skipc
  8186  1701  0F54               	incfsz	___fladd@b+2,w
  8187  1702  2F04               	goto	u3523
  8188  1703  2F05               	goto	u3524
  8189  1704                     u3523:
  8190  1704  02E0               	subwf	??___fladd+6,f
  8191  1705                     u3524:
  8192  1705  0855               	movf	___fladd@b+3,w
  8193  1706  1C03               	skipc
  8194  1707  0F55               	incfsz	___fladd@b+3,w
  8195  1708  2F0A               	goto	u3525
  8196  1709  2F0B               	goto	u3526
  8197  170A                     u3525:
  8198  170A  02E1               	subwf	??___fladd+7,f
  8199  170B                     u3526:
  8200  170B  085E               	movf	??___fladd+4,w
  8201  170C  07DA               	addwf	??___fladd,f
  8202  170D  085F               	movf	??___fladd+5,w
  8203  170E  1803               	skipnc
  8204  170F  0F5F               	incfsz	??___fladd+5,w
  8205  1710  2F12               	goto	u3530
  8206  1711  2F13               	goto	u3531
  8207  1712                     u3530:
  8208  1712  07DB               	addwf	??___fladd+1,f
  8209  1713                     u3531:
  8210  1713  0860               	movf	??___fladd+6,w
  8211  1714  1803               	skipnc
  8212  1715  0F60               	incfsz	??___fladd+6,w
  8213  1716  2F18               	goto	u3532
  8214  1717  2F19               	goto	u3533
  8215  1718                     u3532:
  8216  1718  07DC               	addwf	??___fladd+2,f
  8217  1719                     u3533:
  8218  1719  0861               	movf	??___fladd+7,w
  8219  171A  1803               	skipnc
  8220  171B  0A61               	incf	??___fladd+7,w
  8221  171C  07DD               	addwf	??___fladd+3,f
  8222  171D  085D               	movf	??___fladd+3,w
  8223  171E  00D5               	movwf	___fladd@b+3
  8224  171F  085C               	movf	??___fladd+2,w
  8225  1720  00D4               	movwf	___fladd@b+2
  8226  1721  085B               	movf	??___fladd+1,w
  8227  1722  00D3               	movwf	___fladd@b+1
  8228  1723  085A               	movf	??___fladd,w
  8229  1724  00D2               	movwf	___fladd@b
  8230  1725                     l2400:
  8231  1725  3080               	movlw	128
  8232  1726  00DA               	movwf	??___fladd
  8233  1727  085A               	movf	??___fladd,w
  8234  1728  06E2               	xorwf	___fladd@signs,f
  8235  1729  09E5               	comf	___fladd@grs,f
  8236  172A  0AE5               	incf	___fladd@grs,f
  8237  172B                     l2402:
  8238  172B  0865               	movf	___fladd@grs,w
  8239  172C  1D03               	btfss	3,2
  8240  172D  2F2F               	goto	u3541
  8241  172E  2F30               	goto	u3540
  8242  172F                     u3541:
  8243  172F  2F4D               	goto	l605
  8244  1730                     u3540:
  8245  1730                     l2404:
  8246  1730  3001               	movlw	1
  8247  1731  07D2               	addwf	___fladd@b,f
  8248  1732  3000               	movlw	0
  8249  1733  1803               	skipnc
  8250  1734  3001               	movlw	1
  8251  1735  07D3               	addwf	___fladd@b+1,f
  8252  1736  3000               	movlw	0
  8253  1737  1803               	skipnc
  8254  1738  3001               	movlw	1
  8255  1739  07D4               	addwf	___fladd@b+2,f
  8256  173A  3000               	movlw	0
  8257  173B  1803               	skipnc
  8258  173C  3001               	movlw	1
  8259  173D  07D5               	addwf	___fladd@b+3,f
  8260  173E  2F4D               	goto	l605
  8261  173F                     l2406:
  8262  173F  0856               	movf	___fladd@a,w
  8263  1740  02D2               	subwf	___fladd@b,f
  8264  1741  0857               	movf	___fladd@a+1,w
  8265  1742  1C03               	skipc
  8266  1743  0F57               	incfsz	___fladd@a+1,w
  8267  1744  02D3               	subwf	___fladd@b+1,f
  8268  1745  0858               	movf	___fladd@a+2,w
  8269  1746  1C03               	skipc
  8270  1747  0F58               	incfsz	___fladd@a+2,w
  8271  1748  02D4               	subwf	___fladd@b+2,f
  8272  1749  0859               	movf	___fladd@a+3,w
  8273  174A  1C03               	skipc
  8274  174B  0F59               	incfsz	___fladd@a+3,w
  8275  174C  02D5               	subwf	___fladd@b+3,f
  8276  174D                     l605:
  8277  174D  0855               	movf	___fladd@b+3,w
  8278  174E  0454               	iorwf	___fladd@b+2,w
  8279  174F  0453               	iorwf	___fladd@b+1,w
  8280  1750  0452               	iorwf	___fladd@b,w
  8281  1751  1D03               	skipz
  8282  1752  2F54               	goto	u3551
  8283  1753  2F55               	goto	u3550
  8284  1754                     u3551:
  8285  1754  2F81               	goto	l2428
  8286  1755                     u3550:
  8287  1755                     l2408:
  8288  1755  0865               	movf	___fladd@grs,w
  8289  1756  1D03               	btfss	3,2
  8290  1757  2F59               	goto	u3561
  8291  1758  2F5A               	goto	u3560
  8292  1759                     u3561:
  8293  1759  2F81               	goto	l2428
  8294  175A                     u3560:
  8295  175A                     l2410:
  8296  175A  3000               	movlw	0
  8297  175B  00D5               	movwf	?___fladd+3
  8298  175C  3000               	movlw	0
  8299  175D  00D4               	movwf	?___fladd+2
  8300  175E  3000               	movlw	0
  8301  175F  00D3               	movwf	?___fladd+1
  8302  1760  3000               	movlw	0
  8303  1761  00D2               	movwf	?___fladd
  8304  1762  2FFF               	goto	l597
  8305  1763                     l2414:
  8306  1763  3001               	movlw	1
  8307  1764  00DA               	movwf	??___fladd
  8308  1765                     u3575:
  8309  1765  1003               	clrc
  8310  1766  0DD2               	rlf	___fladd@b,f
  8311  1767  0DD3               	rlf	___fladd@b+1,f
  8312  1768  0DD4               	rlf	___fladd@b+2,f
  8313  1769  0DD5               	rlf	___fladd@b+3,f
  8314  176A  0BDA               	decfsz	??___fladd,f
  8315  176B  2F65               	goto	u3575
  8316  176C                     l2416:
  8317  176C  1FE5               	btfss	___fladd@grs,7
  8318  176D  2F6F               	goto	u3581
  8319  176E  2F70               	goto	u3580
  8320  176F                     u3581:
  8321  176F  2F71               	goto	l609
  8322  1770                     u3580:
  8323  1770                     l2418:
  8324  1770  1452               	bsf	___fladd@b,0
  8325  1771                     l609:
  8326  1771  1C65               	btfss	___fladd@grs,0
  8327  1772  2F74               	goto	u3591
  8328  1773  2F75               	goto	u3590
  8329  1774                     u3591:
  8330  1774  2F78               	goto	l2422
  8331  1775                     u3590:
  8332  1775                     l2420:
  8333  1775  1403               	setc
  8334  1776  0DE5               	rlf	___fladd@grs,f
  8335  1777  2F7A               	goto	l2424
  8336  1778                     l2422:
  8337  1778  1003               	clrc
  8338  1779  0DE5               	rlf	___fladd@grs,f
  8339  177A                     l2424:
  8340  177A  0864               	movf	___fladd@bexp,w
  8341  177B  1903               	btfsc	3,2
  8342  177C  2F7E               	goto	u3601
  8343  177D  2F7F               	goto	u3600
  8344  177E                     u3601:
  8345  177E  2F81               	goto	l2428
  8346  177F                     u3600:
  8347  177F                     l2426:
  8348  177F  3001               	movlw	1
  8349  1780  02E4               	subwf	___fladd@bexp,f
  8350  1781                     l2428:
  8351  1781  1FD4               	btfss	___fladd@b+2,7
  8352  1782  2F84               	goto	u3611
  8353  1783  2F85               	goto	u3610
  8354  1784                     u3611:
  8355  1784  2F63               	goto	l2414
  8356  1785                     u3610:
  8357  1785                     l2430:
  8358  1785  01E3               	clrf	___fladd@aexp
  8359  1786                     l2432:
  8360  1786  1FE5               	btfss	___fladd@grs,7
  8361  1787  2F89               	goto	u3621
  8362  1788  2F8A               	goto	u3620
  8363  1789                     u3621:
  8364  1789  2F98               	goto	l2440
  8365  178A                     u3620:
  8366  178A                     l2434:
  8367  178A  0865               	movf	___fladd@grs,w
  8368  178B  397F               	andlw	127
  8369  178C  1903               	btfsc	3,2
  8370  178D  2F8F               	goto	u3631
  8371  178E  2F90               	goto	u3630
  8372  178F                     u3631:
  8373  178F  2F93               	goto	l615
  8374  1790                     u3630:
  8375  1790                     l2436:
  8376  1790  01E3               	clrf	___fladd@aexp
  8377  1791  0AE3               	incf	___fladd@aexp,f
  8378  1792  2F98               	goto	l2440
  8379  1793                     l615:
  8380  1793  1C52               	btfss	___fladd@b,0
  8381  1794  2F96               	goto	u3641
  8382  1795  2F97               	goto	u3640
  8383  1796                     u3641:
  8384  1796  2F98               	goto	l2440
  8385  1797                     u3640:
  8386  1797  2F90               	goto	l2436
  8387  1798                     l2440:
  8388  1798  0863               	movf	___fladd@aexp,w
  8389  1799  1903               	btfsc	3,2
  8390  179A  2F9C               	goto	u3651
  8391  179B  2F9D               	goto	u3650
  8392  179C                     u3651:
  8393  179C  2FD1               	goto	l618
  8394  179D                     u3650:
  8395  179D                     l2442:
  8396  179D  3001               	movlw	1
  8397  179E  07D2               	addwf	___fladd@b,f
  8398  179F  3000               	movlw	0
  8399  17A0  1803               	skipnc
  8400  17A1  3001               	movlw	1
  8401  17A2  07D3               	addwf	___fladd@b+1,f
  8402  17A3  3000               	movlw	0
  8403  17A4  1803               	skipnc
  8404  17A5  3001               	movlw	1
  8405  17A6  07D4               	addwf	___fladd@b+2,f
  8406  17A7  3000               	movlw	0
  8407  17A8  1803               	skipnc
  8408  17A9  3001               	movlw	1
  8409  17AA  07D5               	addwf	___fladd@b+3,f
  8410  17AB                     l2444:
  8411  17AB  1C55               	btfss	___fladd@b+3,0
  8412  17AC  2FAE               	goto	u3661
  8413  17AD  2FAF               	goto	u3660
  8414  17AE                     u3661:
  8415  17AE  2FD1               	goto	l618
  8416  17AF                     u3660:
  8417  17AF                     l2446:
  8418  17AF  0852               	movf	___fladd@b,w
  8419  17B0  00DA               	movwf	??___fladd
  8420  17B1  0853               	movf	___fladd@b+1,w
  8421  17B2  00DB               	movwf	??___fladd+1
  8422  17B3  0854               	movf	___fladd@b+2,w
  8423  17B4  00DC               	movwf	??___fladd+2
  8424  17B5  0855               	movf	___fladd@b+3,w
  8425  17B6  00DD               	movwf	??___fladd+3
  8426  17B7  3001               	movlw	1
  8427  17B8  00DE               	movwf	??___fladd+4
  8428  17B9                     u3675:
  8429  17B9  0D5D               	rlf	??___fladd+3,w
  8430  17BA  0CDD               	rrf	??___fladd+3,f
  8431  17BB  0CDC               	rrf	??___fladd+2,f
  8432  17BC  0CDB               	rrf	??___fladd+1,f
  8433  17BD  0CDA               	rrf	??___fladd,f
  8434  17BE                     u3670:
  8435  17BE  0BDE               	decfsz	??___fladd+4,f
  8436  17BF  2FB9               	goto	u3675
  8437  17C0  085D               	movf	??___fladd+3,w
  8438  17C1  00D5               	movwf	___fladd@b+3
  8439  17C2  085C               	movf	??___fladd+2,w
  8440  17C3  00D4               	movwf	___fladd@b+2
  8441  17C4  085B               	movf	??___fladd+1,w
  8442  17C5  00D3               	movwf	___fladd@b+1
  8443  17C6  085A               	movf	??___fladd,w
  8444  17C7  00D2               	movwf	___fladd@b
  8445  17C8  0A64               	incf	___fladd@bexp,w
  8446  17C9  1903               	btfsc	3,2
  8447  17CA  2FCC               	goto	u3681
  8448  17CB  2FCD               	goto	u3680
  8449  17CC                     u3681:
  8450  17CC  2FD1               	goto	l618
  8451  17CD                     u3680:
  8452  17CD                     l2448:
  8453  17CD  3001               	movlw	1
  8454  17CE  00DA               	movwf	??___fladd
  8455  17CF  085A               	movf	??___fladd,w
  8456  17D0  07E4               	addwf	___fladd@bexp,f
  8457  17D1                     l618:
  8458  17D1  0A64               	incf	___fladd@bexp,w
  8459  17D2  1903               	btfsc	3,2
  8460  17D3  2FD5               	goto	u3691
  8461  17D4  2FD6               	goto	u3690
  8462  17D5                     u3691:
  8463  17D5  2FDB               	goto	l2452
  8464  17D6                     u3690:
  8465  17D6                     l2450:
  8466  17D6  0864               	movf	___fladd@bexp,w
  8467  17D7  1D03               	btfss	3,2
  8468  17D8  2FDA               	goto	u3701
  8469  17D9  2FDB               	goto	u3700
  8470  17DA                     u3701:
  8471  17DA  2FE9               	goto	l2458
  8472  17DB                     u3700:
  8473  17DB                     l2452:
  8474  17DB  3000               	movlw	0
  8475  17DC  00D5               	movwf	___fladd@b+3
  8476  17DD  3000               	movlw	0
  8477  17DE  00D4               	movwf	___fladd@b+2
  8478  17DF  3000               	movlw	0
  8479  17E0  00D3               	movwf	___fladd@b+1
  8480  17E1  3000               	movlw	0
  8481  17E2  00D2               	movwf	___fladd@b
  8482  17E3                     l2454:
  8483  17E3  0864               	movf	___fladd@bexp,w
  8484  17E4  1D03               	btfss	3,2
  8485  17E5  2FE7               	goto	u3711
  8486  17E6  2FE8               	goto	u3710
  8487  17E7                     u3711:
  8488  17E7  2FE9               	goto	l2458
  8489  17E8                     u3710:
  8490  17E8                     l2456:
  8491  17E8  01E2               	clrf	___fladd@signs
  8492  17E9                     l2458:
  8493  17E9  1C64               	btfss	___fladd@bexp,0
  8494  17EA  2FEC               	goto	u3721
  8495  17EB  2FED               	goto	u3720
  8496  17EC                     u3721:
  8497  17EC  2FEF               	goto	l2462
  8498  17ED                     u3720:
  8499  17ED                     l2460:
  8500  17ED  17D4               	bsf	___fladd@b+2,7
  8501  17EE  2FF3               	goto	l626
  8502  17EF                     l2462:
  8503  17EF  307F               	movlw	127
  8504  17F0  00DA               	movwf	??___fladd
  8505  17F1  085A               	movf	??___fladd,w
  8506  17F2  05D4               	andwf	___fladd@b+2,f
  8507  17F3                     l626:
  8508  17F3  0864               	movf	___fladd@bexp,w
  8509  17F4  00DA               	movwf	??___fladd
  8510  17F5  1003               	clrc
  8511  17F6  0C5A               	rrf	??___fladd,w
  8512  17F7  00DB               	movwf	??___fladd+1
  8513  17F8  085B               	movf	??___fladd+1,w
  8514  17F9  00D5               	movwf	___fladd@b+3
  8515  17FA                     l2464:
  8516  17FA  1FE2               	btfss	___fladd@signs,7
  8517  17FB  2FFD               	goto	u3731
  8518  17FC  2FFE               	goto	u3730
  8519  17FD                     u3731:
  8520  17FD  2FFF               	goto	l627
  8521  17FE                     u3730:
  8522  17FE                     l2466:
  8523  17FE  17D5               	bsf	___fladd@b+3,7
  8524  17FF                     l627:
  8525  17FF                     l597:
  8526  17FF  0008               	return
  8527  1800                     __end_of___fladd:
  8528                           
  8529                           	psect	text20
  8530  1CDF                     __ptext20:	
  8531 ;; *************** function ___flneg *****************
  8532 ;; Defined at:
  8533 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\flneg.c"
  8534 ;; Parameters:    Size  Location     Type
  8535 ;;  f1              4    0[COMMON] unsigned char 
  8536 ;; Auto vars:     Size  Location     Type
  8537 ;;		None
  8538 ;; Return value:  Size  Location     Type
  8539 ;;                  4    0[COMMON] unsigned char 
  8540 ;; Registers used:
  8541 ;;		wreg
  8542 ;; Tracked objects:
  8543 ;;		On entry : 0/0
  8544 ;;		On exit  : 0/0
  8545 ;;		Unchanged: 0/0
  8546 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8547 ;;      Params:         4       0       0       0       0
  8548 ;;      Locals:         0       0       0       0       0
  8549 ;;      Temps:          0       0       0       0       0
  8550 ;;      Totals:         4       0       0       0       0
  8551 ;;Total ram usage:        4 bytes
  8552 ;; Hardware stack levels used: 1
  8553 ;; This function calls:
  8554 ;;		Nothing
  8555 ;; This function is called by:
  8556 ;;		_sprintf
  8557 ;; This function uses a non-reentrant model
  8558 ;;
  8559                           
  8560  1CDF                     ___flneg:	
  8561                           ;psect for function ___flneg
  8562                           
  8563  1CDF                     l2856:	
  8564                           ;incstack = 0
  8565                           ; Regs used in ___flneg: [wreg]
  8566                           
  8567  1CDF  0873               	movf	___flneg@f1+3,w
  8568  1CE0  0472               	iorwf	___flneg@f1+2,w
  8569  1CE1  0471               	iorwf	___flneg@f1+1,w
  8570  1CE2  0470               	iorwf	___flneg@f1,w
  8571  1CE3  1903               	skipnz
  8572  1CE4  2CE6               	goto	u4861
  8573  1CE5  2CE7               	goto	u4860
  8574  1CE6                     u4861:
  8575  1CE6  2CE9               	goto	l2860
  8576  1CE7                     u4860:
  8577  1CE7                     l2858:
  8578  1CE7  3080               	movlw	128
  8579  1CE8  06F3               	xorwf	___flneg@f1+3,f
  8580  1CE9                     l2860:
  8581  1CE9                     l456:
  8582  1CE9  0008               	return
  8583  1CEA                     __end_of___flneg:
  8584                           
  8585                           	psect	text21
  8586  1034                     __ptext21:	
  8587 ;; *************** function ___flge *****************
  8588 ;; Defined at:
  8589 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\flge.c"
  8590 ;; Parameters:    Size  Location     Type
  8591 ;;  ff1             4    0[COMMON] unsigned char 
  8592 ;;  ff2             4    4[COMMON] unsigned char 
  8593 ;; Auto vars:     Size  Location     Type
  8594 ;;		None
  8595 ;; Return value:  Size  Location     Type
  8596 ;;		None               void
  8597 ;; Registers used:
  8598 ;;		wreg, status,2, status,0
  8599 ;; Tracked objects:
  8600 ;;		On entry : 0/0
  8601 ;;		On exit  : 0/0
  8602 ;;		Unchanged: 0/0
  8603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8604 ;;      Params:         8       0       0       0       0
  8605 ;;      Locals:         0       0       0       0       0
  8606 ;;      Temps:          4       0       0       0       0
  8607 ;;      Totals:        12       0       0       0       0
  8608 ;;Total ram usage:       12 bytes
  8609 ;; Hardware stack levels used: 1
  8610 ;; This function calls:
  8611 ;;		Nothing
  8612 ;; This function is called by:
  8613 ;;		_sprintf
  8614 ;; This function uses a non-reentrant model
  8615 ;;
  8616                           
  8617  1034                     ___flge:	
  8618                           ;psect for function ___flge
  8619                           
  8620  1034                     l2836:	
  8621                           ;incstack = 0
  8622                           ; Regs used in ___flge: [wreg+status,2+status,0]
  8623                           
  8624  1034  3000               	movlw	0
  8625  1035  0570               	andwf	___flge@ff1,w
  8626  1036  00F8               	movwf	??___flge
  8627  1037  3000               	movlw	0
  8628  1038  0571               	andwf	___flge@ff1+1,w
  8629  1039  00F9               	movwf	??___flge+1
  8630  103A  3080               	movlw	128
  8631  103B  0572               	andwf	___flge@ff1+2,w
  8632  103C  00FA               	movwf	??___flge+2
  8633  103D  307F               	movlw	127
  8634  103E  0573               	andwf	___flge@ff1+3,w
  8635  103F  00FB               	movwf	??___flge+3
  8636  1040  087B               	movf	??___flge+3,w
  8637  1041  047A               	iorwf	??___flge+2,w
  8638  1042  0479               	iorwf	??___flge+1,w
  8639  1043  0478               	iorwf	??___flge,w
  8640  1044  1D03               	skipz
  8641  1045  2847               	goto	u4791
  8642  1046  2848               	goto	u4790
  8643  1047                     u4791:
  8644  1047  2850               	goto	l448
  8645  1048                     u4790:
  8646  1048                     l2838:
  8647  1048  3000               	movlw	0
  8648  1049  00F3               	movwf	___flge@ff1+3
  8649  104A  3000               	movlw	0
  8650  104B  00F2               	movwf	___flge@ff1+2
  8651  104C  3000               	movlw	0
  8652  104D  00F1               	movwf	___flge@ff1+1
  8653  104E  3000               	movlw	0
  8654  104F  00F0               	movwf	___flge@ff1
  8655  1050                     l448:
  8656  1050  3000               	movlw	0
  8657  1051  0574               	andwf	___flge@ff2,w
  8658  1052  00F8               	movwf	??___flge
  8659  1053  3000               	movlw	0
  8660  1054  0575               	andwf	___flge@ff2+1,w
  8661  1055  00F9               	movwf	??___flge+1
  8662  1056  3080               	movlw	128
  8663  1057  0576               	andwf	___flge@ff2+2,w
  8664  1058  00FA               	movwf	??___flge+2
  8665  1059  307F               	movlw	127
  8666  105A  0577               	andwf	___flge@ff2+3,w
  8667  105B  00FB               	movwf	??___flge+3
  8668  105C  087B               	movf	??___flge+3,w
  8669  105D  047A               	iorwf	??___flge+2,w
  8670  105E  0479               	iorwf	??___flge+1,w
  8671  105F  0478               	iorwf	??___flge,w
  8672  1060  1D03               	skipz
  8673  1061  2863               	goto	u4801
  8674  1062  2864               	goto	u4800
  8675  1063                     u4801:
  8676  1063  286C               	goto	l2842
  8677  1064                     u4800:
  8678  1064                     l2840:
  8679  1064  3000               	movlw	0
  8680  1065  00F7               	movwf	___flge@ff2+3
  8681  1066  3000               	movlw	0
  8682  1067  00F6               	movwf	___flge@ff2+2
  8683  1068  3000               	movlw	0
  8684  1069  00F5               	movwf	___flge@ff2+1
  8685  106A  3000               	movlw	0
  8686  106B  00F4               	movwf	___flge@ff2
  8687  106C                     l2842:
  8688  106C  1FF3               	btfss	___flge@ff1+3,7
  8689  106D  286F               	goto	u4811
  8690  106E  2870               	goto	u4810
  8691  106F                     u4811:
  8692  106F  2894               	goto	l2846
  8693  1070                     u4810:
  8694  1070                     l2844:
  8695  1070  3000               	movlw	0
  8696  1071  00F8               	movwf	??___flge
  8697  1072  3000               	movlw	0
  8698  1073  00F9               	movwf	??___flge+1
  8699  1074  3000               	movlw	0
  8700  1075  00FA               	movwf	??___flge+2
  8701  1076  3080               	movlw	128
  8702  1077  00FB               	movwf	??___flge+3
  8703  1078  0870               	movf	___flge@ff1,w
  8704  1079  02F8               	subwf	??___flge,f
  8705  107A  0871               	movf	___flge@ff1+1,w
  8706  107B  1C03               	skipc
  8707  107C  0F71               	incfsz	___flge@ff1+1,w
  8708  107D  287F               	goto	u4821
  8709  107E  2880               	goto	u4822
  8710  107F                     u4821:
  8711  107F  02F9               	subwf	??___flge+1,f
  8712  1080                     u4822:
  8713  1080  0872               	movf	___flge@ff1+2,w
  8714  1081  1C03               	skipc
  8715  1082  0F72               	incfsz	___flge@ff1+2,w
  8716  1083  2885               	goto	u4823
  8717  1084  2886               	goto	u4824
  8718  1085                     u4823:
  8719  1085  02FA               	subwf	??___flge+2,f
  8720  1086                     u4824:
  8721  1086  0873               	movf	___flge@ff1+3,w
  8722  1087  1C03               	skipc
  8723  1088  0F73               	incfsz	___flge@ff1+3,w
  8724  1089  288B               	goto	u4825
  8725  108A  288C               	goto	u4826
  8726  108B                     u4825:
  8727  108B  02FB               	subwf	??___flge+3,f
  8728  108C                     u4826:
  8729  108C  087B               	movf	??___flge+3,w
  8730  108D  00F3               	movwf	___flge@ff1+3
  8731  108E  087A               	movf	??___flge+2,w
  8732  108F  00F2               	movwf	___flge@ff1+2
  8733  1090  0879               	movf	??___flge+1,w
  8734  1091  00F1               	movwf	___flge@ff1+1
  8735  1092  0878               	movf	??___flge,w
  8736  1093  00F0               	movwf	___flge@ff1
  8737  1094                     l2846:
  8738  1094  1FF7               	btfss	___flge@ff2+3,7
  8739  1095  2897               	goto	u4831
  8740  1096  2898               	goto	u4830
  8741  1097                     u4831:
  8742  1097  28BC               	goto	l451
  8743  1098                     u4830:
  8744  1098                     l2848:
  8745  1098  3000               	movlw	0
  8746  1099  00F8               	movwf	??___flge
  8747  109A  3000               	movlw	0
  8748  109B  00F9               	movwf	??___flge+1
  8749  109C  3000               	movlw	0
  8750  109D  00FA               	movwf	??___flge+2
  8751  109E  3080               	movlw	128
  8752  109F  00FB               	movwf	??___flge+3
  8753  10A0  0874               	movf	___flge@ff2,w
  8754  10A1  02F8               	subwf	??___flge,f
  8755  10A2  0875               	movf	___flge@ff2+1,w
  8756  10A3  1C03               	skipc
  8757  10A4  0F75               	incfsz	___flge@ff2+1,w
  8758  10A5  28A7               	goto	u4841
  8759  10A6  28A8               	goto	u4842
  8760  10A7                     u4841:
  8761  10A7  02F9               	subwf	??___flge+1,f
  8762  10A8                     u4842:
  8763  10A8  0876               	movf	___flge@ff2+2,w
  8764  10A9  1C03               	skipc
  8765  10AA  0F76               	incfsz	___flge@ff2+2,w
  8766  10AB  28AD               	goto	u4843
  8767  10AC  28AE               	goto	u4844
  8768  10AD                     u4843:
  8769  10AD  02FA               	subwf	??___flge+2,f
  8770  10AE                     u4844:
  8771  10AE  0877               	movf	___flge@ff2+3,w
  8772  10AF  1C03               	skipc
  8773  10B0  0F77               	incfsz	___flge@ff2+3,w
  8774  10B1  28B3               	goto	u4845
  8775  10B2  28B4               	goto	u4846
  8776  10B3                     u4845:
  8777  10B3  02FB               	subwf	??___flge+3,f
  8778  10B4                     u4846:
  8779  10B4  087B               	movf	??___flge+3,w
  8780  10B5  00F7               	movwf	___flge@ff2+3
  8781  10B6  087A               	movf	??___flge+2,w
  8782  10B7  00F6               	movwf	___flge@ff2+2
  8783  10B8  0879               	movf	??___flge+1,w
  8784  10B9  00F5               	movwf	___flge@ff2+1
  8785  10BA  0878               	movf	??___flge,w
  8786  10BB  00F4               	movwf	___flge@ff2
  8787  10BC                     l451:
  8788  10BC  3080               	movlw	128
  8789  10BD  06F3               	xorwf	___flge@ff1+3,f
  8790  10BE  3080               	movlw	128
  8791  10BF  06F7               	xorwf	___flge@ff2+3,f
  8792  10C0  0877               	movf	___flge@ff2+3,w
  8793  10C1  0273               	subwf	___flge@ff1+3,w
  8794  10C2  1D03               	skipz
  8795  10C3  28CE               	goto	u4855
  8796  10C4  0876               	movf	___flge@ff2+2,w
  8797  10C5  0272               	subwf	___flge@ff1+2,w
  8798  10C6  1D03               	skipz
  8799  10C7  28CE               	goto	u4855
  8800  10C8  0875               	movf	___flge@ff2+1,w
  8801  10C9  0271               	subwf	___flge@ff1+1,w
  8802  10CA  1D03               	skipz
  8803  10CB  28CE               	goto	u4855
  8804  10CC  0874               	movf	___flge@ff2,w
  8805  10CD  0270               	subwf	___flge@ff1,w
  8806  10CE                     u4855:
  8807  10CE  1803               	skipnc
  8808  10CF  28D1               	goto	u4851
  8809  10D0  28D2               	goto	u4850
  8810  10D1                     u4851:
  8811  10D1  28D4               	goto	l2852
  8812  10D2                     u4850:
  8813  10D2                     l2850:
  8814  10D2  1003               	clrc
  8815  10D3  28D5               	goto	l452
  8816  10D4                     l2852:
  8817  10D4  1403               	setc
  8818  10D5                     l452:
  8819  10D5  0008               	return
  8820  10D6                     __end_of___flge:
  8821                           
  8822                           	psect	text22
  8823  1E36                     __ptext22:	
  8824 ;; *************** function ___fleq *****************
  8825 ;; Defined at:
  8826 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\fleq.c"
  8827 ;; Parameters:    Size  Location     Type
  8828 ;;  ff1             4    0[COMMON] unsigned char 
  8829 ;;  ff2             4    4[COMMON] unsigned char 
  8830 ;; Auto vars:     Size  Location     Type
  8831 ;;		None
  8832 ;; Return value:  Size  Location     Type
  8833 ;;		None               void
  8834 ;; Registers used:
  8835 ;;		wreg, status,2, status,0
  8836 ;; Tracked objects:
  8837 ;;		On entry : 0/0
  8838 ;;		On exit  : 0/0
  8839 ;;		Unchanged: 0/0
  8840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8841 ;;      Params:         8       0       0       0       0
  8842 ;;      Locals:         0       0       0       0       0
  8843 ;;      Temps:          4       0       0       0       0
  8844 ;;      Totals:        12       0       0       0       0
  8845 ;;Total ram usage:       12 bytes
  8846 ;; Hardware stack levels used: 1
  8847 ;; This function calls:
  8848 ;;		Nothing
  8849 ;; This function is called by:
  8850 ;;		_sprintf
  8851 ;; This function uses a non-reentrant model
  8852 ;;
  8853                           
  8854  1E36                     ___fleq:	
  8855                           ;psect for function ___fleq
  8856                           
  8857  1E36                     l2824:	
  8858                           ;incstack = 0
  8859                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  8860                           
  8861  1E36  3000               	movlw	0
  8862  1E37  0570               	andwf	___fleq@ff1,w
  8863  1E38  00F8               	movwf	??___fleq
  8864  1E39  3000               	movlw	0
  8865  1E3A  0571               	andwf	___fleq@ff1+1,w
  8866  1E3B  00F9               	movwf	??___fleq+1
  8867  1E3C  3080               	movlw	128
  8868  1E3D  0572               	andwf	___fleq@ff1+2,w
  8869  1E3E  00FA               	movwf	??___fleq+2
  8870  1E3F  307F               	movlw	127
  8871  1E40  0573               	andwf	___fleq@ff1+3,w
  8872  1E41  00FB               	movwf	??___fleq+3
  8873  1E42  087B               	movf	??___fleq+3,w
  8874  1E43  047A               	iorwf	??___fleq+2,w
  8875  1E44  0479               	iorwf	??___fleq+1,w
  8876  1E45  0478               	iorwf	??___fleq,w
  8877  1E46  1D03               	skipz
  8878  1E47  2E49               	goto	u4761
  8879  1E48  2E4A               	goto	u4760
  8880  1E49                     u4761:
  8881  1E49  2E52               	goto	l443
  8882  1E4A                     u4760:
  8883  1E4A                     l2826:
  8884  1E4A  3000               	movlw	0
  8885  1E4B  00F3               	movwf	___fleq@ff1+3
  8886  1E4C  3000               	movlw	0
  8887  1E4D  00F2               	movwf	___fleq@ff1+2
  8888  1E4E  3000               	movlw	0
  8889  1E4F  00F1               	movwf	___fleq@ff1+1
  8890  1E50  3000               	movlw	0
  8891  1E51  00F0               	movwf	___fleq@ff1
  8892  1E52                     l443:
  8893  1E52  3000               	movlw	0
  8894  1E53  0574               	andwf	___fleq@ff2,w
  8895  1E54  00F8               	movwf	??___fleq
  8896  1E55  3000               	movlw	0
  8897  1E56  0575               	andwf	___fleq@ff2+1,w
  8898  1E57  00F9               	movwf	??___fleq+1
  8899  1E58  3080               	movlw	128
  8900  1E59  0576               	andwf	___fleq@ff2+2,w
  8901  1E5A  00FA               	movwf	??___fleq+2
  8902  1E5B  307F               	movlw	127
  8903  1E5C  0577               	andwf	___fleq@ff2+3,w
  8904  1E5D  00FB               	movwf	??___fleq+3
  8905  1E5E  087B               	movf	??___fleq+3,w
  8906  1E5F  047A               	iorwf	??___fleq+2,w
  8907  1E60  0479               	iorwf	??___fleq+1,w
  8908  1E61  0478               	iorwf	??___fleq,w
  8909  1E62  1D03               	skipz
  8910  1E63  2E65               	goto	u4771
  8911  1E64  2E66               	goto	u4770
  8912  1E65                     u4771:
  8913  1E65  2E6E               	goto	l444
  8914  1E66                     u4770:
  8915  1E66                     l2828:
  8916  1E66  3000               	movlw	0
  8917  1E67  00F7               	movwf	___fleq@ff2+3
  8918  1E68  3000               	movlw	0
  8919  1E69  00F6               	movwf	___fleq@ff2+2
  8920  1E6A  3000               	movlw	0
  8921  1E6B  00F5               	movwf	___fleq@ff2+1
  8922  1E6C  3000               	movlw	0
  8923  1E6D  00F4               	movwf	___fleq@ff2
  8924  1E6E                     l444:
  8925  1E6E  0877               	movf	___fleq@ff2+3,w
  8926  1E6F  0673               	xorwf	___fleq@ff1+3,w
  8927  1E70  1D03               	skipz
  8928  1E71  2E7C               	goto	u4785
  8929  1E72  0876               	movf	___fleq@ff2+2,w
  8930  1E73  0672               	xorwf	___fleq@ff1+2,w
  8931  1E74  1D03               	skipz
  8932  1E75  2E7C               	goto	u4785
  8933  1E76  0875               	movf	___fleq@ff2+1,w
  8934  1E77  0671               	xorwf	___fleq@ff1+1,w
  8935  1E78  1D03               	skipz
  8936  1E79  2E7C               	goto	u4785
  8937  1E7A  0874               	movf	___fleq@ff2,w
  8938  1E7B  0670               	xorwf	___fleq@ff1,w
  8939  1E7C                     u4785:
  8940  1E7C  1903               	skipnz
  8941  1E7D  2E7F               	goto	u4781
  8942  1E7E  2E80               	goto	u4780
  8943  1E7F                     u4781:
  8944  1E7F  2E82               	goto	l2832
  8945  1E80                     u4780:
  8946  1E80                     l2830:
  8947  1E80  1003               	clrc
  8948  1E81  2E83               	goto	l445
  8949  1E82                     l2832:
  8950  1E82  1403               	setc
  8951  1E83                     l445:
  8952  1E83  0008               	return
  8953  1E84                     __end_of___fleq:
  8954                           
  8955                           	psect	text23
  8956  1190                     __ptext23:	
  8957 ;; *************** function ___fldiv *****************
  8958 ;; Defined at:
  8959 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\sprcdiv.c"
  8960 ;; Parameters:    Size  Location     Type
  8961 ;;  a               4   30[BANK0 ] unsigned char 
  8962 ;;  b               4   34[BANK0 ] unsigned char 
  8963 ;; Auto vars:     Size  Location     Type
  8964 ;;  grs             4   50[BANK0 ] unsigned long 
  8965 ;;  rem             4   43[BANK0 ] unsigned long 
  8966 ;;  new_exp         2   48[BANK0 ] int 
  8967 ;;  aexp            1   55[BANK0 ] unsigned char 
  8968 ;;  bexp            1   54[BANK0 ] unsigned char 
  8969 ;;  sign            1   47[BANK0 ] unsigned char 
  8970 ;; Return value:  Size  Location     Type
  8971 ;;                  4   30[BANK0 ] unsigned char 
  8972 ;; Registers used:
  8973 ;;		wreg, status,2, status,0, btemp+1
  8974 ;; Tracked objects:
  8975 ;;		On entry : 0/0
  8976 ;;		On exit  : 0/0
  8977 ;;		Unchanged: 0/0
  8978 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8979 ;;      Params:         0       8       0       0       0
  8980 ;;      Locals:         0      13       0       0       0
  8981 ;;      Temps:          0       5       0       0       0
  8982 ;;      Totals:         0      26       0       0       0
  8983 ;;Total ram usage:       26 bytes
  8984 ;; Hardware stack levels used: 1
  8985 ;; This function calls:
  8986 ;;		Nothing
  8987 ;; This function is called by:
  8988 ;;		_main
  8989 ;; This function uses a non-reentrant model
  8990 ;;
  8991                           
  8992  1190                     ___fldiv:	
  8993                           ;psect for function ___fldiv
  8994                           
  8995  1190                     l3238:	
  8996                           ;incstack = 0
  8997                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  8998                           
  8999  1190  1283               	bcf	3,5	;RP0=0, select bank0
  9000  1191  1303               	bcf	3,6	;RP1=0, select bank0
  9001  1192  0845               	movf	___fldiv@b+3,w
  9002  1193  3980               	andlw	128
  9003  1194  00C6               	movwf	??___fldiv
  9004  1195  0846               	movf	??___fldiv,w
  9005  1196  00CF               	movwf	___fldiv@sign
  9006  1197                     l3240:
  9007  1197  0845               	movf	___fldiv@b+3,w
  9008  1198  00C6               	movwf	??___fldiv
  9009  1199  0746               	addwf	??___fldiv,w
  9010  119A  00C7               	movwf	??___fldiv+1
  9011  119B  0847               	movf	??___fldiv+1,w
  9012  119C  00D6               	movwf	___fldiv@bexp
  9013  119D                     l3242:
  9014  119D  1FC4               	btfss	___fldiv@b+2,7
  9015  119E  29A0               	goto	u5561
  9016  119F  29A1               	goto	u5560
  9017  11A0                     u5561:
  9018  11A0  29A2               	goto	l3246
  9019  11A1                     u5560:
  9020  11A1                     l3244:
  9021  11A1  1456               	bsf	___fldiv@bexp,0
  9022  11A2                     l3246:
  9023  11A2  0856               	movf	___fldiv@bexp,w
  9024  11A3  1903               	btfsc	3,2
  9025  11A4  29A6               	goto	u5571
  9026  11A5  29A7               	goto	u5570
  9027  11A6                     u5571:
  9028  11A6  29B7               	goto	l3256
  9029  11A7                     u5570:
  9030  11A7                     l3248:
  9031  11A7  0A56               	incf	___fldiv@bexp,w
  9032  11A8  1D03               	btfss	3,2
  9033  11A9  29AB               	goto	u5581
  9034  11AA  29AC               	goto	u5580
  9035  11AB                     u5581:
  9036  11AB  29B4               	goto	l3252
  9037  11AC                     u5580:
  9038  11AC                     l3250:
  9039  11AC  3000               	movlw	0
  9040  11AD  00C5               	movwf	___fldiv@b+3
  9041  11AE  3000               	movlw	0
  9042  11AF  00C4               	movwf	___fldiv@b+2
  9043  11B0  3000               	movlw	0
  9044  11B1  00C3               	movwf	___fldiv@b+1
  9045  11B2  3000               	movlw	0
  9046  11B3  00C2               	movwf	___fldiv@b
  9047  11B4                     l3252:
  9048  11B4  17C4               	bsf	___fldiv@b+2,7
  9049  11B5                     l3254:
  9050  11B5  01C5               	clrf	___fldiv@b+3
  9051  11B6  29BF               	goto	l3258
  9052  11B7                     l3256:
  9053  11B7  3000               	movlw	0
  9054  11B8  00C5               	movwf	___fldiv@b+3
  9055  11B9  3000               	movlw	0
  9056  11BA  00C4               	movwf	___fldiv@b+2
  9057  11BB  3000               	movlw	0
  9058  11BC  00C3               	movwf	___fldiv@b+1
  9059  11BD  3000               	movlw	0
  9060  11BE  00C2               	movwf	___fldiv@b
  9061  11BF                     l3258:
  9062  11BF  0841               	movf	___fldiv@a+3,w
  9063  11C0  3980               	andlw	128
  9064  11C1  00C6               	movwf	??___fldiv
  9065  11C2  0846               	movf	??___fldiv,w
  9066  11C3  06CF               	xorwf	___fldiv@sign,f
  9067  11C4                     l3260:
  9068  11C4  0841               	movf	___fldiv@a+3,w
  9069  11C5  00C6               	movwf	??___fldiv
  9070  11C6  0746               	addwf	??___fldiv,w
  9071  11C7  00C7               	movwf	??___fldiv+1
  9072  11C8  0847               	movf	??___fldiv+1,w
  9073  11C9  00D7               	movwf	___fldiv@aexp
  9074  11CA                     l3262:
  9075  11CA  1FC0               	btfss	___fldiv@a+2,7
  9076  11CB  29CD               	goto	u5591
  9077  11CC  29CE               	goto	u5590
  9078  11CD                     u5591:
  9079  11CD  29CF               	goto	l3266
  9080  11CE                     u5590:
  9081  11CE                     l3264:
  9082  11CE  1457               	bsf	___fldiv@aexp,0
  9083  11CF                     l3266:
  9084  11CF  0857               	movf	___fldiv@aexp,w
  9085  11D0  1903               	btfsc	3,2
  9086  11D1  29D3               	goto	u5601
  9087  11D2  29D4               	goto	u5600
  9088  11D3                     u5601:
  9089  11D3  29E4               	goto	l3276
  9090  11D4                     u5600:
  9091  11D4                     l3268:
  9092  11D4  0A57               	incf	___fldiv@aexp,w
  9093  11D5  1D03               	btfss	3,2
  9094  11D6  29D8               	goto	u5611
  9095  11D7  29D9               	goto	u5610
  9096  11D8                     u5611:
  9097  11D8  29E1               	goto	l3272
  9098  11D9                     u5610:
  9099  11D9                     l3270:
  9100  11D9  3000               	movlw	0
  9101  11DA  00C1               	movwf	___fldiv@a+3
  9102  11DB  3000               	movlw	0
  9103  11DC  00C0               	movwf	___fldiv@a+2
  9104  11DD  3000               	movlw	0
  9105  11DE  00BF               	movwf	___fldiv@a+1
  9106  11DF  3000               	movlw	0
  9107  11E0  00BE               	movwf	___fldiv@a
  9108  11E1                     l3272:
  9109  11E1  17C0               	bsf	___fldiv@a+2,7
  9110  11E2                     l3274:
  9111  11E2  01C1               	clrf	___fldiv@a+3
  9112  11E3  29EC               	goto	l640
  9113  11E4                     l3276:
  9114  11E4  3000               	movlw	0
  9115  11E5  00C1               	movwf	___fldiv@a+3
  9116  11E6  3000               	movlw	0
  9117  11E7  00C0               	movwf	___fldiv@a+2
  9118  11E8  3000               	movlw	0
  9119  11E9  00BF               	movwf	___fldiv@a+1
  9120  11EA  3000               	movlw	0
  9121  11EB  00BE               	movwf	___fldiv@a
  9122  11EC                     l640:
  9123  11EC  0841               	movf	___fldiv@a+3,w
  9124  11ED  0440               	iorwf	___fldiv@a+2,w
  9125  11EE  043F               	iorwf	___fldiv@a+1,w
  9126  11EF  043E               	iorwf	___fldiv@a,w
  9127  11F0  1D03               	skipz
  9128  11F1  29F3               	goto	u5621
  9129  11F2  29F4               	goto	u5620
  9130  11F3                     u5621:
  9131  11F3  2A0D               	goto	l3286
  9132  11F4                     u5620:
  9133  11F4                     l3278:
  9134  11F4  3000               	movlw	0
  9135  11F5  00C5               	movwf	___fldiv@b+3
  9136  11F6  3000               	movlw	0
  9137  11F7  00C4               	movwf	___fldiv@b+2
  9138  11F8  3000               	movlw	0
  9139  11F9  00C3               	movwf	___fldiv@b+1
  9140  11FA  3000               	movlw	0
  9141  11FB  00C2               	movwf	___fldiv@b
  9142  11FC  3080               	movlw	128
  9143  11FD  04C4               	iorwf	___fldiv@b+2,f
  9144  11FE  307F               	movlw	127
  9145  11FF  04C5               	iorwf	___fldiv@b+3,f
  9146  1200                     l3280:
  9147  1200  084F               	movf	___fldiv@sign,w
  9148  1201  00C6               	movwf	??___fldiv
  9149  1202  0846               	movf	??___fldiv,w
  9150  1203  04C5               	iorwf	___fldiv@b+3,f
  9151  1204                     l3282:
  9152  1204  0845               	movf	___fldiv@b+3,w
  9153  1205  00C1               	movwf	?___fldiv+3
  9154  1206  0844               	movf	___fldiv@b+2,w
  9155  1207  00C0               	movwf	?___fldiv+2
  9156  1208  0843               	movf	___fldiv@b+1,w
  9157  1209  00BF               	movwf	?___fldiv+1
  9158  120A  0842               	movf	___fldiv@b,w
  9159  120B  00BE               	movwf	?___fldiv
  9160  120C  2B6C               	goto	l642
  9161  120D                     l3286:
  9162  120D  0856               	movf	___fldiv@bexp,w
  9163  120E  1D03               	btfss	3,2
  9164  120F  2A11               	goto	u5631
  9165  1210  2A12               	goto	u5630
  9166  1211                     u5631:
  9167  1211  2A1B               	goto	l3292
  9168  1212                     u5630:
  9169  1212                     l3288:
  9170  1212  3000               	movlw	0
  9171  1213  00C1               	movwf	?___fldiv+3
  9172  1214  3000               	movlw	0
  9173  1215  00C0               	movwf	?___fldiv+2
  9174  1216  3000               	movlw	0
  9175  1217  00BF               	movwf	?___fldiv+1
  9176  1218  3000               	movlw	0
  9177  1219  00BE               	movwf	?___fldiv
  9178  121A  2B6C               	goto	l642
  9179  121B                     l3292:
  9180  121B  0856               	movf	___fldiv@bexp,w
  9181  121C  00C6               	movwf	??___fldiv
  9182  121D  01C7               	clrf	??___fldiv+1
  9183  121E  0847               	movf	??___fldiv+1,w
  9184  121F  00C9               	movwf	??___fldiv+3
  9185  1220  0857               	movf	___fldiv@aexp,w
  9186  1221  0246               	subwf	??___fldiv,w
  9187  1222  00C8               	movwf	??___fldiv+2
  9188  1223  1C03               	skipc
  9189  1224  03C9               	decf	??___fldiv+3,f
  9190  1225  0848               	movf	??___fldiv+2,w
  9191  1226  3E7F               	addlw	127
  9192  1227  00D0               	movwf	___fldiv@new_exp
  9193  1228  0849               	movf	??___fldiv+3,w
  9194  1229  1803               	skipnc
  9195  122A  3E01               	addlw	1
  9196  122B  3E00               	addlw	0
  9197  122C  00D1               	movwf	___fldiv@new_exp+1
  9198  122D                     l3294:
  9199  122D  0845               	movf	___fldiv@b+3,w
  9200  122E  00CE               	movwf	___fldiv@rem+3
  9201  122F  0844               	movf	___fldiv@b+2,w
  9202  1230  00CD               	movwf	___fldiv@rem+2
  9203  1231  0843               	movf	___fldiv@b+1,w
  9204  1232  00CC               	movwf	___fldiv@rem+1
  9205  1233  0842               	movf	___fldiv@b,w
  9206  1234  00CB               	movwf	___fldiv@rem
  9207  1235                     l3296:
  9208  1235  3000               	movlw	0
  9209  1236  00C5               	movwf	___fldiv@b+3
  9210  1237  3000               	movlw	0
  9211  1238  00C4               	movwf	___fldiv@b+2
  9212  1239  3000               	movlw	0
  9213  123A  00C3               	movwf	___fldiv@b+1
  9214  123B  3000               	movlw	0
  9215  123C  00C2               	movwf	___fldiv@b
  9216  123D                     l3298:
  9217  123D  3000               	movlw	0
  9218  123E  00D5               	movwf	___fldiv@grs+3
  9219  123F  3000               	movlw	0
  9220  1240  00D4               	movwf	___fldiv@grs+2
  9221  1241  3000               	movlw	0
  9222  1242  00D3               	movwf	___fldiv@grs+1
  9223  1243  3000               	movlw	0
  9224  1244  00D2               	movwf	___fldiv@grs
  9225  1245                     l3300:
  9226  1245  01D7               	clrf	___fldiv@aexp
  9227  1246  2A91               	goto	l3320
  9228  1247                     l3302:
  9229  1247  0857               	movf	___fldiv@aexp,w
  9230  1248  1903               	btfsc	3,2
  9231  1249  2A4B               	goto	u5641
  9232  124A  2A4C               	goto	u5640
  9233  124B                     u5641:
  9234  124B  2A6C               	goto	l3312
  9235  124C                     u5640:
  9236  124C                     l3304:
  9237  124C  3001               	movlw	1
  9238  124D  00C6               	movwf	??___fldiv
  9239  124E                     u5655:
  9240  124E  1003               	clrc
  9241  124F  0DCB               	rlf	___fldiv@rem,f
  9242  1250  0DCC               	rlf	___fldiv@rem+1,f
  9243  1251  0DCD               	rlf	___fldiv@rem+2,f
  9244  1252  0DCE               	rlf	___fldiv@rem+3,f
  9245  1253  0BC6               	decfsz	??___fldiv,f
  9246  1254  2A4E               	goto	u5655
  9247  1255  3001               	movlw	1
  9248  1256  00C6               	movwf	??___fldiv
  9249  1257                     u5665:
  9250  1257  1003               	clrc
  9251  1258  0DC2               	rlf	___fldiv@b,f
  9252  1259  0DC3               	rlf	___fldiv@b+1,f
  9253  125A  0DC4               	rlf	___fldiv@b+2,f
  9254  125B  0DC5               	rlf	___fldiv@b+3,f
  9255  125C  0BC6               	decfsz	??___fldiv,f
  9256  125D  2A57               	goto	u5665
  9257  125E                     l3306:
  9258  125E  1FD5               	btfss	___fldiv@grs+3,7
  9259  125F  2A61               	goto	u5671
  9260  1260  2A62               	goto	u5670
  9261  1261                     u5671:
  9262  1261  2A63               	goto	l3310
  9263  1262                     u5670:
  9264  1262                     l3308:
  9265  1262  1442               	bsf	___fldiv@b,0
  9266  1263                     l3310:
  9267  1263  3001               	movlw	1
  9268  1264  00C6               	movwf	??___fldiv
  9269  1265                     u5685:
  9270  1265  1003               	clrc
  9271  1266  0DD2               	rlf	___fldiv@grs,f
  9272  1267  0DD3               	rlf	___fldiv@grs+1,f
  9273  1268  0DD4               	rlf	___fldiv@grs+2,f
  9274  1269  0DD5               	rlf	___fldiv@grs+3,f
  9275  126A  0BC6               	decfsz	??___fldiv,f
  9276  126B  2A65               	goto	u5685
  9277  126C                     l3312:
  9278  126C  0841               	movf	___fldiv@a+3,w
  9279  126D  024E               	subwf	___fldiv@rem+3,w
  9280  126E  1D03               	skipz
  9281  126F  2A7A               	goto	u5695
  9282  1270  0840               	movf	___fldiv@a+2,w
  9283  1271  024D               	subwf	___fldiv@rem+2,w
  9284  1272  1D03               	skipz
  9285  1273  2A7A               	goto	u5695
  9286  1274  083F               	movf	___fldiv@a+1,w
  9287  1275  024C               	subwf	___fldiv@rem+1,w
  9288  1276  1D03               	skipz
  9289  1277  2A7A               	goto	u5695
  9290  1278  083E               	movf	___fldiv@a,w
  9291  1279  024B               	subwf	___fldiv@rem,w
  9292  127A                     u5695:
  9293  127A  1C03               	skipc
  9294  127B  2A7D               	goto	u5691
  9295  127C  2A7E               	goto	u5690
  9296  127D                     u5691:
  9297  127D  2A8D               	goto	l3318
  9298  127E                     u5690:
  9299  127E                     l3314:
  9300  127E  1755               	bsf	___fldiv@grs+3,6
  9301  127F                     l3316:
  9302  127F  083E               	movf	___fldiv@a,w
  9303  1280  02CB               	subwf	___fldiv@rem,f
  9304  1281  083F               	movf	___fldiv@a+1,w
  9305  1282  1C03               	skipc
  9306  1283  0F3F               	incfsz	___fldiv@a+1,w
  9307  1284  02CC               	subwf	___fldiv@rem+1,f
  9308  1285  0840               	movf	___fldiv@a+2,w
  9309  1286  1C03               	skipc
  9310  1287  0F40               	incfsz	___fldiv@a+2,w
  9311  1288  02CD               	subwf	___fldiv@rem+2,f
  9312  1289  0841               	movf	___fldiv@a+3,w
  9313  128A  1C03               	skipc
  9314  128B  0F41               	incfsz	___fldiv@a+3,w
  9315  128C  02CE               	subwf	___fldiv@rem+3,f
  9316  128D                     l3318:
  9317  128D  3001               	movlw	1
  9318  128E  00C6               	movwf	??___fldiv
  9319  128F  0846               	movf	??___fldiv,w
  9320  1290  07D7               	addwf	___fldiv@aexp,f
  9321  1291                     l3320:
  9322  1291  301A               	movlw	26
  9323  1292  0257               	subwf	___fldiv@aexp,w
  9324  1293  1C03               	skipc
  9325  1294  2A96               	goto	u5701
  9326  1295  2A97               	goto	u5700
  9327  1296                     u5701:
  9328  1296  2A47               	goto	l3302
  9329  1297                     u5700:
  9330  1297                     l3322:
  9331  1297  084E               	movf	___fldiv@rem+3,w
  9332  1298  044D               	iorwf	___fldiv@rem+2,w
  9333  1299  044C               	iorwf	___fldiv@rem+1,w
  9334  129A  044B               	iorwf	___fldiv@rem,w
  9335  129B  1903               	skipnz
  9336  129C  2A9E               	goto	u5711
  9337  129D  2A9F               	goto	u5710
  9338  129E                     u5711:
  9339  129E  2ABE               	goto	l3336
  9340  129F                     u5710:
  9341  129F                     l3324:
  9342  129F  1452               	bsf	___fldiv@grs,0
  9343  12A0  2ABE               	goto	l3336
  9344  12A1                     l3326:
  9345  12A1  3001               	movlw	1
  9346  12A2  00C6               	movwf	??___fldiv
  9347  12A3                     u5725:
  9348  12A3  1003               	clrc
  9349  12A4  0DC2               	rlf	___fldiv@b,f
  9350  12A5  0DC3               	rlf	___fldiv@b+1,f
  9351  12A6  0DC4               	rlf	___fldiv@b+2,f
  9352  12A7  0DC5               	rlf	___fldiv@b+3,f
  9353  12A8  0BC6               	decfsz	??___fldiv,f
  9354  12A9  2AA3               	goto	u5725
  9355  12AA                     l3328:
  9356  12AA  1FD5               	btfss	___fldiv@grs+3,7
  9357  12AB  2AAD               	goto	u5731
  9358  12AC  2AAE               	goto	u5730
  9359  12AD                     u5731:
  9360  12AD  2AAF               	goto	l3332
  9361  12AE                     u5730:
  9362  12AE                     l3330:
  9363  12AE  1442               	bsf	___fldiv@b,0
  9364  12AF                     l3332:
  9365  12AF  3001               	movlw	1
  9366  12B0  00C6               	movwf	??___fldiv
  9367  12B1                     u5745:
  9368  12B1  1003               	clrc
  9369  12B2  0DD2               	rlf	___fldiv@grs,f
  9370  12B3  0DD3               	rlf	___fldiv@grs+1,f
  9371  12B4  0DD4               	rlf	___fldiv@grs+2,f
  9372  12B5  0DD5               	rlf	___fldiv@grs+3,f
  9373  12B6  0BC6               	decfsz	??___fldiv,f
  9374  12B7  2AB1               	goto	u5745
  9375  12B8                     l3334:
  9376  12B8  30FF               	movlw	255
  9377  12B9  07D0               	addwf	___fldiv@new_exp,f
  9378  12BA  1803               	skipnc
  9379  12BB  0AD1               	incf	___fldiv@new_exp+1,f
  9380  12BC  30FF               	movlw	255
  9381  12BD  07D1               	addwf	___fldiv@new_exp+1,f
  9382  12BE                     l3336:
  9383  12BE  1FC4               	btfss	___fldiv@b+2,7
  9384  12BF  2AC1               	goto	u5751
  9385  12C0  2AC2               	goto	u5750
  9386  12C1                     u5751:
  9387  12C1  2AA1               	goto	l3326
  9388  12C2                     u5750:
  9389  12C2                     l3338:
  9390  12C2  01D7               	clrf	___fldiv@aexp
  9391  12C3                     l3340:
  9392  12C3  1FD5               	btfss	___fldiv@grs+3,7
  9393  12C4  2AC6               	goto	u5761
  9394  12C5  2AC7               	goto	u5760
  9395  12C6                     u5761:
  9396  12C6  2AE3               	goto	l3348
  9397  12C7                     u5760:
  9398  12C7                     l3342:
  9399  12C7  30FF               	movlw	255
  9400  12C8  0552               	andwf	___fldiv@grs,w
  9401  12C9  00C6               	movwf	??___fldiv
  9402  12CA  30FF               	movlw	255
  9403  12CB  0553               	andwf	___fldiv@grs+1,w
  9404  12CC  00C7               	movwf	??___fldiv+1
  9405  12CD  30FF               	movlw	255
  9406  12CE  0554               	andwf	___fldiv@grs+2,w
  9407  12CF  00C8               	movwf	??___fldiv+2
  9408  12D0  307F               	movlw	127
  9409  12D1  0555               	andwf	___fldiv@grs+3,w
  9410  12D2  00C9               	movwf	??___fldiv+3
  9411  12D3  0849               	movf	??___fldiv+3,w
  9412  12D4  0448               	iorwf	??___fldiv+2,w
  9413  12D5  0447               	iorwf	??___fldiv+1,w
  9414  12D6  0446               	iorwf	??___fldiv,w
  9415  12D7  1903               	skipnz
  9416  12D8  2ADA               	goto	u5771
  9417  12D9  2ADB               	goto	u5770
  9418  12DA                     u5771:
  9419  12DA  2ADE               	goto	l656
  9420  12DB                     u5770:
  9421  12DB                     l3344:
  9422  12DB  01D7               	clrf	___fldiv@aexp
  9423  12DC  0AD7               	incf	___fldiv@aexp,f
  9424  12DD  2AE3               	goto	l3348
  9425  12DE                     l656:
  9426  12DE  1C42               	btfss	___fldiv@b,0
  9427  12DF  2AE1               	goto	u5781
  9428  12E0  2AE2               	goto	u5780
  9429  12E1                     u5781:
  9430  12E1  2AE3               	goto	l3348
  9431  12E2                     u5780:
  9432  12E2  2ADB               	goto	l3344
  9433  12E3                     l3348:
  9434  12E3  0857               	movf	___fldiv@aexp,w
  9435  12E4  1903               	btfsc	3,2
  9436  12E5  2AE7               	goto	u5791
  9437  12E6  2AE8               	goto	u5790
  9438  12E7                     u5791:
  9439  12E7  2B19               	goto	l3358
  9440  12E8                     u5790:
  9441  12E8                     l3350:
  9442  12E8  3001               	movlw	1
  9443  12E9  07C2               	addwf	___fldiv@b,f
  9444  12EA  3000               	movlw	0
  9445  12EB  1803               	skipnc
  9446  12EC  3001               	movlw	1
  9447  12ED  07C3               	addwf	___fldiv@b+1,f
  9448  12EE  3000               	movlw	0
  9449  12EF  1803               	skipnc
  9450  12F0  3001               	movlw	1
  9451  12F1  07C4               	addwf	___fldiv@b+2,f
  9452  12F2  3000               	movlw	0
  9453  12F3  1803               	skipnc
  9454  12F4  3001               	movlw	1
  9455  12F5  07C5               	addwf	___fldiv@b+3,f
  9456  12F6                     l3352:
  9457  12F6  1C45               	btfss	___fldiv@b+3,0
  9458  12F7  2AF9               	goto	u5801
  9459  12F8  2AFA               	goto	u5800
  9460  12F9                     u5801:
  9461  12F9  2B19               	goto	l3358
  9462  12FA                     u5800:
  9463  12FA                     l3354:
  9464  12FA  0842               	movf	___fldiv@b,w
  9465  12FB  00C6               	movwf	??___fldiv
  9466  12FC  0843               	movf	___fldiv@b+1,w
  9467  12FD  00C7               	movwf	??___fldiv+1
  9468  12FE  0844               	movf	___fldiv@b+2,w
  9469  12FF  00C8               	movwf	??___fldiv+2
  9470  1300  0845               	movf	___fldiv@b+3,w
  9471  1301  00C9               	movwf	??___fldiv+3
  9472  1302  3001               	movlw	1
  9473  1303  00CA               	movwf	??___fldiv+4
  9474  1304                     u5815:
  9475  1304  0D49               	rlf	??___fldiv+3,w
  9476  1305  0CC9               	rrf	??___fldiv+3,f
  9477  1306  0CC8               	rrf	??___fldiv+2,f
  9478  1307  0CC7               	rrf	??___fldiv+1,f
  9479  1308  0CC6               	rrf	??___fldiv,f
  9480  1309                     u5810:
  9481  1309  0BCA               	decfsz	??___fldiv+4,f
  9482  130A  2B04               	goto	u5815
  9483  130B  0849               	movf	??___fldiv+3,w
  9484  130C  00C5               	movwf	___fldiv@b+3
  9485  130D  0848               	movf	??___fldiv+2,w
  9486  130E  00C4               	movwf	___fldiv@b+2
  9487  130F  0847               	movf	??___fldiv+1,w
  9488  1310  00C3               	movwf	___fldiv@b+1
  9489  1311  0846               	movf	??___fldiv,w
  9490  1312  00C2               	movwf	___fldiv@b
  9491  1313                     l3356:
  9492  1313  3001               	movlw	1
  9493  1314  07D0               	addwf	___fldiv@new_exp,f
  9494  1315  1803               	skipnc
  9495  1316  0AD1               	incf	___fldiv@new_exp+1,f
  9496  1317  3000               	movlw	0
  9497  1318  07D1               	addwf	___fldiv@new_exp+1,f
  9498  1319                     l3358:
  9499  1319  0851               	movf	___fldiv@new_exp+1,w
  9500  131A  3A80               	xorlw	128
  9501  131B  00FF               	movwf	btemp+1
  9502  131C  3080               	movlw	128
  9503  131D  027F               	subwf	btemp+1,w
  9504  131E  1D03               	skipz
  9505  131F  2B22               	goto	u5825
  9506  1320  30FF               	movlw	255
  9507  1321  0250               	subwf	___fldiv@new_exp,w
  9508  1322                     u5825:
  9509  1322  1C03               	skipc
  9510  1323  2B25               	goto	u5821
  9511  1324  2B26               	goto	u5820
  9512  1325                     u5821:
  9513  1325  2B34               	goto	l3362
  9514  1326                     u5820:
  9515  1326                     l3360:
  9516  1326  30FF               	movlw	255
  9517  1327  1283               	bcf	3,5	;RP0=0, select bank0
  9518  1328  1303               	bcf	3,6	;RP1=0, select bank0
  9519  1329  00D0               	movwf	___fldiv@new_exp
  9520  132A  3000               	movlw	0
  9521  132B  00D1               	movwf	___fldiv@new_exp+1
  9522  132C  3000               	movlw	0
  9523  132D  00C5               	movwf	___fldiv@b+3
  9524  132E  3000               	movlw	0
  9525  132F  00C4               	movwf	___fldiv@b+2
  9526  1330  3000               	movlw	0
  9527  1331  00C3               	movwf	___fldiv@b+1
  9528  1332  3000               	movlw	0
  9529  1333  00C2               	movwf	___fldiv@b
  9530  1334                     l3362:
  9531  1334  1283               	bcf	3,5	;RP0=0, select bank0
  9532  1335  1303               	bcf	3,6	;RP1=0, select bank0
  9533  1336  0851               	movf	___fldiv@new_exp+1,w
  9534  1337  3A80               	xorlw	128
  9535  1338  00FF               	movwf	btemp+1
  9536  1339  3080               	movlw	128
  9537  133A  027F               	subwf	btemp+1,w
  9538  133B  1D03               	skipz
  9539  133C  2B3F               	goto	u5835
  9540  133D  3001               	movlw	1
  9541  133E  0250               	subwf	___fldiv@new_exp,w
  9542  133F                     u5835:
  9543  133F  1803               	skipnc
  9544  1340  2B42               	goto	u5831
  9545  1341  2B43               	goto	u5830
  9546  1342                     u5831:
  9547  1342  2B50               	goto	l662
  9548  1343                     u5830:
  9549  1343                     l3364:
  9550  1343  1283               	bcf	3,5	;RP0=0, select bank0
  9551  1344  1303               	bcf	3,6	;RP1=0, select bank0
  9552  1345  01D0               	clrf	___fldiv@new_exp
  9553  1346  01D1               	clrf	___fldiv@new_exp+1
  9554  1347                     l3366:
  9555  1347  3000               	movlw	0
  9556  1348  00C5               	movwf	___fldiv@b+3
  9557  1349  3000               	movlw	0
  9558  134A  00C4               	movwf	___fldiv@b+2
  9559  134B  3000               	movlw	0
  9560  134C  00C3               	movwf	___fldiv@b+1
  9561  134D  3000               	movlw	0
  9562  134E  00C2               	movwf	___fldiv@b
  9563  134F                     l3368:
  9564  134F  01CF               	clrf	___fldiv@sign
  9565  1350                     l662:
  9566  1350  1283               	bcf	3,5	;RP0=0, select bank0
  9567  1351  1303               	bcf	3,6	;RP1=0, select bank0
  9568  1352  0850               	movf	___fldiv@new_exp,w
  9569  1353  00C6               	movwf	??___fldiv
  9570  1354  0846               	movf	??___fldiv,w
  9571  1355  00D6               	movwf	___fldiv@bexp
  9572  1356                     l3370:
  9573  1356  1C56               	btfss	___fldiv@bexp,0
  9574  1357  2B59               	goto	u5841
  9575  1358  2B5A               	goto	u5840
  9576  1359                     u5841:
  9577  1359  2B5C               	goto	l3374
  9578  135A                     u5840:
  9579  135A                     l3372:
  9580  135A  17C4               	bsf	___fldiv@b+2,7
  9581  135B  2B60               	goto	l664
  9582  135C                     l3374:
  9583  135C  307F               	movlw	127
  9584  135D  00C6               	movwf	??___fldiv
  9585  135E  0846               	movf	??___fldiv,w
  9586  135F  05C4               	andwf	___fldiv@b+2,f
  9587  1360                     l664:
  9588  1360  0856               	movf	___fldiv@bexp,w
  9589  1361  00C6               	movwf	??___fldiv
  9590  1362  1003               	clrc
  9591  1363  0C46               	rrf	??___fldiv,w
  9592  1364  00C7               	movwf	??___fldiv+1
  9593  1365  0847               	movf	??___fldiv+1,w
  9594  1366  00C5               	movwf	___fldiv@b+3
  9595  1367  084F               	movf	___fldiv@sign,w
  9596  1368  00C6               	movwf	??___fldiv
  9597  1369  0846               	movf	??___fldiv,w
  9598  136A  04C5               	iorwf	___fldiv@b+3,f
  9599  136B  2A04               	goto	l3282
  9600  136C                     l642:
  9601  136C  0008               	return
  9602  136D                     __end_of___fldiv:
  9603                           
  9604                           	psect	text24
  9605  1D0F                     __ptext24:	
  9606 ;; *************** function _UART_SendData *****************
  9607 ;; Defined at:
  9608 ;;		line 36 in file "USART.c"
  9609 ;; Parameters:    Size  Location     Type
  9610 ;;  pData           1    wreg     PTR unsigned char 
  9611 ;;		 -> bufferTx(20), 
  9612 ;;  Size            1    1[COMMON] unsigned char 
  9613 ;; Auto vars:     Size  Location     Type
  9614 ;;  pData           1    3[COMMON] PTR unsigned char 
  9615 ;;		 -> bufferTx(20), 
  9616 ;; Return value:  Size  Location     Type
  9617 ;;                  1    wreg      void 
  9618 ;; Registers used:
  9619 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9620 ;; Tracked objects:
  9621 ;;		On entry : 0/0
  9622 ;;		On exit  : 0/0
  9623 ;;		Unchanged: 0/0
  9624 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9625 ;;      Params:         1       0       0       0       0
  9626 ;;      Locals:         1       0       0       0       0
  9627 ;;      Temps:          1       0       0       0       0
  9628 ;;      Totals:         3       0       0       0       0
  9629 ;;Total ram usage:        3 bytes
  9630 ;; Hardware stack levels used: 1
  9631 ;; Hardware stack levels required when called: 1
  9632 ;; This function calls:
  9633 ;;		_UART_Transmit
  9634 ;; This function is called by:
  9635 ;;		_main
  9636 ;; This function uses a non-reentrant model
  9637 ;;
  9638                           
  9639  1D0F                     _UART_SendData:	
  9640                           ;psect for function _UART_SendData
  9641                           
  9642                           
  9643                           ;incstack = 0
  9644                           ; Regs used in _UART_SendData: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9645                           ;UART_SendData@pData stored from wreg
  9646  1D0F  00F3               	movwf	UART_SendData@pData
  9647  1D10                     l3230:
  9648                           
  9649                           ;USART.c: 37:     while(Size-->0){
  9650  1D10  2D1E               	goto	l3236
  9651  1D11                     l3232:
  9652                           
  9653                           ;USART.c: 38:   UART_Transmit(*pData);
  9654  1D11  0873               	movf	UART_SendData@pData,w
  9655  1D12  0084               	movwf	4
  9656  1D13  1383               	bcf	3,7	;select IRP bank0
  9657  1D14  0800               	movf	0,w
  9658  1D15  160A  118A  2000  160A  158A  	fcall	_UART_Transmit
  9659  1D1A                     l3234:
  9660                           
  9661                           ;USART.c: 39:    pData++;
  9662  1D1A  3001               	movlw	1
  9663  1D1B  00F2               	movwf	??_UART_SendData
  9664  1D1C  0872               	movf	??_UART_SendData,w
  9665  1D1D  07F3               	addwf	UART_SendData@pData,f
  9666  1D1E                     l3236:
  9667                           
  9668                           ;USART.c: 37:     while(Size-->0){
  9669  1D1E  3001               	movlw	1
  9670  1D1F  02F1               	subwf	UART_SendData@Size,f
  9671  1D20  0A71               	incf	UART_SendData@Size,w
  9672  1D21  1D03               	btfss	3,2
  9673  1D22  2D24               	goto	u5551
  9674  1D23  2D25               	goto	u5550
  9675  1D24                     u5551:
  9676  1D24  2D11               	goto	l3232
  9677  1D25                     u5550:
  9678  1D25                     l78:
  9679  1D25  0008               	return
  9680  1D26                     __end_of_UART_SendData:
  9681                           
  9682                           	psect	text25
  9683  1000                     __ptext25:	
  9684 ;; *************** function _UART_Transmit *****************
  9685 ;; Defined at:
  9686 ;;		line 30 in file "USART.c"
  9687 ;; Parameters:    Size  Location     Type
  9688 ;;  data            1    wreg     unsigned char 
  9689 ;; Auto vars:     Size  Location     Type
  9690 ;;  data            1    0[COMMON] unsigned char 
  9691 ;; Return value:  Size  Location     Type
  9692 ;;                  1    wreg      void 
  9693 ;; Registers used:
  9694 ;;		wreg
  9695 ;; Tracked objects:
  9696 ;;		On entry : 0/0
  9697 ;;		On exit  : 0/0
  9698 ;;		Unchanged: 0/0
  9699 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9700 ;;      Params:         0       0       0       0       0
  9701 ;;      Locals:         1       0       0       0       0
  9702 ;;      Temps:          0       0       0       0       0
  9703 ;;      Totals:         1       0       0       0       0
  9704 ;;Total ram usage:        1 bytes
  9705 ;; Hardware stack levels used: 1
  9706 ;; This function calls:
  9707 ;;		Nothing
  9708 ;; This function is called by:
  9709 ;;		_UART_SendData
  9710 ;; This function uses a non-reentrant model
  9711 ;;
  9712                           
  9713  1000                     _UART_Transmit:	
  9714                           ;psect for function _UART_Transmit
  9715                           
  9716                           
  9717                           ;incstack = 0
  9718                           ; Regs used in _UART_Transmit: [wreg]
  9719                           ;UART_Transmit@data stored from wreg
  9720  1000  00F0               	movwf	UART_Transmit@data
  9721  1001                     l2608:
  9722  1001                     l69:	
  9723                           ;USART.c: 31:     while(!TRMT);
  9724                           
  9725  1001  1683               	bsf	3,5	;RP0=1, select bank1
  9726  1002  1303               	bcf	3,6	;RP1=0, select bank1
  9727  1003  1C98               	btfss	24,1	;volatile
  9728  1004  2806               	goto	u4111
  9729  1005  2807               	goto	u4110
  9730  1006                     u4111:
  9731  1006  2801               	goto	l69
  9732  1007                     u4110:
  9733  1007                     l2610:
  9734                           
  9735                           ;USART.c: 32:     TXREG = data;
  9736  1007  0870               	movf	UART_Transmit@data,w
  9737  1008  1283               	bcf	3,5	;RP0=0, select bank0
  9738  1009  1303               	bcf	3,6	;RP1=0, select bank0
  9739  100A  0099               	movwf	25	;volatile
  9740  100B                     l72:
  9741  100B  0008               	return
  9742  100C                     __end_of_UART_Transmit:
  9743                           
  9744                           	psect	text26
  9745  1D26                     __ptext26:	
  9746 ;; *************** function _UART_Config *****************
  9747 ;; Defined at:
  9748 ;;		line 4 in file "USART.c"
  9749 ;; Parameters:    Size  Location     Type
  9750 ;;  speed           1    wreg     unsigned char 
  9751 ;;  baudios         4    0[COMMON] unsigned long 
  9752 ;; Auto vars:     Size  Location     Type
  9753 ;;  speed           1    5[COMMON] unsigned char 
  9754 ;;  baud            1    6[COMMON] unsigned char 
  9755 ;; Return value:  Size  Location     Type
  9756 ;;                  1    wreg      void 
  9757 ;; Registers used:
  9758 ;;		wreg
  9759 ;; Tracked objects:
  9760 ;;		On entry : 0/0
  9761 ;;		On exit  : 0/0
  9762 ;;		Unchanged: 0/0
  9763 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9764 ;;      Params:         4       0       0       0       0
  9765 ;;      Locals:         2       0       0       0       0
  9766 ;;      Temps:          1       0       0       0       0
  9767 ;;      Totals:         7       0       0       0       0
  9768 ;;Total ram usage:        7 bytes
  9769 ;; Hardware stack levels used: 1
  9770 ;; This function calls:
  9771 ;;		Nothing
  9772 ;; This function is called by:
  9773 ;;		_main
  9774 ;; This function uses a non-reentrant model
  9775 ;;
  9776                           
  9777  1D26                     _UART_Config:	
  9778                           ;psect for function _UART_Config
  9779                           
  9780                           
  9781                           ;incstack = 0
  9782                           ; Regs used in _UART_Config: [wreg]
  9783                           ;UART_Config@speed stored from wreg
  9784  1D26  00F5               	movwf	UART_Config@speed
  9785  1D27                     l2970:
  9786                           
  9787                           ;USART.c: 5:     uint8_t baud;;USART.c: 6:     {if(speed == BRGH){ baud = (uint8_t)((200
      +                          00000UL/(16UL*9600))-1UL); TXSTAbits.BRGH = 1;} else{ baud = (uint8_t)((20000000UL/(64UL
      +                          *9600))-1UL); TXSTAbits.BRGH = 0;}};
  9788  1D27  3000               	movlw	0
  9789  1D28  1683               	bsf	3,5	;RP0=1, select bank1
  9790  1D29  1303               	bcf	3,6	;RP1=0, select bank1
  9791  1D2A  1918               	btfsc	24,2	;volatile
  9792  1D2B  3001               	movlw	1
  9793  1D2C  0675               	xorwf	UART_Config@speed,w
  9794  1D2D  1D03               	skipz
  9795  1D2E  2D30               	goto	u5171
  9796  1D2F  2D31               	goto	u5170
  9797  1D30                     u5171:
  9798  1D30  2D37               	goto	l2976
  9799  1D31                     u5170:
  9800  1D31                     l2972:
  9801  1D31  3081               	movlw	129
  9802  1D32  00F4               	movwf	??_UART_Config
  9803  1D33  0874               	movf	??_UART_Config,w
  9804  1D34  00F6               	movwf	UART_Config@baud
  9805  1D35                     l2974:
  9806  1D35  1518               	bsf	24,2	;volatile
  9807  1D36  2D3C               	goto	l2980
  9808  1D37                     l2976:
  9809  1D37  301F               	movlw	31
  9810  1D38  00F4               	movwf	??_UART_Config
  9811  1D39  0874               	movf	??_UART_Config,w
  9812  1D3A  00F6               	movwf	UART_Config@baud
  9813  1D3B                     l2978:
  9814  1D3B  1118               	bcf	24,2	;volatile
  9815  1D3C                     l2980:
  9816                           
  9817                           ;USART.c: 9:     TXSTAbits.SYNC = 0;
  9818  1D3C  1218               	bcf	24,4	;volatile
  9819                           
  9820                           ;USART.c: 12:     SPBRG = baud;
  9821  1D3D  0876               	movf	UART_Config@baud,w
  9822  1D3E  0099               	movwf	25	;volatile
  9823  1D3F                     l2982:
  9824                           
  9825                           ;USART.c: 15:     TXSTAbits.TX9 = 0;
  9826  1D3F  1318               	bcf	24,6	;volatile
  9827  1D40                     l2984:
  9828                           
  9829                           ;USART.c: 16:     RCSTAbits.RX9 = 0;
  9830  1D40  1283               	bcf	3,5	;RP0=0, select bank0
  9831  1D41  1303               	bcf	3,6	;RP1=0, select bank0
  9832  1D42  1318               	bcf	24,6	;volatile
  9833  1D43                     l2986:
  9834                           
  9835                           ;USART.c: 17:     RCSTAbits.SPEN = 1;
  9836  1D43  1798               	bsf	24,7	;volatile
  9837  1D44                     l2988:
  9838                           
  9839                           ;USART.c: 24:     TXSTAbits.TXEN= 1;
  9840  1D44  1683               	bsf	3,5	;RP0=1, select bank1
  9841  1D45  1303               	bcf	3,6	;RP1=0, select bank1
  9842  1D46  1698               	bsf	24,5	;volatile
  9843  1D47                     l66:
  9844  1D47  0008               	return
  9845  1D48                     __end_of_UART_Config:
  9846                           
  9847                           	psect	text27
  9848  100C                     __ptext27:	
  9849 ;; *************** function _ADC_Read *****************
  9850 ;; Defined at:
  9851 ;;		line 94 in file "main.c"
  9852 ;; Parameters:    Size  Location     Type
  9853 ;;  CHx             1    wreg     unsigned char 
  9854 ;; Auto vars:     Size  Location     Type
  9855 ;;  CHx             1    4[COMMON] unsigned char 
  9856 ;; Return value:  Size  Location     Type
  9857 ;;                  2    0[COMMON] unsigned int 
  9858 ;; Registers used:
  9859 ;;		wreg, status,2, status,0
  9860 ;; Tracked objects:
  9861 ;;		On entry : 0/0
  9862 ;;		On exit  : 0/0
  9863 ;;		Unchanged: 0/0
  9864 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9865 ;;      Params:         2       0       0       0       0
  9866 ;;      Locals:         1       0       0       0       0
  9867 ;;      Temps:          2       0       0       0       0
  9868 ;;      Totals:         5       0       0       0       0
  9869 ;;Total ram usage:        5 bytes
  9870 ;; Hardware stack levels used: 1
  9871 ;; This function calls:
  9872 ;;		Nothing
  9873 ;; This function is called by:
  9874 ;;		_main
  9875 ;; This function uses a non-reentrant model
  9876 ;;
  9877                           
  9878  100C                     _ADC_Read:	
  9879                           ;psect for function _ADC_Read
  9880                           
  9881                           
  9882                           ;incstack = 0
  9883                           ; Regs used in _ADC_Read: [wreg+status,2+status,0]
  9884                           ;ADC_Read@CHx stored from wreg
  9885  100C  00F4               	movwf	ADC_Read@CHx
  9886  100D                     l2994:
  9887                           
  9888                           ;main.c: 96:     ADCON0 |= 0xC7 | (3<<CHx);
  9889  100D  3003               	movlw	3
  9890  100E  00F2               	movwf	??_ADC_Read
  9891  100F  0A74               	incf	ADC_Read@CHx,w
  9892  1010  2813               	goto	u5184
  9893  1011                     u5185:
  9894  1011  1003               	clrc
  9895  1012  0DF2               	rlf	??_ADC_Read,f
  9896  1013                     u5184:
  9897  1013  3EFF               	addlw	-1
  9898  1014  1D03               	skipz
  9899  1015  2811               	goto	u5185
  9900  1016  0872               	movf	??_ADC_Read,w
  9901  1017  38C7               	iorlw	199
  9902  1018  00F3               	movwf	??_ADC_Read+1
  9903  1019  0873               	movf	??_ADC_Read+1,w
  9904  101A  1283               	bcf	3,5	;RP0=0, select bank0
  9905  101B  1303               	bcf	3,6	;RP1=0, select bank0
  9906  101C  049F               	iorwf	31,f	;volatile
  9907  101D                     l2996:
  9908                           
  9909                           ;main.c: 98:     ADCON0bits.GO_DONE = 1;
  9910  101D  151F               	bsf	31,2	;volatile
  9911  101E                     l46:	
  9912                           ;main.c: 100:     while(ADCON0bits.GO_DONE) continue;
  9913                           
  9914  101E  191F               	btfsc	31,2	;volatile
  9915  101F  2821               	goto	u5191
  9916  1020  2822               	goto	u5190
  9917  1021                     u5191:
  9918  1021  281E               	goto	l46
  9919  1022                     u5190:
  9920  1022                     l2998:
  9921                           
  9922                           ;main.c: 101:     _delay((unsigned long)((2)*(20000000UL/4000.0)));
  9923  1022  300D               	movlw	13
  9924  1023  00F3               	movwf	??_ADC_Read+1
  9925  1024  30FB               	movlw	251
  9926  1025  00F2               	movwf	??_ADC_Read
  9927  1026                     u5867:
  9928  1026  0BF2               	decfsz	??_ADC_Read,f
  9929  1027  2826               	goto	u5867
  9930  1028  0BF3               	decfsz	??_ADC_Read+1,f
  9931  1029  2826               	goto	u5867
  9932  102A  282B               	nop2
  9933                           
  9934                           ;main.c: 104:     return ((ADRESH<<8)+ADRESL);
  9935  102B  1283               	bcf	3,5	;RP0=0, select bank0
  9936  102C  1303               	bcf	3,6	;RP1=0, select bank0
  9937  102D  081E               	movf	30,w	;volatile
  9938  102E  00F1               	movwf	?_ADC_Read+1
  9939  102F  1683               	bsf	3,5	;RP0=1, select bank1
  9940  1030  1303               	bcf	3,6	;RP1=0, select bank1
  9941  1031  081E               	movf	30,w	;volatile
  9942  1032  00F0               	movwf	?_ADC_Read
  9943  1033                     l49:
  9944  1033  0008               	return
  9945  1034                     __end_of_ADC_Read:
  9946                           
  9947                           	psect	text28
  9948  1CFC                     __ptext28:	
  9949 ;; *************** function _ADC_Convertion *****************
  9950 ;; Defined at:
  9951 ;;		line 64 in file "main.c"
  9952 ;; Parameters:    Size  Location     Type
  9953 ;;		None
  9954 ;; Auto vars:     Size  Location     Type
  9955 ;;		None
  9956 ;; Return value:  Size  Location     Type
  9957 ;;                  1    wreg      void 
  9958 ;; Registers used:
  9959 ;;		None
  9960 ;; Tracked objects:
  9961 ;;		On entry : 0/0
  9962 ;;		On exit  : 0/0
  9963 ;;		Unchanged: 0/0
  9964 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9965 ;;      Params:         0       0       0       0       0
  9966 ;;      Locals:         0       0       0       0       0
  9967 ;;      Temps:          0       0       0       0       0
  9968 ;;      Totals:         0       0       0       0       0
  9969 ;;Total ram usage:        0 bytes
  9970 ;; Hardware stack levels used: 1
  9971 ;; This function calls:
  9972 ;;		Nothing
  9973 ;; This function is called by:
  9974 ;;		_main
  9975 ;; This function uses a non-reentrant model
  9976 ;;
  9977                           
  9978  1CFC                     _ADC_Convertion:	
  9979                           ;psect for function _ADC_Convertion
  9980                           
  9981  1CFC                     l2992:	
  9982                           ;incstack = 0
  9983                           ; Regs used in _ADC_Convertion: []
  9984                           
  9985                           
  9986                           ;main.c: 68:     ADCON0bits.GO_DONE = 0;
  9987  1CFC  1283               	bcf	3,5	;RP0=0, select bank0
  9988  1CFD  1303               	bcf	3,6	;RP1=0, select bank0
  9989  1CFE  111F               	bcf	31,2	;volatile
  9990                           
  9991                           ;main.c: 70:     ADCON0bits.ADON = 1;
  9992  1CFF  141F               	bsf	31,0	;volatile
  9993                           
  9994                           ;main.c: 72:     ADCON1bits.PCFG3 = 0;
  9995  1D00  1683               	bsf	3,5	;RP0=1, select bank1
  9996  1D01  1303               	bcf	3,6	;RP1=0, select bank1
  9997  1D02  119F               	bcf	31,3	;volatile
  9998                           
  9999                           ;main.c: 73:     ADCON1bits.PCFG2 = 0;
 10000  1D03  111F               	bcf	31,2	;volatile
 10001                           
 10002                           ;main.c: 74:     ADCON1bits.PCFG1 = 0;
 10003  1D04  109F               	bcf	31,1	;volatile
 10004                           
 10005                           ;main.c: 75:     ADCON1bits.PCFG0 = 0;
 10006  1D05  101F               	bcf	31,0	;volatile
 10007                           
 10008                           ;main.c: 83:     ADCON0bits.ADCS0 = 0;
 10009  1D06  1283               	bcf	3,5	;RP0=0, select bank0
 10010  1D07  1303               	bcf	3,6	;RP1=0, select bank0
 10011  1D08  131F               	bcf	31,6	;volatile
 10012                           
 10013                           ;main.c: 84:     ADCON0bits.ADCS1 = 1;
 10014  1D09  179F               	bsf	31,7	;volatile
 10015                           
 10016                           ;main.c: 85:     ADCON1bits.ADCS2 = 1;
 10017  1D0A  1683               	bsf	3,5	;RP0=1, select bank1
 10018  1D0B  1303               	bcf	3,6	;RP1=0, select bank1
 10019  1D0C  171F               	bsf	31,6	;volatile
 10020                           
 10021                           ;main.c: 88:     ADCON1bits.ADFM = 1;
 10022  1D0D  179F               	bsf	31,7	;volatile
 10023  1D0E                     l43:	
 10024                           ;main.c: 90:     return;
 10025                           
 10026  1D0E  0008               	return
 10027  1D0F                     __end_of_ADC_Convertion:
 10028  007E                     btemp	set	126	;btemp
 10029  007E                     wtemp0	set	126
 10030                           
 10031                           	psect	idloc
 10032                           
 10033                           ;Config register IDLOC0 @ 0x2000
 10034                           ;	unspecified, using default values
 10035  2000                     	org	8192
 10036  2000  3FFF               	dw	16383
 10037                           
 10038                           ;Config register IDLOC1 @ 0x2001
 10039                           ;	unspecified, using default values
 10040  2001                     	org	8193
 10041  2001  3FFF               	dw	16383
 10042                           
 10043                           ;Config register IDLOC2 @ 0x2002
 10044                           ;	unspecified, using default values
 10045  2002                     	org	8194
 10046  2002  3FFF               	dw	16383
 10047                           
 10048                           ;Config register IDLOC3 @ 0x2003
 10049                           ;	unspecified, using default values
 10050  2003                     	org	8195
 10051  2003  3FFF               	dw	16383
 10052                           
 10053                           	psect	config
 10054                           
 10055                           ;Config register CONFIG @ 0x2007
 10056                           ;	Oscillator Selection bits
 10057                           ;	FOSC = HS, HS oscillator
 10058                           ;	Watchdog Timer Enable bit
 10059                           ;	WDTE = OFF, WDT disabled
 10060                           ;	Power-up Timer Enable bit
 10061                           ;	PWRTE = OFF, PWRT disabled
 10062                           ;	Brown-out Reset Enable bit
 10063                           ;	BOREN = ON, BOR enabled
 10064                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
 10065                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
 10066                           ;	Data EEPROM Memory Code Protection bit
 10067                           ;	CPD = OFF, Data EEPROM code protection off
 10068                           ;	Flash Program Memory Write Enable bits
 10069                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
 10070                           ;	In-Circuit Debugger Mode bit
 10071                           ;	DEBUG = 0x1, unprogrammed default
 10072                           ;	Flash Program Memory Code Protection bit
 10073                           ;	CP = OFF, Code protection off
 10074  2007                     	org	8199
 10075  2007  3F7A               	dw	16250

Data Sizes:
    Strings     8
    Constant    144
    Data        0
    BSS         28
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     78      78
    BANK1            80     40      68
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 8
		 -> STR_1(CODE[8]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> bufferTx(BANK1[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    UART_SendData@pData	PTR unsigned char  size(1) Largest target is 20
		 -> bufferTx(BANK1[20]), 


Critical Paths under _main in COMMON

    _main->___xxtofl
    _sprintf->___lldiv
    _sprintf->___xxtofl
    ___awdiv->___awmod
    _fround->___lwdiv
    ___lwdiv->___lwmod
    ___flmul->___lwdiv
    ___flmul->___xxtofl
    ___flsub->___xxtofl
    ___fldiv->___xxtofl
    _UART_SendData->_UART_Transmit

Critical Paths under _main in BANK0

    _sprintf->___flsub
    _scale->___flmul
    _fround->___flmul
    ___flmul->___awdiv
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround
    ___fldiv->___flmul

Critical Paths under _main in BANK1

    _main->_sprintf

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   37597
                                             37 BANK1      3     3      0
                     _ADC_Convertion
                           _ADC_Read
                        _UART_Config
                      _UART_SendData
                            ___fldiv
                            ___flmul
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             44    39      5   30985
                                              0 BANK1     37    32      5
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               19    15      4    7560
                                             30 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1208
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1364
                                              7 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              20    16      4    6023
                                             30 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     615
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     618
                                              6 COMMON     8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    4545
                                              4 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         18    10      8     455
                                              0 COMMON    12     4      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          15     7      8     455
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     474
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     396
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     615
                                              0 COMMON    10     2      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     466
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     457
                                             49 BANK0     11     7      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2485
                                             70 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2288
                                             50 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     121
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     790
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     394
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (1) ___fldiv                                             26    18      8    1273
                                             30 BANK0     26    18      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _UART_SendData                                        3     2      1     176
                                              1 COMMON     3     2      1
                      _UART_Transmit
 ---------------------------------------------------------------------------------
 (2) _UART_Transmit                                        1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_Config                                          7     3      4     122
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (1) _ADC_Read                                             5     3      2      22
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (1) _ADC_Convertion                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Convertion
   _ADC_Read
   _UART_Config
   _UART_SendData
     _UART_Transmit
   ___fldiv
     ___flmul (ARG)
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___flmul
   ___xxtofl
   _sprintf
     ___awdiv
     ___fladd
       _fround (ARG)
         ___flmul
         ___lwdiv
         ___lwmod
     ___fleq
     ___flge
     ___flmul
     ___flneg
     ___flsub
       ___fladd
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
       _scale (ARG)
         ___awdiv
         ___awmod
         ___flmul
     ___lldiv
     ___llmod
     ___wmul
     ___xxtofl
     __div_to_l_
     __tdiv_to_l_
     _fround
     _isdigit
     _scale

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      A0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4E      4E       5       97.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     28      44       7       85.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      A0      12        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Sat Dec 10 18:30:33 2022

           ___fldiv@aexp 0057             ___fldiv@bexp 0056                        pc 0002  
           ___fldiv@sign 004F                       l43 1D0E                       l46 101E  
                     l72 100B                       l49 1033                       l66 1D47  
                     l69 1001                       l78 1D25             ___awdiv@sign 0021  
                     fsr 0004      ___wmul@multiplicand 0072      __Umul8_16@word_mpld 0076  
                    l206 01E9                      l410 1FFF                      l180 1577  
                    l253 07F2                      l431 0132                      l423 1F30  
                    l247 07A7                      l239 062E                      l513 1ED7  
                    l257 1D78                      l443 1E52                      l451 10BC  
                    l259 1D90                      l427 016F                      l187 0C9E  
                    l444 1E6E                      l452 10D5                      l460 0882  
                    l428 00D4                      l445 1E83                      l605 174D  
                    l293 1F96                      l701 1DB7                      l630 1D6B  
                    l470 0882                      l438 0162                      l615 1793  
                    l640 11EC                      l448 1050                      l456 1CE9  
                    l609 1771                      l642 136C                      l626 17F3  
                    l618 17D1                      l730 113D                      l474 093F  
                    l627 17FF                      l467 086D                      l475 08B1  
                    l563 1E35                      l724 10F8                      l485 0932  
                    l573 1DF1                      l662 1350                      l590 1659  
                    l726 118F                      l478 0902                      l664 1360  
                    l656 12DE                      l584 15DB                      l680 0FFF  
                    l744 1CFB                      l737 1159                      l738 1165  
                    l588 1682                      l692 0FF3                      l597 17FF  
                    l686 0F6B                      l699 1DA5                      fsr0 0004  
                    indf 0000             ___awmod@sign 0076             ___flmul@aexp 0036  
           ___flmul@bexp 0037              _sprintf$957 00AA             ___flmul@sign 0031  
           ___flmul@temp 003C             ___flmul@prod 0038             ___fltol@exp1 005B  
                   l2200 1EED                     l2130 1D92                     l2210 1F05  
                   l2202 1EF3                     l3010 0187                     l3002 0173  
                   l2300 15B3                     l2140 1DB3                     l2132 1D94  
                   l2220 1F27                     l2212 1F0F                     l2204 1EF6  
                   l3100 044A                     l3020 01A1                     l3012 018B  
                   l3004 0175                     l2310 15C8                     l2302 15B9  
                   l2134 1D9B                     l2230 1DFA                     l2150 1FA3  
                   l2222 1F2C                     l2214 1F15                     l2206 1EFD  
                   l3102 0452                     l3110 0498                     l3030 01D4  
                   l3022 01A5                     l3014 0192                     l3006 017A  
                   l2400 1725                     l2320 15E5                     l2312 15D0  
                   l2304 15BD                     l2136 1D9F                     l2240 1E1D  
                   l2232 1DFD                     l2160 1FB4                     l2152 1FA5  
                   l2144 1F97                     l2216 1F1C                     l2208 1F01  
                   l3200 07A1                     l3112 04CD                     l3104 0470  
                   l3040 0207                     l3024 01A8                     l3032 01E5  
                   l3016 0194                     l3008 0180                     l2410 175A  
                   l2402 172B                     l2330 15F9                     l2322 15E9  
                   l2314 15D1                     l2306 15BE                     l2138 1DAE  
                   l2242 1E23                     l2234 1E04                     l2226 1DF2  
                   l2170 1FCC                     l2162 1FBA                     l2154 1FA9  
                   l2146 1F9A                     l2218 1F22                     l3210 07D0  
                   l3202 07B2                     l3130 056B                     l3122 051E  
                   l3114 051A                     l3050 022D                     l3042 0213  
                   l3034 01E7                     l3026 01BD                     l3018 01A0  
                   l3300 1245                     l2420 1775                     l2404 1730  
                   l2340 160D                     l2332 15FD                     l2324 15ED  
                   l2308 15C3                     l2316 15D3                     l2500 0CEF  
                   l2244 1E24                     l2236 1E08                     l2228 1DF4  
                   l2260 1DCC                     l2252 1DB8                     l2172 1FDD  
                   l2164 1FBD                     l2180 1FF1                     l2156 1FAE  
                   l2148 1F9E                     l3220 07EE                     l3204 07B3  
                   l3140 05D7                     l3132 0572                     l3116 051C  
                   l3108 048F                     l3060 0280                     l3052 0246  
                   l3044 0217                     l3028 01D0                     l3230 1D10  
                   l3310 1263                     l3302 1247                     l2422 1778  
                   l2414 1763                     l2406 173F                     l2430 1785  
                   l2350 1621                     l2342 1611                     l2334 1601  
                   l2326 15F1                     l2318 15E1                     l2502 0CF1  
                   l2246 1E2B                     l2238 1E0C                     l2262 1DD0  
                   l2254 1DBE                     l2270 1DED                     l2182 1FF6  
                   l2174 1FE3                     l2166 1FC4                     l2158 1FB2  
                   l2190 1ED9                     l3206 07C2                     l3150 05F9  
                   l3134 0576                     l3126 0555                     l3070 02BB  
                   l3062 028B                     l3054 025F                     l3046 021B  
                   l3038 01EB                     l3232 1D11                     l3304 124C  
                   l3312 126C                     l3320 1291                     l3240 1197  
                   l2440 1798                     l2432 1786                     l2424 177A  
                   l2416 176C                     l2408 1755                     l2360 1666  
                   l2344 1615                     l2336 1605                     l2328 15F5  
                   l2352 1625                     l2280 1589                     l2600 0FEB  
                   l2520 0D62                     l2512 0D0C                     l2504 0CF9  
                   l2248 1E31                     l2264 1DDA                     l2256 1DC1  
                   l2184 1FFB                     l2176 1FE4                     l2168 1FC8  
                   l2192 1EDD                     l3208 07C2                     l3160 0628  
                   l3152 05FF                     l3136 057D                     l3144 05E4  
                   l3128 055F                     l3080 034D                     l3072 02C1  
                   l3064 0291                     l3056 0263                     l3048 0229  
                   l3216 07D8                     l2610 1007                     l3234 1D1A  
                   l3330 12AE                     l3322 1297                     l3314 127E  
                   l3306 125E                     l3250 11AC                     l3242 119D  
                   l2450 17D6                     l2442 179D                     l2434 178A  
                   l2426 177F                     l2418 1770                     l2362 1668  
                   l2370 167A                     l2354 1626                     l2346 1619  
                   l2338 1609                     l2290 159D                     l2282 158A  
                   l2274 1578                     l2602 0FEC                     l2530 0DDF  
                   l2522 0D8E                     l2514 0D1C                     l2506 0CFE  
                   l2266 1DE0                     l2258 1DC8                     l2178 1FEB  
                   l2194 1EE2                     l3170 064D                     l3162 0637  
                   l3146 05EC                     l3154 0605                     l3138 05B8  
                   l3090 03D5                     l3082 0368                     l3074 02E0  
                   l3066 02A4                     l3058 0267                     l3218 07EA  
                   l3236 1D1E                     l3340 12C3                     l3332 12AF  
                   l3324 129F                     l3316 127F                     l3308 1262  
                   l3260 11C4                     l3252 11B4                     l3244 11A1  
                   l2460 17ED                     l2452 17DB                     l2444 17AB  
                   l2436 1790                     l2428 1781                     l2380 16AB  
                   l2372 1686                     l2364 166C                     l2356 163D  
                   l2348 161D                     l2284 158F                     l2292 159F  
                   l2276 157F                     l2700 08C9                     l2604 0FF7  
                   l2540 0E5F                     l2532 0DFC                     l2524 0DAA  
                   l2516 0D29                     l2508 0D03                     l2268 1DE7  
                   l2620 1483                     l2612 1370                     l2196 1EE4  
                   l2188 1ED8                     l3180 072C                     l3172 066B  
                   l3164 063C                     l3156 0612                     l3148 05F5  
                   l3092 03F0                     l3076 032B                     l3068 02B7  
                   l3084 0370                     l3350 12E8                     l3342 12C7  
                   l3334 12B8                     l3326 12A1                     l3318 128D  
                   l3270 11D9                     l3262 11CA                     l3254 11B5  
                   l3246 11A2                     l3238 1190                     l2462 17EF  
                   l2454 17E3                     l2446 17AF                     l2390 16C2  
                   l2382 16AF                     l2374 168B                     l2366 166D  
                   l2358 165D                     l2294 15A7                     l2286 1594  
                   l2278 1585                     l2710 08F4                     l2702 08D2  
                   l2550 0F17                     l2542 0E8C                     l2534 0E0C  
                   l2526 0DC6                     l2518 0D46                     l2470 0CA6  
                   l2622 1489                     l2614 1376                     l2198 1EE8  
                   l2630 0943                     l3190 0780                     l3182 0732  
                   l3174 06C6                     l3166 0643                     l3158 0621  
                   l3094 0417                     l3086 037F                     l3078 0344  
                   l3422 01FF                     l2608 1001                     l3360 1326  
                   l3352 12F6                     l3344 12DB                     l3328 12AA  
                   l3336 12BE                     l3280 1200                     l3272 11E1  
                   l3264 11CE                     l3248 11A7                     l3256 11B7  
                   l2464 17FA                     l2456 17E8                     l2448 17CD  
                   l2392 16C3                     l2384 16B3                     l2368 1676  
                   l2296 15AC                     l2288 159C                     l2800 1F31  
                   l2720 090E                     l2712 08FC                     l2704 08DB  
                   l2560 0F3C                     l2552 0F20                     l2544 0E9C  
                   l2536 0E29                     l2528 0DCF                     l2480 0CBB  
                   l2472 0CAC                     l2632 0947                     l3192 0786  
                   l3176 0701                     l3184 076D                     l3168 0647  
                   l3096 0426                     l3088 03C6                     l3370 1356  
                   l3362 1334                     l3354 12FA                     l3338 12C2  
                   l3282 1204                     l3274 11E2                     l3266 11CF  
                   l3258 11BF                     l2466 17FE                     l2458 17E9  
                   l2394 16CC                     l2386 16BC                     l2378 1694  
                   l2298 15B2                     l2810 1F5E                     l2802 1F41  
                   l2730 0937                     l2714 0906                     l2722 0920  
                   l2706 08E9                     l2570 0F54                     l2562 0F45  
                   l2554 0F2E                     l2546 0EC9                     l2538 0E42  
                   l2490 0CD8                     l2482 0CC3                     l2474 0CB0  
                   l2626 1534                     l2642 0A38                     l2634 0949  
                   l3186 0775                     l3194 078C                     l3178 0720  
                   l3098 0441                     l3372 135A                     l3364 1343  
                   l3356 1313                     l3348 12E3                     l3292 121B  
                   l3268 11D4                     l3276 11E4                     l2388 16BE  
                   l2396 16D1                     l2812 1F70                     l2804 1F44  
                   l2820 1F8E                     l2900 1E84                     l2740 00C8  
                   l2708 08F3                     l2580 0F83                     l2572 0F68  
                   l2556 0F37                     l2564 0F4B                     l2548 0EEF  
                   l2492 0CDC                     l2484 0CC5                     l2476 0CB1  
                   l2468 0C9F                     l2660 0BE3                     l2644 0A3F  
                   l2636 0950                     l2652 0AF4                     l3188 077C  
                   l3196 0793                     l3380 0004                     l3374 135C  
                   l3366 1347                     l3358 1319                     l3294 122D  
                   l3278 11F4                     l3286 120D                     l2830 1E80  
                   l2398 16E7                     l2814 1F7E                     l2806 1F51  
                   l2910 1EB2                     l2902 1E8C                     l2750 00EE  
                   l2734 00B2                     l2590 0FBE                     l2582 0F87  
                   l2566 0F4F                     l2558 0F3B                     l2494 0CDD  
                   l2486 0CCD                     l2478 0CB6                     l2670 1CEB  
                   l2662 0BEA                     l2654 0AFB                     l3198 0799  
                   l3390 0095                     l3382 0016                     l3368 134F  
                   l3296 1235                     l3288 1212                     l2832 1E82  
                   l2824 1E36                     l2840 1064                     l2920 1D48  
                   l2816 1F7F                     l2808 1F55                     l2912 1EC0  
                   l2904 1E8F                     l2760 0122                     l2752 00F0  
                   l2736 00BF                     l2728 0927                     l2592 0FCD  
                   l2584 0FA0                     l2576 0F70                     l2568 0F50  
                   l2496 0CE2                     l2488 0CD2                     l2672 1CEC  
                   l2648 0AC7                     l3384 001B                     l3298 123D  
                   l2826 1E4A                     l2850 10D2                     l2842 106C  
                   l2922 1D4C                     l2818 1F88                     l2914 1EC9  
                   l2906 1E9C                     l2930 10E0                     l2762 0123  
                   l2754 00F9                     l2746 00D5                     l2682 0883  
                   l2594 0FD7                     l2578 0F75                     l2586 0FA6  
                   l2498 0CE7                     l2674 1CF2                     l2666 0C72  
                   l3386 0027                     l2828 1E66                     l2852 10D4  
                   l2844 1070                     l2836 1034                     l2860 1CE9  
                   l2908 1EA0                     l2916 1ECF                     l2940 110E  
                   l2932 10F0                     l2780 0157                     l2772 013E  
                   l2764 012C                     l2756 0102                     l2748 00DD  
                   l2684 0896                     l2596 0FD9                     l2588 0FB3  
                   l2676 1CF8                     l3388 007D                     l2846 1094  
                   l2838 1048                     l2870 081D                     l2790 1D72  
                   l2950 1144                     l2942 111B                     l2934 1100  
                   l2926 10D7                     l2782 0167                     l2766 0136  
                   l2774 0150                     l2758 0114                     l2694 08B2  
                   l2598 0FE7                     l2678 1CFA                     l2848 1098  
                   l2856 1CDF                     l2880 0841                     l2872 0832  
                   l2864 0807                     l2792 1D7F                     l2960 117D  
                   l2952 114F                     l2944 1122                     l2928 10DC  
                   l2696 08B8                     l2688 089F                     l2970 1D27  
                   l2858 1CE7                     l2874 0833                     l2866 0814  
                   l2794 1D86                     l2786 1D6C                     l2962 1182  
                   l2954 1153                     l2946 1126                     l2938 1109  
                   l2698 08C7                     l2980 1D3C                     l2972 1D31  
                   l2876 083B                     l2796 1D8C                     l2788 1D6E  
                   l2964 1186                     l2956 115D                     l2948 1134  
                   l2982 1D3F                     l2974 1D35                     l2894 0862  
                   l2886 0849                     l2878 083D                     l2966 1187  
                   l2958 1167                     l2992 1CFC                     l2984 1D40  
                   l2976 1D37                     l2896 0872                     l2888 085B  
                   l2994 100D                     l2986 1D43                     l2978 1D3B  
                   l2898 0877                     l2996 101D                     l2988 1D44  
                   l2998 1022                     STR_1 1896                     _BRGH 04C2  
                   u3000 1FCC                     u3001 1FCB                     u3020 1FDD  
                   u3100 1F05                     u3021 1FDC                     u3101 1F04  
                   u3110 1F0F                     u3015 1FCD                     u3111 1F0E  
                   u3040 1FF1                     u3041 1FF0                     u3025 1FD9  
                   u4010 0F4F                     u3210 1E31                     u3050 1FF6  
                   u3130 1F22                     u4011 0F4E                     u3211 1E30  
                   u3051 1FF5                     u3035 1FE5                     u3131 1F21  
                   u3115 1F0B                     u3300 1594                     u4100 0FEB  
                   u4020 0F54                     u3220 1DBE                     u3140 1F27  
                   u3060 1EDD                     u3301 1593                     u4101 0FEA  
                   u4021 0F53                     u4005 0F3E                     u3205 1E25  
                   u3221 1DBD                     u3141 1F26                     u3125 1F16  
                   u3061 1EDC                     u4110 1007                     u3310 15B2  
                   u4030 0F68                     u3150 1DFA                     u3070 1EE8  
                   u4111 1006                     u3311 15B1                     u4031 0F67  
                   u3151 1DF9                     u3071 1EE7                     u3400 165D  
                   u3320 15BD                     u5000 1EB2                     u4040 0F6F  
                   u3240 1DD0                     u4120 1376                     u3080 1EF3  
                   u4200 0947                     u3401 165C                     u3321 15BC  
                   u5001 1EB1                     u4041 0F6E                     u3241 1DCF  
                   u4121 1375                     u3081 1EF2                     u4201 0946  
                   u3410 166C                     u3330 15C3                     u4050 0F75  
                   u3170 1E0C                     u3250 1DDA                     u4210 0950  
                   u3411 166B                     u3331 15C2                     u4051 0F74  
                   u3171 1E0B                     u3251 1DD9                     u3235 1DC2  
                   u4211 094F                     u3340 15C8                     u5020 1ECF  
                   u4060 0F87                     u3341 15C7                     u5021 1ECE  
                   u5005 1EAE                     u4061 0F86                     u3165 1DFE  
                   u3510 16E7                     u3430 1682                     u3350 15E1  
                   u5110 1153                     u5030 10DC                     u4070 0F96  
                   u3190 1E1D                     u3270 1DED                     u3511 16E6  
                   u3431 1681                     u3351 15E0                     u5015 1EC1  
                   u5111 1152                     u5031 10DB                     u3191 1E1C  
                   u3271 1DEC                     u3255 1DD6                     u4135 1393  
                   u3095 1EF7                     u3600 177F                     u3440 1686  
                   u3360 15E5                     u3280 1589                     u5120 1159  
                   u5040 10E0                     u4400 08B0                     u4080 0FB3  
                   u4160 1489                     u5200 0180                     u3601 177E  
                   u3521 16FE                     u3513 16E3                     u3505 16C5  
                   u3441 1685                     u3425 166F                     u3361 15E4  
                   u3281 1588                     u5121 1158                     u5105 1148  
                   u5041 10DF                     u4401 08AF                     u4081 0FB2  
                   u3185 1E0D                     u3265 1DE1                     u4161 1488  
                   u4145 13ED                     u4305 0B1B                     u4225 0970  
                   u5201 017F                     u3610 1785                     u3530 1712  
                   u3522 16FF                     u3450 168B                     u3370 163D  
                   u3290 158F                     u5130 115D                     u5050 1100  
                   u4090 0FCD                     u4330 0BEA                     u4250 0A3F  
                   u5210 01A0                     u3611 1784                     u3531 1713  
                   u3523 1704                     u3451 168A                     u3371 163C  
                   u3291 158E                     u5131 115C                     u5051 10FF  
                   u4091 0FCC                     u4075 0F91                     u3195 1E19  
                   u4155 1442                     u4331 0BE9                     u4315 0B57  
                   u4251 0A3E                     u4235 09AC                     u5211 019F  
                   u3700 17DB                     u3620 178A                     u3540 1730  
                   u3532 1718                     u3524 1705                     u3380 1648  
                   u5140 1172                     u4420 08E9                     u5300 037F  
                   u5220 01E4                     u3701 17DA                     u3621 1789  
                   u3541 172F                     u3533 1719                     u3525 170A  
                   u3461 169D                     u3381 1646                     u4421 08E8  
                   u4085 0FAF                     u4325 0BA2                     u4245 09F7  
                   u5301 037E                     u5221 01E3                     u3710 17E8  
                   u3630 1790                     u3550 1755                     u3526 170B  
                   u3470 16AF                     u3462 16A4                     u3390 1649  
                   u5150 1182                     u5070 1121                     u4510 0937  
                   u5310 03D5                     u5230 0213                     u3711 17E7  
                   u3631 178F                     u3551 1754                     u3471 16AE  
                   u3463 16AB                     u3375 1639                     u5151 1181  
                   u5071 1120                     u4511 0936                     u4415 08D4  
                   u4095 0FC9                     u4175 14A6                     u5311 03D4  
                   u5231 0212                     u3720 17ED                     u3640 1797  
                   u3560 175A                     u3480 16B3                     u5160 1186  
                   u4520 00BF                     u4440 0902                     u3800 0CFE  
                   u5320 03F0                     u5240 0217                     u3721 17EC  
                   u3641 1796                     u3561 1759                     u3481 16B2  
                   u5161 1185                     u5145 116D                     u5065 1113  
                   u4521 00BE                     u4505 0929                     u4441 0901  
                   u4425 08E5                     u3801 0CFD                     u4185 14F3  
                   u4345 0BFD                     u4265 0A52                     u5321 03EF  
                   u5305 037B                     u5241 0216                     u5170 1D31  
                   u3730 17FE                     u3650 179D                     u3490 16C2  
                   u5090 1143                     u4610 014F                     u4530 00D3  
                   u4450 0906                     u2930 1D9F                     u3810 0D03  
                   u4370 1CF2                     u4290 0AFB                     u5410 05EB  
                   u5330 0417                     u5250 0246                     u5171 1D30  
                   u3731 17FD                     u3651 179C                     u3491 16C1  
                   u5091 1142                     u4611 014E                     u4531 00D2  
                   u4451 0905                     u4435 08F5                     u2931 1D9E  
                   u3811 0D02                     u4195 153F                     u4371 1CF1  
                   u4355 0C39                     u4291 0AFA                     u4275 0A8E  
                   u5411 05EA                     u5331 0416                     u5315 03D1  
                   u5251 0245                     u3660 17AF                     u3580 1770  
                   u4620 0156                     u4460 090D                     u3740 0CB0  
                   u4380 1CF8                     u5500 07A1                     u5420 0612  
                   u5340 0426                     u5260 0280                     u3661 17AE  
                   u3581 176F                     u5085 1135                     u4621 0155  
                   u4605 013F                     u4461 090C                     u3901 0E51  
                   u3821 0D54                     u3741 0CAF                     u4381 1CF7  
                   u4365 0C75                     u4285 0ACA                     u5501 07A0  
                   u5421 0611                     u5405 0580                     u5341 0425  
                   u5261 027F                     u5190 1022                     u3670 17BE  
                   u3590 1775                     u4710 1F55                     u4550 0114  
                   u4390 0896                     u2950 1DB3                     u3902 0E58  
                   u3822 0D5B                     u3750 0CB6                     u5510 07B2  
                   u5430 0621                     u5350 0441                     u5270 02BB  
                   u5191 1021                     u3591 1774                     u3575 1765  
                   u4711 1F54                     u4551 0113                     u4391 0895  
                   u2951 1DB2                     u3911 0E7E                     u3903 0E5F  
                   u3831 0D70                     u3823 0D62                     u3751 0CB5  
                   u5511 07B1                     u5431 0620                     u5351 0440  
                   u5271 02BA                     u5184 1013                     u5600 11D4  
                   u4800 1064                     u3680 17CD                     u4640 0167  
                   u4480 091F                     u3912 0E85                     u3832 0D77  
                   u3760 0CBB                     u2960 1F9E                     u5520 07C2  
                   u5440 063C                     u5280 0344                     u5185 1011  
                   u5601 11D3                     u4801 1063                     u3681 17CC  
                   u4705 1F46                     u4641 0166                     u4545 00FB  
                   u4481 091E                     u2945 1DA6                     u3921 0EAB  
                   u3913 0E8C                     u3841 0D9C                     u3833 0D7E  
                   u3761 0CBA                     u2961 1F9D                     u5521 07C1  
                   u5441 063B                     u5425 060E                     u5345 0422  
                   u5281 0343                     u5610 11D9                     u4810 1070  
                   u3690 17D6                     u4730 1F70                     u4650 1D72  
                   u4570 0132                     u4490 0926                     u3930 0ED5  
                   u3922 0EB2                     u3842 0DA3                     u3770 0CDC  
                   u2970 1FA9                     u5530 07D0                     u5370 0554  
                   u5290 0368                     u5611 11D8                     u4811 106F  
                   u3691 17D5                     u3675 17B9                     u4731 1F6F  
                   u4651 1D71                     u4635 0159                     u4571 0131  
                   u4555 0110                     u4491 0925                     u4475 090F  
                   u3923 0EB9                     u3851 0DB8                     u3843 0DAA  
                   u3771 0CDB                     u2971 1FA8                     u5531 07CF  
                   u5515 07AE                     u5435 061D                     u5371 0553  
                   u5291 0367                     u5700 1297                     u5620 11F4  
                   u4900 0848                     u4580 0136                     u3852 0DBF  
                   u3780 0CE2                     u2980 1FBA                     u5540 07EA  
                   u5380 055F                     u5701 1296                     u5621 11F3  
                   u4821 107F                     u4901 0847                     u4725 1F57  
                   u4581 0135                     u4565 0125                     u3941 0EE1  
                   u3853 0DC6                     u3781 0CE1                     u2981 1FB9  
                   u5541 07E9                     u5525 07BE                     u5381 055E  
                   u5365 0521                     u5550 1D25                     u5710 129F  
                   u5630 1212                     u4830 1098                     u4822 1080  
                   u4750 1F8E                     u4590 013D                     u3950 0EFD  
                   u3942 0EE8                     u3790 0CE7                     u5470 0774  
                   u5390 056B                     u5551 1D24                     u5711 129E  
                   u5631 1211                     u4831 1097                     u4823 1085  
                   u4751 1F8D                     u4735 1F6C                     u4591 013C  
                   u3943 0EEF                     u3935 0ED0                     u3871 0DEE  
                   u3791 0CE6                     u5471 0773                     u5455 06C9  
                   u5391 056A                     u5375 0550                     u5800 12FA  
                   u5640 124C                     u5560 11A1                     u4760 1E4A  
                   u4824 1086                     u4920 085A                     u4680 1D8C  
                   u3872 0DF5                     u5480 0792                     u5801 12F9  
                   u5641 124B                     u5561 11A0                     u4761 1E49  
                   u4841 10A7                     u4825 108B                     u4921 0859  
                   u4745 1F80                     u4681 1D8B                     u4665 1D79  
                   u3961 0F09                     u3881 0E1B                     u3873 0DFC  
                   u3865 0DC8                     u5481 0791                     u5465 0735  
                   u5810 1309                     u5730 12AE                     u5570 11A7  
                   u4770 1E66                     u4850 10D2                     u4842 10A8  
                   u4826 108C                     u4930 0861                     u4690 1F41  
                   u3962 0F10                     u3882 0E22                     u5490 0799  
                   u5731 12AD                     u5571 11A6                     u4771 1E65  
                   u4851 10D1                     u4843 10AD                     u4931 0860  
                   u4915 084A                     u4691 1F40                     u4675 1D80  
                   u3963 0F17                     u3955 0EF8                     u3883 0E29  
                   u2995 1FBE                     u5491 0798                     u5820 1326  
                   u5580 11AC                     u4780 1E80                     u4844 10AE  
                   u4860 1CE7                     u5821 1325                     u5725 12A3  
                   u5581 11AB                     u4781 1E7F                     u4845 10B3  
                   u4861 1CE6                     u5830 1343                     u5750 12C2  
                   u5670 1262                     u5590 11CE                     u4846 10B4  
                   u4790 1048                     u4950 0872                     u4870 0814  
                   u3990 0F3B                     u5831 1342                     u5815 1304  
                   u5751 12C1                     u5671 1261                     u5655 124E  
                   u5591 11CD                     u4855 10CE                     u4791 1047  
                   u4951 0871                     u4871 0813                     u3991 0F3A  
                   u3975 0F19                     u3895 0E2B                     u5840 135A  
                   u5760 12C7                     u4960 0877                     u4880 082B  
                   u5841 1359                     u5825 1322                     u5761 12C6  
                   u5745 12B1                     u5665 1257                     u4785 1E7C  
                   u4961 0876                     u4945 0864                     u3985 0F30  
                   u5770 12DB                     u5690 127E                     u4890 0841  
                   u4970 1E8C                     u5835 133F                     u5771 12DA  
                   u5691 127D                     u4891 0840                     u4971 1E8B  
                   u5780 12E2                     u5781 12E1                     u5685 1265  
                   u4885 0826                     u5790 12E8                     u4990 1EA0  
                   u5791 12E7                     u5695 127A                     u4991 1E9F  
                   u4985 1E91                     u5857 00A7                     u5867 1026  
                   _TRMT 04C1                     _data 00CC                     _main 0004  
                   btemp 007E         __end_of_ADC_Read 1034                     start 0000  
        ___fldiv@new_exp 0050        UART_SendData@Size 0071            ___fltol@sign1 005A  
        __end_of___fladd 1800                    ?_main 0070          __end_of___fldiv 136D  
        __end_of___awdiv 2000          __end_of___flneg 1CEA          __end_of___awmod 1F31  
        __end_of___flmul 1000          __end_of___flsub 1D6C          __end_of___fltol 0883  
        __end_of___lldiv 1F97          ___awdiv@divisor 0077          __end_of___llmod 1ED8  
        __end_of___lwdiv 1E36          __end_of___lwmod 1DF2          ___awdiv@counter 0020  
                  _SPBRG 0099                    _TXREG 0019          __end_of_dpowers 1896  
                  _scale 0940          __end_of_isdigit 1CFC                    pclath 000A  
                  status 0003                    wtemp0 007E          __end_of_sprintf 07F3  
        __initialization 07F3             __end_of_main 00B2                   ??_main 00C5  
     UART_SendData@pData 0073                   _ADCON0 001F         ___llmod@dividend 0074  
                 ?_scale 003E                   _ADRESH 001E                   _ADRESL 009E  
       ___awdiv@dividend 0079         __end_of___xxtofl 1190             ?_UART_Config 0070  
       __end_of__powers_ 183A                   ___flge 1034                   ___fleq 1E36  
              ??___fladd 005A                   ___wmul 1D6C                ??___fldiv 0046  
              ??___awdiv 007B                ??___flneg 0074                ??___awmod 0074  
              ??___flmul 002C                ??___flsub 007E                ??___fltol 0055  
              ??___lldiv 0078                ??___llmod 0078                ??___lwdiv 007A  
              ??___lwmod 0074                   _fround 136D         ___awdiv@quotient 0022  
        ___awmod@divisor 0070          ___awmod@counter 0075                ??_isdigit 0070  
              ?_ADC_Read 0070                ??_sprintf 00A5    __end_of_UART_SendData 1D26  
       UART_Config@speed 0075               ___flge@ff1 0070               ___flge@ff2 0074  
           ___xxtofl@arg 007A             ___xxtofl@exp 0079             ___xxtofl@val 0070  
             ___fleq@ff1 0070               ___fleq@ff2 0074  __end_of__initialization 07FC  
             ___flneg@f1 0070               ___fltol@f1 0051    __end_of_UART_Transmit 100C  
         __pcstackCOMMON 0070            __end_of_scale 0C9F               __div_to_l_ 00B2  
             ??_ADC_Read 0072          __div_to_l_@exp1 0025          __div_to_l_@cntr 0024  
                ??_scale 0042          __div_to_l_@quot 0020               __pbssBANK1 00C8  
          __div_to_l_@f1 0070            __div_to_l_@f2 0074        __end_of__Umul8_16 1DB8  
             __pmaintext 0004                  ?___flge 0070                  ?___fleq 0070  
                ?___wmul 0070                  ?_fround 003E                ?___xxtofl 0070  
             __stringtab 1800        __end_of__npowers_ 186E                  ___fladd 1578  
                ___fldiv 1190                  ___awdiv 1F97                  ___flneg 1CDF  
                ___awmod 1ED8                  ___flmul 0C9F                  ___flsub 1D48  
                ___fltol 0807                  ___lldiv 1F31                  ___llmod 1E84  
                ___lwdiv 1DF2               _fround$954 004D               _fround$955 0049  
                ___lwmod 1DB8                  __ptext1 0170                  __ptext2 0940  
                __ptext3 1ED8                  __ptext4 1F97                  __ptext5 1CEA  
                __ptext6 136D                  __ptext7 1DB8                  __ptext8 1DF2  
                __ptext9 0C9F              ?__div_to_l_ 0070                  _dpowers 186E  
                _isdigit 1CEA               ??___xxtofl 0074         ___awmod@dividend 0072  
                _tension 00C8                  _sprintf 0170                  clrloop0 1CD8  
   end_of_initialization 07FC          ___lldiv@divisor 0070          ___lldiv@counter 007D  
              _RCSTAbits 0018           __tdiv_to_l_@f1 0070           __tdiv_to_l_@f2 0074  
          ??__tdiv_to_l_ 0078              ___fladd@grs 0065            ___xxtofl@sign 0078  
            ___fldiv@grs 0052              ___fldiv@rem 004B              ___flmul@grs 0032  
         _ADC_Convertion 1CFC                _TXSTAbits 0098           __end_of___flge 10D6  
         __end_of___fleq 1E84           __end_of___wmul 1D91           __end_of_fround 1578  
    start_initialization 07F3      __end_of__tdiv_to_l_ 0940   __end_of_ADC_Convertion 1D0F  
        ___llmod@divisor 0070          ___llmod@counter 0079                 ??___flge 0078  
               ??___fleq 0078                 ??___wmul 0074                __Umul8_16 1D91  
               ??_fround 0042            sprintf@tmpval 00B9          UART_Config@baud 0076  
              ___fladd@a 0056                ___fladd@b 0052               fround@prec 0051  
              ___fldiv@a 003E                ___fldiv@b 0042                ___flmul@a 0028  
              ___flmul@b 0024                ___flsub@a 0066                ___flsub@b 006A  
              ___latbits 0002            __pcstackBANK0 0020            __pcstackBANK1 00A0  
        ?_ADC_Convertion 0070              sprintf@ccnt 00AF              sprintf@flag 00B1  
            sprintf@eexp 00B7              sprintf@fval 00C0              sprintf@prec 00BE  
       ___lwdiv@dividend 0078                 ?___fladd 0052                 ?___fldiv 003E  
               ?___awdiv 0077                 ?___flneg 0070                 ?___awmod 0070  
               ?___flmul 0024                 ?___flsub 0066                 ?___fltol 0051  
               ?___lldiv 0070                 ?___llmod 0070                __npowers_ 183A  
             ?__Umul8_16 0070                 ?___lwdiv 0076                 ?___lwmod 0070  
      UART_Transmit@data 0070                _bufferLen 00CE                __pstrings 1800  
            __tdiv_to_l_ 0883             ??__div_to_l_ 0078                 ?_isdigit 0070  
               _ADC_Read 100C              ADC_Read@CHx 0074                _scale$956 004C  
       ___lwdiv@quotient 007B                 ?_sprintf 00A0            _UART_SendData 1D0F  
         ___wmul@product 0074            ??_UART_Config 0074                clear_ram0 1CD7  
          _UART_Transmit 1000       __end_of__div_to_l_ 0170               _ADCON0bits 001F  
            __stringbase 1805               _ADCON1bits 009F        ___wmul@multiplier 0070  
         ?_UART_SendData 0071           ?_UART_Transmit 0070      __end_of_UART_Config 1D48  
            ??__Umul8_16 0072       __end_of__stringtab 1806              _isdigit$786 0070  
             sprintf@val 00B3                 ___xxtofl 10D6          ___lwdiv@divisor 0076  
        ___lwdiv@counter 007D                 __ptext10 1D91                 __ptext11 0883  
               __ptext20 1CDF                 __ptext12 00B2                 __ptext21 1034  
               __ptext13 10D6                 __ptext22 1E36                 __ptext14 1D6C  
               __ptext23 1190                 __ptext15 1E84                 __ptext24 1D0F  
               __ptext16 1F31                 __ptext25 1000                 __ptext17 0807  
               __ptext26 1D26                 __ptext18 1D48                 __ptext27 100C  
               __ptext19 1578                 __ptext28 1CFC                 __powers_ 1806  
               _bufferTx 00D0         ??_ADC_Convertion 0070          ??_UART_SendData 0072  
               isdigit@c 0071                 scale@scl 0050                sprintf@ap 00AE  
       __tdiv_to_l_@exp1 0025         __tdiv_to_l_@cntr 0024                sprintf@sp 00BD  
       __tdiv_to_l_@quot 0020         ___lwmod@dividend 0072          ??_UART_Transmit 0070  
       ___lldiv@dividend 0074              _UART_Config 1D26                stringcode 1800  
           ?__tdiv_to_l_ 0070   __Umul8_16@multiplicand 0070                 sprintf@c 00C4  
               sprintf@f 00A0         ___lldiv@quotient 0079          ___lwmod@divisor 0070  
     UART_Config@baudios 0070          ___lwmod@counter 0075                 stringdir 1800  
               stringtab 1800            ___fladd@signs 0062             ___fladd@aexp 0063  
           ___fladd@bexp 0064     __Umul8_16@multiplier 0078        __Umul8_16@product 0074  
